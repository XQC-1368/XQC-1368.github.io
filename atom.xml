<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XQC1368的emo小屋</title>
  
  <subtitle>嬛嬛，朕emo啦！！</subtitle>
  <link href="https://xqc-1368.github.io/atom.xml" rel="self"/>
  
  <link href="https://xqc-1368.github.io/"/>
  <updated>2024-08-27T12:08:14.129Z</updated>
  <id>https://xqc-1368.github.io/</id>
  
  <author>
    <name>XQC1368</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用电信号传输TCP/IP数据</title>
    <link href="https://xqc-1368.github.io/2024/08/27/02%20%E7%94%A8%E7%94%B5%E4%BF%A1%E5%8F%B7%E4%BC%A0%E8%BE%93TCP%20IP%E6%95%B0%E6%8D%AE/"/>
    <id>https://xqc-1368.github.io/2024/08/27/02%20%E7%94%A8%E7%94%B5%E4%BF%A1%E5%8F%B7%E4%BC%A0%E8%BE%93TCP%20IP%E6%95%B0%E6%8D%AE/</id>
    <published>2024-08-27T11:48:56.580Z</published>
    <updated>2024-08-27T12:08:14.129Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第二章-用电信号传输tcpip数据"><a class="markdownIt-Anchor" href="#第二章-用电信号传输tcpip数据"></a> 第二章 用电信号传输TCP/IP数据</h3><p><strong>关键词：TCP/IP，套接字，协议栈，IP地址，端口号，包，头部，网卡，网卡驱动，MAC地址，以太网控制器，ICMP，UDP</strong></p><h5 id="一-创建套接字"><a class="markdownIt-Anchor" href="#一-创建套接字"></a> 一、创建套接字</h5><h6 id="1-协议栈的内部结构"><a class="markdownIt-Anchor" href="#1-协议栈的内部结构"></a> 1、协议栈的内部结构</h6><p>TCP/IP软件采用分层结构：上层会向下层委派任务</p><p><img src="/images/2024-08-06-20-01-55-image.png" alt="" /></p><p>协议栈位于操作系统内部，协议栈内部包括上下两个部分。</p><ul><li><p>上面部分包括：</p><ul><li><p>TCP模块，负责用TCP协议收发数据，</p></li><li><p>UDP模块，负责用UDP协议收发数据。</p></li></ul><p>适用范围：</p><ul><li><p>像浏览器、邮件等一般的应用程序都是使用TCP收发数据的；</p></li><li><p>像DNS查询等，收发较短的控制数据时，则使用UDP模块。</p></li></ul></li><li><p>下面一半是IP模块，是用IP协议控制网络包收发操作的部分。</p><p>IP模块：负责将数据切分成一个个网络包，以这种方式在互联网上传输。</p><p>IP模块中还包含 <code>ICMP协议模块</code> 和 <code>ARP协议模块</code>：</p><ul><li><p>ICMP协议模块：告知网络包传送过程中产生的错误，以及各种控制信息</p></li><li><p>ARP协议模块：根据IP地址查询相应的以太网MAC地址。</p></li></ul></li><li><p>网卡驱动程序：负责控制网卡硬件</p></li><li><p>网卡：负责实际的收发操作，对网线中的信号执行发送、接收操作</p></li></ul><h6 id="2-套接字的实体就是通信控制信息"><a class="markdownIt-Anchor" href="#2-套接字的实体就是通信控制信息"></a> 2、套接字的实体就是通信控制信息</h6><p>套接字：在协议栈内部一块用于存放控制信息的内存空间</p><p>功能：记录用于控制通信操作的控制信息。</p><p>（通信对象的IP地址、端口号、通信操作的进行状态：是否收到响应，发送数据已经经过了多长时间）</p><p>netstat命令：Windows的命令行中输入netstat则显示套接字内容</p><p><img src="/images/2024-08-06-22-04-24-image.png" alt="" /></p><p>进程标识符（PID，Process ID）：操作系统为了标识程序而分配的编号，使用任务管理器可以查询所对应的程序名称</p><ul><li><p>第8行：表示进程标识符（PID）为4的程序正在使用IP地址为10.10.1.16的网卡与IP地址为10.10.1.80的对象进行通信</p></li><li><p>第1行：表示进程标识符（PID）为984的程序正在135端口等待另一方的连接，其中本地IP与远程IP都为0.0.0.0，表示通信还没开始</p></li></ul><h6 id="3-调用socket时的操作"><a class="markdownIt-Anchor" href="#3-调用socket时的操作"></a> 3、调用socket时的操作</h6><p><img src="/images/2024-08-06-22-37-31-0932d0e5fdcd6b8af6c82225fe5085f.jpg" alt="" /></p><ul><li><p>创建套接字阶段：调用socket申请创建套接字，写入初始状态的控制信息。将套接字的描述符返回给应用程序。</p></li><li><p>描述符是给应用程序区分不同套接字的标识，在收发信息的时候使用。</p></li></ul><h5 id="二-连接服务器"><a class="markdownIt-Anchor" href="#二-连接服务器"></a> 二、连接服务器</h5><h6 id="1-连接"><a class="markdownIt-Anchor" href="#1-连接"></a> 1、连接</h6><p>连接（Connect）：通信双方交换控制信息。</p><p>连接操作的目的：</p><ol><li><p>客户端向服务器传达开始通信请求，并告知服务器自己的IP地址和端口号（提供给服务器的套接字）</p></li><li><p>把服务器的IP地址和端口号写入套接字。</p></li><li><p>分配缓冲区，临时存放要收发的数据的内存空间</p></li></ol><h6 id="2-负责保存控制信息的头部"><a class="markdownIt-Anchor" href="#2-负责保存控制信息的头部"></a> 2、负责保存控制信息的头部</h6><p><u>第一类</u>控制信息：存放控制信息的头部——TCP头部</p><p>存放：客户端与服务器相互联络时，交换的控制信息</p><p>依据协议：TCP协议</p><p>记录内容：通信双方的端口号，序号（发送数据的顺序编号），ACK号（接受数据的顺序编号）</p><p><img src="/images/2024-08-06-22-59-57-84993837e21edcfffa2a9dc2349f65c.jpg" alt="" /></p><p>在连接阶段发送的网络包没有实际的数据，只有控制信息，如下图b所示</p><p><img src="/images/2024-08-06-23-05-21-9bce43ea94eea89518a7acebf16008d.jpg" alt="" /></p><p><u>第二类</u>控制信息：保存在套接字中，用来控制协议栈操作的信息</p><h6 id="3-连接操作的实际过程"><a class="markdownIt-Anchor" href="#3-连接操作的实际过程"></a> 3、连接操作的实际过程</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connect(&lt;描述符&gt;,&lt;服务器IP地址和端口号&gt;,……)</span><br></pre></td></tr></table></figure><ol><li>客户端发送</li></ol><ul><li><p>客户端创建一个TCP头部</p></li><li><p>通过双方端口的信息，客户端（发送方）的套接字 准确找到服务器（接收方）的套接字</p></li><li><p>将TCP头部的控制位SYN比特设置为1，ACK控制位未初始化，为0；<u>设置序号字段的值（后面会有解释）</u></p></li><li><p>设置合适的序号和窗口大小</p></li></ul><ol start="2"><li>服务器返回</li></ol><ul><li><p>TCP模块将信息传递给IP模块并委托IP模块进行发送，服务器上的IP模块传递给服务器的TCP模块，服务器的TCP模块 通过TCP头部记录的端口号 找到对应的套接字。</p></li><li><p>修改找到的套接字状态为“正在连接”</p></li><li><p>返回响应：需要在返回的网络包的TCP头部将SYN设置为1（如果不同意连接则将RST设置为1），同时将ACK控制位设置为1</p></li></ul><ol start="3"><li>客户端接收</li></ol><ul><li><p>返回客户端后，若SYN位为1，则会向套接字中写入服务器的IP地址、端口号等信息</p></li><li><p>将状态改为“连接完毕”</p></li><li><p>客户端将ACK比特设置为1的一个网络包发回服务器，告知服务器刚才的响应已经收到</p></li></ul><p>当服务器收到这个返回包后，连接操作完成</p><h5 id="三-收发数据"><a class="markdownIt-Anchor" href="#三-收发数据"></a> 三、收发数据</h5><h6 id="1-将http请求交给协议栈"><a class="markdownIt-Anchor" href="#1-将http请求交给协议栈"></a> 1、将HTTP请求交给协议栈</h6><p>数据的收发操作的开始：应用程序调用write</p><p><img src="/images/2024-08-07-11-08-56-0932d0e5fdcd6b8af6c82225fe5085f.jpg" alt="" /></p><p>发送数据的特点：</p><ul><li><p>协议栈不关心数据的内容</p></li><li><p>协议栈是先将数据存放在内部的发送缓冲区，并等待下一段数据，数据积累到一定量后再发送</p></li></ul><p>判断是否执行发送的指标：</p><ul><li><p>1.每个网络包能容纳的数据长度：MTU（网络包最大长度，包含头部），MSS（网络包最大数据长度，MTU-头部长度）</p><p><img src="/images/2024-08-07-11-26-42-71c7a3e2f3e382f0158f8d72941d929.jpg" alt="" /></p></li><li><p>2.时间：协议栈内部有计时器，当经过一个最长时间的阈值后就发送一次</p></li><li><p>注：也可以由应用程序来控制发送时机</p></li><li><p>注2：像浏览器这样的会话型应用程序在向服务器发送数据时，等待缓冲区填满太消耗时间，因此一般选择直接发送</p></li></ul><h6 id="2-对较大的数据进行拆分"><a class="markdownIt-Anchor" href="#2-对较大的数据进行拆分"></a> 2、对较大的数据进行拆分</h6><p>适用情况：发送缓冲区中数据长度超过MSS</p><p>实现：1. 发送缓冲区的数据会被以MSS进行拆分    2. 每一块前面加上TCP头部</p><p><img src="/images/2024-08-07-11-38-33-2912d0ec2ea03960a8f344a8c3c7b14.jpg" alt="" /></p><h6 id="3-使用ack号确认网络包已收到"><a class="markdownIt-Anchor" href="#3-使用ack号确认网络包已收到"></a> 3、使用ACK号确认网络包已收到</h6><p>序号：TCP在拆分数据时，会事先计算好每一块数据相当于从头开始的第几个字节，写入序号</p><p>每次发送时会告知：</p><p>1.当前序号</p><p>2.接收方可以计算该包的数据长度（<u>等价于告知</u>）（=MTU-MSS）</p><p>有了以上两个数值，我们就知道发送的数据是从第几个字节开始，长度是多少</p><p><img src="/images/2024-08-07-11-55-29-067bf74e19439c016004e60ce84628c.jpg" alt="" /></p><p>ACK号：确认响应。</p><p>接收方会将到目前为止  接收到的数据长度加起来，计算出收到了多少字节，写入ACK号返回给发送方，告诉其已经收到这些数据。</p><p>注：实际上，序号并不都是从1开始的</p><p><strong>上面内容的解释</strong>：生成一个序号初始值，并告知通信对方约定的序号初始值。</p><p>通信过程（以下编号对应图中编号）</p><p>连接阶段：</p><ol><li><p>客户端计算 客户端的数据的序号初始值，发给服务器</p></li><li><p>服务器返回ACK号响应；服务器返回 服务器端的数据的序号初始值，发给客户端</p></li><li><p>客户端收到服务器的序号初始值后，返回ACK号响应</p></li></ol><p>数据收发阶段：</p><ol start="4"><li><p>给出序号+数据</p></li><li><p>返回ACK号</p></li></ol><p>…… …… ……</p><p><img src="/images/2024-08-07-12-09-16-image.png" alt="" /></p><h6 id="4-根据网络包往返时间调整ack号超时时间"><a class="markdownIt-Anchor" href="#4-根据网络包往返时间调整ack号超时时间"></a> 4、根据网络包往返时间调整ACK号超时时间</h6><ul><li><p>超时时间设定的必要性：</p><p>当网络繁忙时，发生堵塞，若很快判定为丢包而执行再次发送，则会出现ACK号姗姗来迟，而发出很多重复多余的包导致网络雪上加霜。</p></li><li><p>动态调整时间：根据ACK号返回时间判断超时时间。</p><ul><li>如果返回时间慢，则响应延长超时时间；相对的，如果ACK号马上就能返回，则缩短超时时间</li></ul></li></ul><h6 id="5-使用窗口有效管理ack号"><a class="markdownIt-Anchor" href="#5-使用窗口有效管理ack号"></a> 5、使用窗口有效管理ACK号</h6><p>滑动窗口：在发送一个包后，不等待ACK返回，而是直接发送后续的一系列包。可以有效利用等待ACK号的时间</p><p><img src="/images/2024-08-07-19-12-35-71931ecae2dd07d5eea2b66bb42b9d3.jpg" alt="" /></p><p>但如果不等待返回就发送ACK号就连续发送数据包，就有可能出现发送包的频率超过对方的处理能力的情况。</p><ol><li><p>当接收方的TCP模块收到包后，会将数据存放到接收缓冲区。</p></li><li><p>接收方需要计算ACK号返回客户端，并将数据块组装起来还原成原本数据，传递给应用程序</p></li></ol><p>注：如果这些操作还没完成就收到了下一个包，下一个包会被存在接收缓冲区中。</p><p>接收不过来的时候，势必导致缓冲区溢出</p><p>所以，改进如下：</p><p>接收方事先告知发送方自己最多能接收多少数据，然后发送方根据这个值对还剩的缓存区空间进行计算得知（总缓冲区容量-已经发送的信息量）</p><p><img src="/images/2024-08-07-19-36-42-87a264ef6bbcbc367f50582b8fcdeed.jpg" alt="" /></p><p>当有从缓冲区取出的操作时，会重新告知客户端还剩的缓冲区空间（更新窗口），则客户端更新缓冲区剩余容量的数据并给后续应用</p><h6 id="6-ack号和窗口号的同步发送"><a class="markdownIt-Anchor" href="#6-ack号和窗口号的同步发送"></a> 6、ACK号和窗口号的同步发送</h6><p>注：合并ACK号的发送和窗口更新的发送，从而减少包的数量</p><p>注2：连续发送多个ACK号时，只用发送最后一个即可，也可以减少包的数量</p><h6 id="7-接收http响应消息"><a class="markdownIt-Anchor" href="#7-接收http响应消息"></a> 7、接收HTTP响应消息</h6><ol><li><p>应用程序调用read程序来获取响应消息，应用程序此时read操作会被挂起，直到FINISH包到达时应用程序才会真正开始读取数据</p></li><li><p>控制流程转移到协议栈。协议栈从接收缓冲区中取出数据，根据TCP头部判断是否有数据缺失，若没有则传递给应用程序。再返回ACK号</p></li><li><p>将控制流程交给应用程序</p></li></ol><h5 id="四-从服务器断开并删除套接字"><a class="markdownIt-Anchor" href="#四-从服务器断开并删除套接字"></a> 四、从服务器断开并删除套接字</h5><h6 id="1-数据发送完毕后断开连接"><a class="markdownIt-Anchor" href="#1-数据发送完毕后断开连接"></a> 1、数据发送完毕后断开连接</h6><p>数据发送完毕的一方发起断开过程。（以下假设服务器一方发起断开过程）</p><ol><li><p>服务器应用程序调用Socket库的close程序</p></li><li><p>服务器协议栈生成包含断开信息（将控制位中的FIN设为1）的TCP头部的包（暂命名为FINISH包）</p></li><li><p>当客户端收到FINISH包之后，会返回一个ACK号</p></li><li><p>应用程序开始通过read读取数据。</p></li><li><p>客户端程序调用close来结束数据收发操作。客户端也会生成一个FIN为1的TCP包，发给服务器，服务器返回ACK号表收到，通信结束。</p></li></ol><p><img src="/images/2024-08-07-20-33-19-image.png" alt="" /></p><h6 id="2-删除套接字"><a class="markdownIt-Anchor" href="#2-删除套接字"></a> 2、删除套接字</h6><p>套接字会等待一段时间再被删除，为了防止误操作。</p><h6 id="3-数据收发操作小结"><a class="markdownIt-Anchor" href="#3-数据收发操作小结"></a> 3、数据收发操作小结</h6><p><img src="/images/2024-08-07-21-45-26-d157df0815fbcaf5f680fdb9d0ca2ff.jpg" alt="" /></p><h5 id="五-ip与以太网的包收发操作"><a class="markdownIt-Anchor" href="#五-ip与以太网的包收发操作"></a> 五、IP与以太网的包收发操作</h5><h6 id="1-包及其收发操作"><a class="markdownIt-Anchor" href="#1-包及其收发操作"></a> 1、包及其收发操作</h6><p>包=头部+数据</p><p>头部：目的地址等控制信息</p><p><img src="/images/2024-08-07-22-13-38-01f90b6c878158b7a7a8933a45a832f.jpg" alt="" /></p><p>转发过程：</p><p>（1）路由器（按照IP协议）根据目标地址判断下一个路由器的位置</p><p>（2）集线器（按照以太网规则）在子网中将网络包传给下一个路由</p><p><img src="/images/2024-08-07-22-25-28-edd95d2e081a1b2fe0be02e0b85ea5e.jpg" alt="" /></p><p>TCP/IP包 包含：</p><ul><li><p>MAC头部（用于以太网协议）</p></li><li><p>IP头部（用于IP协议）</p></li></ul><p>IP头部：访问服务器的IP地址（不变），其他目的服务器的控制信息</p><p>MAC头部：IP协议查找出的下一个路由器的IP地址（每次到一个<u>路由器</u>，被改写为下一个路由的IP地址，遇到集线器不变），最近路由器的控制信息<br /><img src="/images/2024-08-07-22-19-57-4b54748e37c4d9f91f1f64c6906f265.jpg" alt="" /></p><p>以太网平替：无线局域网，ADSL，FTTH</p><p>包收发操作的过程：</p><p><img src="/images/2024-08-07-22-25-16-d1164e83ca180e0e581634470b68bb0.jpg" alt="" /></p><h6 id="2-生成ip头部"><a class="markdownIt-Anchor" href="#2-生成ip头部"></a> 2、生成IP头部</h6><ul><li><p>应用程序告诉TCP模块需要通信的服务器IP地址</p></li><li><p>TCP模块 告知IP模块 需要生成的IP头部 的IP地址部分的内容</p></li></ul><p>IP头部格式</p><p><img src="/images/2024-08-07-22-31-16-13ade9dee2de1a554b9db9976e8c898.jpg" alt="" /></p><p>IP头部的“接收方IP地址”填写通信对象的IP地址</p><p>发送方IP地址需要判断发送所使用的网卡，并填写该网卡的IP地址</p><p>显示路由表的内容：指令<code>route print</code></p><p><img src="/images/2024-08-07-22-32-27-fba18365ec45b9fd1302ad1d960780c.jpg" alt="" /></p><p>注：Gateway(网关)：在TCP/IP世界里就是路由器的意思</p><p>注2：只需看IP地址<u>网络号部分</u>是否一样即确定转发的网卡</p><p>注3：第一行中目标地址和子网掩码都是0.0.0.0表示默认网关。如果与其他的条目都无法匹配，则会执行这一条</p><h6 id="3-生成以太网的mac头部"><a class="markdownIt-Anchor" href="#3-生成以太网的mac头部"></a> 3. 生成以太网的MAC头部</h6><ul><li><p>由IP模块生成</p></li><li><p>包含：接收方和发送方的MAC地址</p><p><img src="/images/2024-08-27-20-00-50-cbe1477fce995f917c25d10fe32e6a5.jpg" alt="" /></p></li></ul><p>发送方MAC地址：网卡生产时写入ROM中的地址</p><p>（注：如果有多块网卡，则在设置发送方IP地址的时候，已经设置好了，只需要把对应IP地址网卡的MAC地址写进去即可）</p><p>接收方MAC地址：IP模块已经在路由表中查询到相匹配的条目，得到Gateway的IP地址，填入Gateway中的IP地址对应的MAC地址</p><p><strong>3.5 通过ARP查询目标路由器的MAC地址</strong></p><ul><li>ARP（地址解析协议）就是向所有设备，发出广播，给出Gateway的IP地址，请求其MAC地址。</li></ul><p><img src="/images/2024-08-27-20-00-41-3c4caac8a020dc6d25bc0d6e37d277f.jpg" alt="" /></p><ul><li><p>注：路由表设置正确的话，该设备应该和Gateway在同一个子网中：</p><p>如果操作成功，即可得到MAC地址</p><p>操作失败，子网内设备无一ARP响应。认为对方不存在，包发送操作失败</p></li><li><p>ARP缓存</p><p>ARP查询结果的暂存位置</p><p>在发送包前，优先访问ARP缓存，如果其中已经保存了对方的MAC地址，就不需要查询了</p><p><img src="/images/2024-08-27-20-00-21-dd80d762f48af995dbc0646993cba51.jpg" alt="" /></p><ul><li>注：为了防止IP改变导致ARP中存储信息发生改变的问题，ARP缓存中的值过一段时间会被删除，需要重新获取</li></ul></li></ul><h6 id="4-网卡将ip包转换成电or光信号发送出去"><a class="markdownIt-Anchor" href="#4-网卡将ip包转换成电or光信号发送出去"></a> 4. 网卡：将IP包转换成电or光信号发送出去</h6><p>背景：IP模块生成的网络包只是放在内存中的一串数字信息</p><p>网卡的内部结构</p><p><img src="/images/2024-08-27-19-59-51-9827960a438cff0da48aff40ca86e9a.jpg" alt="" /></p><p>由此可见，网卡的MAC地址是保存在网卡ROM中的（生产时写入），在运行网卡驱动程序的时候，ROM中的MAC地址会被网卡驱动程序读取，分配给MAC模块</p><ul><li><p>网卡的初始化操作</p><ul><li><p>开机后网卡驱动程序对网卡的初始化操作</p></li><li><p>包含硬件错误检查，初始设置等步骤</p></li></ul></li></ul><p><strong>网卡MAC模块加入的3个控制数据</strong></p><p>网卡驱动从IP模块读取包，复制到网卡缓冲区，向MAC模块发送包的命令</p><p>MAC模块的工作</p><ol><li><p>将包从缓冲区取出</p></li><li><p>在开头加上报头、起始帧分界符</p></li><li><p>在末尾加上帧校验序列：用于检测错误</p></li></ol><p><img src="/images/2024-08-27-20-01-25-2145e0f130253f79b08eb5c40d6a04d.jpg" alt="" /></p><p>报头（56bit）：101010循环的序列</p><p><img src="/images/2024-08-27-20-01-42-8700bd1b82acb0697cc101a9d1e388d.jpg" alt="" /></p><ul><li><p>作用：确定时机，判断每个比特信号的中间位置</p><p><img src="/images/2024-08-27-20-01-57-b01908c0df23876f2649e9f9f4aaf5d.jpg" alt="" /></p><p>当信号连续为1，或者连续为0时，比特之间的界限就会消失，此时如果以时钟信号为参照，就可以分别0,1。但是这样并不方便传输（传输导致时钟偏移）</p><p>为了方便传输，需要将时钟信号叠加进去，可以判断出比特之间的界限：</p></li><li><p>数据信号为1，时钟为上升沿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 叠加为下降沿</p></li><li><p>数据信号为0，时钟为下降沿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 叠加为上升沿</p></li></ul><p>接收方需要对信号进行观察，才能找到周期规律，此时报头的作用就是一段用来测量时钟信号的特殊信号</p><p>起始帧分界符（SFD）（8bit）：0101011</p><ul><li>作用：生成后，波形不同，对方网卡将此处作为起始位置</li></ul><p>帧校验序列（FCS）：检查包传输过程中因噪声导致的波形紊乱，数据错误</p><p>（当原始数据有一个发生变化的时候，计算结果就会变化，接受方就可以判断有无错误）</p><h6 id="5-mac模块和phymau模块发送网络包"><a class="markdownIt-Anchor" href="#5-mac模块和phymau模块发送网络包"></a> 5. MAC模块和PHY(MAU)模块发送网络包</h6><ol><li><p>MAC 模块从报头开始将数字信息转换成电信号</p><ul><li>数字信号转换为电信号的速率，就是网络的传输速率</li></ul></li><li><p>PHY(MAU)模块负责发送</p><p>PHY(MAU)模块将MAC模块传来的数据转换成可在网线上传输的格式</p></li></ol><ul><li>PHY(MAU)模块的功能：格式转换，发送数据，监控有无信号进入（在半双工模式下，不检测可能会发生信号碰撞）</li></ul><p>PHY （物理层装置）和MAU（介质连接单元）仅仅是叫法不一样，其他一样</p><h6 id="6-接收返回包"><a class="markdownIt-Anchor" href="#6-接收返回包"></a> 6. 接收返回包</h6><p>半双工模式下，设备接收所有信号，然后执行相反的过程</p><ol><li><p>PHY(MAU)模块将信号转换为通用格式，发给MAC模块</p></li><li><p>MAC 模块将电信号转换为数字信号，存放到缓冲区</p></li><li><p>MAC模块检查帧校验序列（FCS），发现有错误则丢弃</p></li><li><p>检查接收方MAC地址，是否和自己的一样，不一样则丢弃</p></li><li><p>通知计算机收到一个包：</p><p>网卡向扩展总线里的中断信号线发送信号</p><p>CPU暂时挂起处理任务，切换到操作系统中的中断处理程序</p><p>中断处理程序调用网卡驱动，接收网卡发来的数据</p></li><li><p>网卡驱动被调用：</p><p>网卡驱动程序会从网卡的缓冲区取出收到的包</p><p>通过MAC头部中的以太类型判断协议的类型：</p><ul><li><p>0080h表示IP协议，驱动会把包交给TCP/IP协议栈</p></li><li><p>809Bh表示AppleTalk协议，驱动会把包交给AppleTalk协议栈</p></li></ul><p>讨论最普遍的情况，识别到0080h，网卡将包按照以太类型交给协议栈</p></li><li><p>协议栈的IP模块：</p><p>功能1：IP检查</p><p>检查头部格式和IP地址。如果发现该包不是自己的，那么IP模块会通过ICMP消息将错误告知发送方（由下表可知，通过设置过Destination unreachable的值的包，发送回发送方即可）</p><p><img src="/images/2024-08-27-20-02-15-f610911631843cc658bf33d33e19409.jpg" alt="" /></p><p>功能2：分片重组</p><p>IP将分片之后（如果有分片）的包还原成原始的包：（分片重组）</p><ul><li>IP模块会将收到的包暂存在其内存空间中，然后等待IP头部具有相同ID的包全部到达</li></ul><p>分片重组的依据：同一个包所有分片都具有相同的ID，且都具有分片偏移量字段，表示当前分片在整个包中的位置</p><p>功能3：把包交给TCP/IP模块</p></li><li><p>协议栈的TCP/IP模块：</p><p>功能：根据IP头部中<u>接收方和发送方的IP地址</u>，以及TCP头部中的<u>接收方和发送方端口号</u>来查找对应的套接字。决定需要的操作是什么</p></li><li><p>协议栈会判断这个包交给哪个应用程序</p></li></ol><h5 id="五-udp协议的收发操作"><a class="markdownIt-Anchor" href="#五-udp协议的收发操作"></a> 五、UDP协议的收发操作</h5><p>回忆：向DNS 服务器查询IP地址的时候，用得到；音频数据等实时更新的数据（重发无意义），用得到；</p><p>UDP协议：数据短小，一般只用一个包，不用考虑哪个包未送达。只负责单纯发送包，不监控是否到达。出错就收不到对方回复，过一段时间重发即可</p><p>做法：用UDP代替TCP，去掉TCP头部，代以UDP头部，其他一样</p><p><img src="/images/2024-08-27-20-02-32-d878b15d542671517587f23a52a9feb.jpg" alt="" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;第二章-用电信号传输tcpip数据&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#第二章-用电信号传输tcpip数据&quot;&gt;&lt;/a&gt; 第二章 用电信号传输TCP/IP数据&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;关键词：TCP/IP，套接字，协议栈</summary>
      
    
    
    
    <category term="计算机网络" scheme="https://xqc-1368.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="TCP/IP" scheme="https://xqc-1368.github.io/tags/TCP-IP/"/>
    
    <category term="套接字" scheme="https://xqc-1368.github.io/tags/%E5%A5%97%E6%8E%A5%E5%AD%97/"/>
    
    <category term="协议栈" scheme="https://xqc-1368.github.io/tags/%E5%8D%8F%E8%AE%AE%E6%A0%88/"/>
    
    <category term="IP地址" scheme="https://xqc-1368.github.io/tags/IP%E5%9C%B0%E5%9D%80/"/>
    
    <category term="端口号" scheme="https://xqc-1368.github.io/tags/%E7%AB%AF%E5%8F%A3%E5%8F%B7/"/>
    
    <category term="网卡" scheme="https://xqc-1368.github.io/tags/%E7%BD%91%E5%8D%A1/"/>
    
    <category term="MAC地址" scheme="https://xqc-1368.github.io/tags/MAC%E5%9C%B0%E5%9D%80/"/>
    
    <category term="UDP" scheme="https://xqc-1368.github.io/tags/UDP/"/>
    
    <category term="ICMP" scheme="https://xqc-1368.github.io/tags/ICMP/"/>
    
  </entry>
  
  <entry>
    <title>8 高级语言</title>
    <link href="https://xqc-1368.github.io/2024/08/19/8%20%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%80/"/>
    <id>https://xqc-1368.github.io/2024/08/19/8%20%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%80/</id>
    <published>2024-08-19T11:53:47.635Z</published>
    <updated>2024-08-19T11:52:43.496Z</updated>
    
    <content type="html"><![CDATA[<h3 id="高级语言"><a class="markdownIt-Anchor" href="#高级语言"></a> 高级语言</h3><h5 id="一-低级语言汇编语言"><a class="markdownIt-Anchor" href="#一-低级语言汇编语言"></a> 一、低级语言：汇编语言</h5><ul><li><p>与硬件关系紧密</p></li><li><p>比机器语言要简单，但微处理器不能解释汇编语言</p></li><li><p>汇编器（本身也是一个COM文件）：把汇编语言转换成机器语言，把ASM文件转换成COM文件（ASM文件：汇编语言文件 / 源代码文件）</p></li><li><p>交叉汇编：用汇编器做一个汇编器</p></li><li><p>缺点：</p><ul><li><p>非常乏味，微处理器芯片级的编程，微小的细节</p></li><li><p>不可“移植”</p></li></ul></li></ul><h5 id="二-高级语言"><a class="markdownIt-Anchor" href="#二-高级语言"></a> 二、高级语言</h5><ul><li><p>编译器：将高级语言转换成机器码</p></li><li><p>好处：易用性；可移植性</p></li><li><p>坏处：没有让处理器变强大；不能使用某些处理器的特有功能</p></li><li><p>第一个编译器——A-0</p></li><li><p>最古老的高级语言——FORTRAN</p></li><li><p>第一个商务系统所使用的程序设计语言——COBOL</p></li></ul><p>支持读取记录(record)和生成报表(report)</p><ul><li><p>IBM PL/I融合了：</p><ul><li><p>ALGOL的块结构</p></li><li><p>FORTRAN的数学函数功能</p></li><li><p>COBOL处理记录和报表的能力</p></li></ul></li><li><p>解释性语言：解释器采取边读边执行的方式，不会产生新的文件（原理简单，但执行慢）</p></li><li><p>编译性语言：编译器读取源文件并生成一个可执行文件</p></li><li><p>Pascal语言：继承了ALGOL的大部分结构；COBOL的记录处理功能</p></li><li><p>集成开发环境：程序的文本编辑器和编译器集成在一起，方便运行调试</p></li><li><p>C（Resource From B语言（Basic CPL语言的精简版本））：UNIX完全基于C语言重写</p><ul><li><p>c语言：支持移位操作与按位布尔运算操作</p></li><li><p>指针(pointer)：数字化描述内存地址<br />“高级汇编语言”：C语言操作集和通用处理器的指令集接近值程度更高</p></li></ul></li></ul><p>所有的类ALGOL语言设计模式都是基于冯·诺依曼计算机体系的。此类语言进行改进后产生了主要应用在图形化操作系统中的面向对象程序设计语言。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;高级语言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#高级语言&quot;&gt;&lt;/a&gt; 高级语言&lt;/h3&gt;
&lt;h5 id=&quot;一-低级语言汇编语言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#一-低级语言汇编语言&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="《code编码：隐匿在计算机软硬件背后的语言》" scheme="https://xqc-1368.github.io/categories/%E3%80%8Acode%E7%BC%96%E7%A0%81%EF%BC%9A%E9%9A%90%E5%8C%BF%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BD%AF%E7%A1%AC%E4%BB%B6%E8%83%8C%E5%90%8E%E7%9A%84%E8%AF%AD%E8%A8%80%E3%80%8B/"/>
    
    
    <category term="《code编码》" scheme="https://xqc-1368.github.io/tags/%E3%80%8Acode%E7%BC%96%E7%A0%81%E3%80%8B/"/>
    
    <category term="编译原理" scheme="https://xqc-1368.github.io/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    <category term="汇编语言" scheme="https://xqc-1368.github.io/tags/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>7 定点数与浮点数</title>
    <link href="https://xqc-1368.github.io/2024/08/19/7%20%E5%AE%9A%E7%82%B9%E6%95%B0%E4%B8%8E%E6%B5%AE%E7%82%B9%E6%95%B0/"/>
    <id>https://xqc-1368.github.io/2024/08/19/7%20%E5%AE%9A%E7%82%B9%E6%95%B0%E4%B8%8E%E6%B5%AE%E7%82%B9%E6%95%B0/</id>
    <published>2024-08-19T11:53:47.632Z</published>
    <updated>2024-08-19T11:52:04.465Z</updated>
    
    <content type="html"><![CDATA[<h3 id="定点数与浮点数"><a class="markdownIt-Anchor" href="#定点数与浮点数"></a> 定点数与浮点数</h3><h5 id="一-定点格式数"><a class="markdownIt-Anchor" href="#一-定点格式数"></a> 一、定点格式数</h5><ul><li>钱款、账户</li></ul><h5 id="二-浮点格式数"><a class="markdownIt-Anchor" href="#二-浮点格式数"></a> 二、浮点格式数</h5><ul><li><p>极大数或极小数</p></li><li><p>科学计数法（单精度）</p><ul><li><p>1位符号位s</p></li><li><p>8位指数位e</p></li><li><p>23位有效数位f（精度为24位，包含“.f”左边默认的1）<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>s</mi></msup><mo>×</mo><mn>1.</mn><mi>f</mi><mo>×</mo><msup><mn>2</mn><mrow><mi>e</mi><mo>−</mo><mn>127</mn></mrow></msup></mrow><annotation encoding="application/x-tex">(-1)^s\times 1.f\times 2^{e-127}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">7</span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>127为单精度浮点数的偏移量（从0<sub>255到-127</sub>128）</p></li></ul></li></ul><p>单精度(float)与双精度(double)</p><ul><li><p>浮点数的加法：先移位再运算</p></li><li><p>浮点数的乘法：有效数相乘，指数部分相加</p></li><li><p>8087数字协同处理芯片=浮点运算单元（FPU）=协处理器，现在FPU已经内建在CPU内部了</p></li><li><p>当CPU读到ESC时，协处理器开始工作，协处理器会以固有的方式执行存放在ROM的指令序列</p></li></ul><h1 id=""><a class="markdownIt-Anchor" href="#"></a> </h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;定点数与浮点数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#定点数与浮点数&quot;&gt;&lt;/a&gt; 定点数与浮点数&lt;/h3&gt;
&lt;h5 id=&quot;一-定点格式数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#一-定点格式数</summary>
      
    
    
    
    <category term="《code编码：隐匿在计算机软硬件背后的语言》" scheme="https://xqc-1368.github.io/categories/%E3%80%8Acode%E7%BC%96%E7%A0%81%EF%BC%9A%E9%9A%90%E5%8C%BF%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BD%AF%E7%A1%AC%E4%BB%B6%E8%83%8C%E5%90%8E%E7%9A%84%E8%AF%AD%E8%A8%80%E3%80%8B/"/>
    
    
    <category term="《code编码》" scheme="https://xqc-1368.github.io/tags/%E3%80%8Acode%E7%BC%96%E7%A0%81%E3%80%8B/"/>
    
    <category term="浮点数" scheme="https://xqc-1368.github.io/tags/%E6%B5%AE%E7%82%B9%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>6 操作系统Operation System</title>
    <link href="https://xqc-1368.github.io/2024/08/19/6%20%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9FOperation%20System/"/>
    <id>https://xqc-1368.github.io/2024/08/19/6%20%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9FOperation%20System/</id>
    <published>2024-08-19T11:53:47.629Z</published>
    <updated>2024-08-19T11:51:19.970Z</updated>
    
    <content type="html"><![CDATA[<h3 id="操作系统operation-system"><a class="markdownIt-Anchor" href="#操作系统operation-system"></a> 操作系统Operation System</h3><h5 id="一-初始化代码-键盘处理程序-命令处理程序"><a class="markdownIt-Anchor" href="#一-初始化代码-键盘处理程序-命令处理程序"></a> 一、初始化代码、键盘处理程序、命令处理程序</h5><ul><li><p>初始化代码：</p><p>背景：所有的RAM启动时都包含随机字节</p><ul><li><p>内存置为全空格</p></li><li><p>堆栈指针初始化</p></li><li><p>OUT指令实现光标复位</p></li><li><p>EI指令开启中断</p></li><li><p>HLT指令完成中断</p></li></ul></li><li><p>键盘处理程序：</p><p>当按下键盘按键的时候，微处理器就会响应，从初始化代码程序的末尾的HLT语句跳转到键盘处理程序。</p><ul><li><p>IN指令检测哪个按键被按下</p></li><li><p>RET指令返回</p></li><li><p>回显：把按下的键显示回原光标所在处。</p></li></ul></li><li><p>命令处理程序</p><ul><li><p>W命令（Write）：把若干字节写入内存</p></li><li><p>D命令（Display）：便于查看内存中的内容</p></li><li><p>R命令（Run）：运行程序，具体过程是：先把要执行程序开头地址存储到存储器HL中，再执行指令PCHL，把存储的值加载到程序计数器中，跳转到程序计数器指向的地址并运行程序。</p></li></ul></li></ul><h5 id="二-操作系统"><a class="markdownIt-Anchor" href="#二-操作系统"></a> 二、操作系统</h5><ul><li><p>文件系统：磁盘组织成文件，是操作系统的一部分</p></li><li><p>操作系统：许多软件构成的，庞大的程序集合。</p></li><li><p>操作系统的目录</p><ul><li><p>目录项：32字节（8080中）</p></li><li><p>8.3命名方式：aabbccdd.txt</p></li><li><p>目录项扩展：文件长度过长，两个目录项，第12字节一个置0一个置1，文件拼接</p></li></ul></li><li><p>CM/P：早期的8位微处理器操作系统</p></li><li><p>COM文件：二进制文件，存放机器码</p></li><li><p>操作系统的引导：当ROM存在时，RAM必须给ROM让位，内存一开始的那一部分属于ROM，在这里存储一段引导程序。开机后将引导程序加载到内存并运行。</p></li><li><p>内存空间组织架构</p><p>操作系统完成引导后，RAM的最高地址区域用来存放CP/M，加载完CP/M后，内存空间组织结构如下：</p></li></ul><table><thead><tr><th>0000h</th><th>系统参数</th></tr></thead><tbody><tr><td>0100h</td><td>临时程序区域(TPA)</td></tr><tr><td></td><td>控制台命令处理程序(CCP)【CP/M三大部分】</td></tr><tr><td></td><td>基本磁盘操作系统(BDOS)【CP/M三大部分】</td></tr><tr><td>最高地址</td><td>基本输入/输出系统(BIOS)【CP/M三大部分】</td></tr></tbody></table><ul><li>控制台可识别命令</li></ul><table><thead><tr><th>命令</th><th>内容</th></tr></thead><tbody><tr><td>DIR</td><td>显示磁盘的目录信息  DIR *.txt：显示所有txt文件</td></tr><tr><td>ERA</td><td>删除磁盘中的文件</td></tr><tr><td>REN</td><td>改变文件名</td></tr><tr><td>TYPE</td><td>显示文本文件的内容</td></tr><tr><td>SAVE</td><td>保存文件</td></tr></tbody></table><p>执行二进制文件：直接输入名字即可。</p><ul><li><p>实用程序：</p><ul><li><p>外设交换设备（PIP）：用于复制文件</p></li><li><p>文本编辑器（ED）：创建和修改文件</p></li></ul></li><li><p>应用程序接口（API）：</p><p>一些子程序，以操作系统为中介来访问硬件系统</p><ul><li><p>新建一个文件的工作：首先将文件地址保存到寄存器对DE中，再执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MVI C, 16h 调用的子程序地址</span><br><span class="line">CALL 5</span><br></pre></td></tr></table></figure><p><code>CALL 5</code>  执行过程：CP/M在0005h处设置了一条JMP指令（Jump），跳转到CP/M基本磁盘操作系统（BDOS），利用CP/M提供的其他功能向磁盘中创建的空文件写入内容，最后关闭文件。BDOS在工作时还要调用CP/M基本输入输出系统（BIOS），BIOS可以对硬件进行访问</p></li><li><p>总结：OS提供应用程序接口(API)，让程序能够方便地访问计算机的硬件。API是一个与设备无关(device-independent)的接口，它屏蔽了硬件之间的差异。使得CP/M的程序跨平台成为现实</p></li></ul></li><li><p>发展历史：</p><p>CP/M—&gt;MS-DOS</p><ul><li><p>文件系统以FAT形式，后来出现层次文件系统，根目录概念出现</p></li><li><p>将txt等叫作扩展名</p></li><li><p>将磁盘空间分成簇</p></li><li><p>新增EXE的可执行文件。</p><ul><li>后来新增：软件中断：不需要知道子程序地址直接执行中断。</li></ul></li></ul><p>Multics----&gt;UNIX</p><ul><li><p>可移植性好</p></li><li><p>时分复用技术：多个用户同时与计算机进行交互（多任务操作系统）</p></li><li><p>虚拟内存技术：暂时不需要内存放到磁盘的 ”临时文件“ 部分，需要时再调入内存</p></li></ul></li><li><p>GNU项目开发的Linux</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;操作系统operation-system&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#操作系统operation-system&quot;&gt;&lt;/a&gt; 操作系统Operation System&lt;/h3&gt;
&lt;h5 id=&quot;一-初始化代码-键盘处理程</summary>
      
    
    
    
    <category term="《code编码：隐匿在计算机软硬件背后的语言》" scheme="https://xqc-1368.github.io/categories/%E3%80%8Acode%E7%BC%96%E7%A0%81%EF%BC%9A%E9%9A%90%E5%8C%BF%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BD%AF%E7%A1%AC%E4%BB%B6%E8%83%8C%E5%90%8E%E7%9A%84%E8%AF%AD%E8%A8%80%E3%80%8B/"/>
    
    
    <category term="《code编码》" scheme="https://xqc-1368.github.io/tags/%E3%80%8Acode%E7%BC%96%E7%A0%81%E3%80%8B/"/>
    
    <category term="计算机组成原理" scheme="https://xqc-1368.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="操作系统" scheme="https://xqc-1368.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="机器语言" scheme="https://xqc-1368.github.io/tags/%E6%9C%BA%E5%99%A8%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>5 计算机组成原理：总线</title>
    <link href="https://xqc-1368.github.io/2024/08/19/5%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%EF%BC%9A%E6%80%BB%E7%BA%BF/"/>
    <id>https://xqc-1368.github.io/2024/08/19/5%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%EF%BC%9A%E6%80%BB%E7%BA%BF/</id>
    <published>2024-08-19T11:53:47.626Z</published>
    <updated>2024-08-19T11:50:23.072Z</updated>
    
    <content type="html"><![CDATA[<h3 id="计算机组成原理总线"><a class="markdownIt-Anchor" href="#计算机组成原理总线"></a> 计算机组成原理：总线</h3><h5 id="一-总线简介"><a class="markdownIt-Anchor" href="#一-总线简介"></a> 一、总线简介</h5><ul><li><p>集成电路是挂载（mounted）在电路板上的</p></li><li><p>总线的功能：</p><ul><li><p>电路板之间通过总线通信，通信信号包括：</p><ul><li><p>地址信号</p></li><li><p>数据输入/输出信号</p></li><li><p>控制信号</p></li></ul></li><li><p>供电作用</p></li></ul></li><li><p>早期流行的总线：S-100（designed for 8080）</p></li><li><p>扩展板：是一种可以插在主板上的模块化电路板，用于增强主板的功能和性能。扩展板提供了多种接口，用于与外部模块进行通信和控制操作</p></li><li><p>8088的扩展板提供了3个直接访问存储器（DMA）:采用此方法后，其他设备可以不通过微处理器而获得总线的控制权，进而直接对内存进行读写。</p></li><li><p>ISA：工业标准体系结构</p></li><li><p>历史：微通道体系结构总线（MCA），EISA总线，外围部件互联总线（PCI）</p></li></ul><h5 id="二-存储器ram"><a class="markdownIt-Anchor" href="#二-存储器ram"></a> 二、存储器RAM</h5><ul><li><p>2102静态随机访问存储器芯片（SRAM）：三态输出（除了高电平和低电平之外，还包含真空态）</p></li><li><p>静态随机访问存储器（SRAM）与动态随机访问存储器（DRAM）的区别：</p><ul><li><p>对于每一位存储空间，SRAM需要4个晶体管，DRAM只需要1个晶体管，但DRAM需要较复杂的外部电路支持。</p></li><li><p>SRAM一旦断电，所有信息就会丢失；DRAM在使用时，需要定期访问其存储器的内容，这一过程称为更新周期（refresh），这一过程每秒钟都要进行几百次。</p></li></ul></li><li><p>趋势：DRAM增多</p></li><li><p>内存插槽（可以容纳几块小存储器板）：SIMM（单列直插内存模块）和DIMM（双列直插内存模块）</p></li></ul><h5 id="三-输出设备"><a class="markdownIt-Anchor" href="#三-输出设备"></a> 三、输出设备</h5><ul><li><p>视频显示器/监视器：连接在计算机上的电子射线管（CRT）</p></li><li><p>显卡/视频适配器：为视频显示器提供电子信号的元件</p></li><li><p>扫描技术：</p><ul><li><p>扫描行：每一个水平行。</p></li><li><p>水平回归：完成每一行扫描后，回到最左边。</p></li><li><p>垂直回归：完成整个屏幕扫描后，回到左上角。</p></li><li><p>场频：每秒钟扫描的次数（单位：Hz）</p></li><li><p>各行扫描技术：整个帧分为两个场来完成，偶数扫描线扫描第一个场，奇数扫描线扫描第二个场。</p></li><li><p>水平扫描频率：水平扫描每行的速率（单位：Hz）</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>每个场所包含的扫描线数量</mtext><mo>=</mo><mtext>水平扫描速率</mtext><mo>÷</mo><mtext>场频</mtext></mrow><annotation encoding="application/x-tex">每个场所包含的扫描线数量=水平扫描速率\div 场频</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">场</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">含</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">扫</span><span class="mord cjk_fallback">描</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">量</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">水</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">扫</span><span class="mord cjk_fallback">描</span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">场</span><span class="mord cjk_fallback">频</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>每帧所包含的扫描线数量</mtext><mo>=</mo><mtext>每个场所包含的扫描线数量</mtext><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">每帧所包含的扫描线数量=每个场所包含的扫描线数量\times 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">帧</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">含</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">扫</span><span class="mord cjk_fallback">描</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">量</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">场</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">含</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">扫</span><span class="mord cjk_fallback">描</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">量</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mtext>场</mtext><mo>=</mo><mn>1</mn><mo>×</mo><mtext>帧</mtext></mrow><annotation encoding="application/x-tex">2\times场=1\times帧</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">场</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">帧</span></span></span></span></p></li></ul></li><li><p>带宽：</p><ul><li><p>带宽限制了视频信号从一个颜色到另一个颜色又回到前一个颜色的速率（变化两次的频率）</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>每个水平扫描行的像素数</mtext><mo>=</mo><mn>2</mn><mo>×</mo><mtext>带宽</mtext><mo>÷</mo><mtext>水平扫描速率</mtext></mrow><annotation encoding="application/x-tex">每个水平扫描行的像素数=2\times 带宽\div 水平扫描速率</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">水</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">扫</span><span class="mord cjk_fallback">描</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">像</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">数</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">水</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">扫</span><span class="mord cjk_fallback">描</span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">率</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>可用像素</mtext><mo>=</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><mtext>每个水平扫描行的像素数</mtext></mrow><annotation encoding="application/x-tex">可用像素=\frac{1}{3}每个水平扫描行的像素数</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">像</span><span class="mord cjk_fallback">素</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">水</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">扫</span><span class="mord cjk_fallback">描</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">像</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">数</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>分辨率</mtext><mo>=</mo><mtext>水平方向可用像素</mtext><mo>×</mo><mtext>垂直方向上的可用像素</mtext></mrow><annotation encoding="application/x-tex">分辨率=水平方向可用像素\times 垂直方向上的可用像素</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">辨</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">水</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">像</span><span class="mord cjk_fallback">素</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">垂</span><span class="mord cjk_fallback">直</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">像</span><span class="mord cjk_fallback">素</span></span></span></span></p></li></ul></li></ul><h5 id="四-字符生成器只读存储器read-only-memoryrom"><a class="markdownIt-Anchor" href="#四-字符生成器只读存储器read-only-memoryrom"></a> 四、字符生成器，只读存储器(read-only memory,ROM)</h5><p>字符生成器：是视频适配板上的一部分，通常是指ROM。</p><p>ROM：代码转换电路，实现7位ASCII码到64位码的转换（定义了字符显示的外观）</p><ul><li><p>文本适配器：支持光标（Cursor）功能的显示适配器：光标所在的行列被存储在两个8位寄存器中</p></li><li><p>图形适配器（图形显卡）：</p></li></ul><h5 id="五-磁介质存储器"><a class="markdownIt-Anchor" href="#五-磁介质存储器"></a> 五、磁介质存储器</h5><ul><li><p>录音电话</p></li><li><p>卷轴式磁带（顺序访问）：长期保存，但访问速度慢</p></li><li><p>磁盘（快速访问）：拥有磁头，可以快速访问</p><ul><li>软盘：存储速度慢，存储量小，但可以移动，插入软盘驱动器后使用。</li><li>硬盘：存储速度快，存储量大，但永久驻留在驱动器中，硬盘固定。<ul><li><p>硬盘驱动器标准接口（这些接口都可以用内存直接访问，即DMA访问使用总线）：</p><p>小型计算机系统接口（SCSI）</p><p>增强的小型设备（ESDI）</p><p>集成设备的电气接口（IDE）</p></li></ul></li><li>结构：磁盘表面被划分成了许多同心圆，称为磁道；又切成了一个个扇区。</li></ul></li><li><p>磁介质存储器的使用：</p><p>微处理器发出一个地址信号，通常是寻址RAM，而非磁介质存储器。微处理器不能直接从磁盘读取数据，需要将所需的数据从磁盘调入内存（RAM），然后才能对其访问。</p><ul><li>磁介质存储器像一个文件柜，存储在磁盘上的数据是以文件作为实体来存放的，存储和检索文件是操作系统（OS）很重要的功能。</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;计算机组成原理总线&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#计算机组成原理总线&quot;&gt;&lt;/a&gt; 计算机组成原理：总线&lt;/h3&gt;
&lt;h5 id=&quot;一-总线简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#一</summary>
      
    
    
    
    <category term="《code编码：隐匿在计算机软硬件背后的语言》" scheme="https://xqc-1368.github.io/categories/%E3%80%8Acode%E7%BC%96%E7%A0%81%EF%BC%9A%E9%9A%90%E5%8C%BF%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BD%AF%E7%A1%AC%E4%BB%B6%E8%83%8C%E5%90%8E%E7%9A%84%E8%AF%AD%E8%A8%80%E3%80%8B/"/>
    
    
    <category term="存储模块" scheme="https://xqc-1368.github.io/tags/%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9D%97/"/>
    
    <category term="RAM" scheme="https://xqc-1368.github.io/tags/RAM/"/>
    
    <category term="ROM" scheme="https://xqc-1368.github.io/tags/ROM/"/>
    
    <category term="《code编码》" scheme="https://xqc-1368.github.io/tags/%E3%80%8Acode%E7%BC%96%E7%A0%81%E3%80%8B/"/>
    
    <category term="计算机组成原理" scheme="https://xqc-1368.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="总线" scheme="https://xqc-1368.github.io/tags/%E6%80%BB%E7%BA%BF/"/>
    
    <category term="IO模块" scheme="https://xqc-1368.github.io/tags/IO%E6%A8%A1%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>4 微机原理：两种典型的微处理器</title>
    <link href="https://xqc-1368.github.io/2024/08/19/4%20%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86%EF%BC%9A%E4%B8%A4%E7%A7%8D%E5%85%B8%E5%9E%8B%E7%9A%84%E5%BE%AE%E5%A4%84%E7%90%86%E5%99%A8/"/>
    <id>https://xqc-1368.github.io/2024/08/19/4%20%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86%EF%BC%9A%E4%B8%A4%E7%A7%8D%E5%85%B8%E5%9E%8B%E7%9A%84%E5%BE%AE%E5%A4%84%E7%90%86%E5%99%A8/</id>
    <published>2024-08-19T11:53:47.622Z</published>
    <updated>2024-08-19T11:41:28.595Z</updated>
    
    <content type="html"><![CDATA[<h3 id="微机原理两种典型的微处理器"><a class="markdownIt-Anchor" href="#微机原理两种典型的微处理器"></a> 微机原理：两种典型的微处理器</h3><ul><li><p>定义：将中央处理器的所有构件封装到一块硅芯片上，即微处理器。</p></li><li><p>第一个微处理器：Intel 4004</p></li><li><p>发展历史：继电器——真空管——晶体管</p></li><li><p>处理器性能评价标准：</p><ul><li><p>数据通路宽度（几位微处理器？）</p></li><li><p>最大时钟频率（主频）（相同时间完成更多操作）</p></li><li><p>可寻址存储器最大空间（空间换时间）</p></li></ul></li></ul><h5 id="一-intel公司的8080处理器"><a class="markdownIt-Anchor" href="#一-intel公司的8080处理器"></a> 一、Intel公司的8080处理器</h5><ul><li><p>基本属性：</p><ul><li><p>8位微处理器</p></li><li><p>时钟频率：2MHz</p><ul><li>8080每条指令需要4<sub>18个时钟周期，意味着每条指令的执行时间为2</sub>9<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">\mu s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">μ</span><span class="mord mathnormal">s</span></span></span></span></li></ul></li><li><p>寻址空间：64KB</p></li><li><p>类型：单芯片微处理器</p></li></ul></li><li><p>寄存器信息：8080内含6个寄存器，每个寄存器都是8位寄存器</p><ul><li><p>分别命名为:  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo separator="true">,</mo><mi>C</mi><mo separator="true">,</mo><mi>D</mi><mo separator="true">,</mo><mi>E</mi><mo separator="true">,</mo><mi>H</mi><mo separator="true">,</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">B,C,D,E,H,L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">L</span></span></span></span> （A是内部的累加器的代号）</p></li><li><p>通常把两个8位寄存器 H 和 L 合起来构成一个16位 寄存器对（register pair），</p><p>称作[HL]。</p></li></ul><table><thead><tr><th>助记符</th><th>指令含义</th></tr></thead><tbody><tr><td>LOD</td><td>加载</td></tr><tr><td>STO</td><td>保存</td></tr><tr><td>STA</td><td>保存到累加器</td></tr><tr><td>LDA</td><td>加载到累加器</td></tr><tr><td>STAX</td><td>保存到BC或DE寄存器</td></tr><tr><td>LDAX</td><td>加载到BC或DE寄存器</td></tr><tr><td>MOV</td><td>把一个寄存器中的内容转移&lt;br&gt;到另一个寄存器（可以是原来的寄存器、累加器）</td></tr><tr><td>HLT</td><td>停止</td></tr></tbody></table></li></ul><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LDA A, [aaaa]</span><br><span class="line">MOV A, [HL]</span><br><span class="line">MOV [HL], C</span><br><span class="line">STAX [BC], A</span><br><span class="line">LDAX A, [BC]</span><br></pre></td></tr></table></figure><ul><li><p>三种寻址方法</p><ul><li><p>直接寻址法：<code>MOV B, [aaaa]</code> （源操作数为地址信息）</p></li><li><p>间接寻址法：<code>MOV B, [HL]</code>（源操作数为地址所在的寄存器）</p></li><li><p>立即数寻址法：<code>MOV B, 37h</code> （源操作数为要操作的数据对象）</p></li></ul></li></ul><p>立即数操作</p><table><thead><tr><th>操作</th><th>含义</th></tr></thead><tbody><tr><td>MVI</td><td>传送立即数</td></tr><tr><td>ADI</td><td>立即数加法</td></tr><tr><td>ACI</td><td>立即数进位加法</td></tr><tr><td>SUI</td><td>立即数减法</td></tr><tr><td>SBI</td><td>立即数借位减法</td></tr><tr><td>ANI</td><td>立即数与</td></tr><tr><td>XRI</td><td>立即数异或</td></tr><tr><td>ORI</td><td>立即数或</td></tr><tr><td>CPI</td><td>立即数比较</td></tr></tbody></table><ul><li><p>不符合规则的操作结果</p><p><code>MOV A, A</code>  并不会执行有意义的操作；</p><p><code>MOV [HL], [HL]</code>该指令是不存在的，实际上该指令的实际意义  人为规定等价于<code>HLT</code></p></li><li><p>操作码的位模式：</p></li></ul><p>比如：MOV操作码由八位组成</p><p>01dddsss，ddd表示目标操作数的代码，sss表示源操作数的代码</p><table><thead><tr><th>代码</th><th>对应寄存器</th></tr></thead><tbody><tr><td>000</td><td>寄存器B</td></tr><tr><td>001</td><td>寄存器C</td></tr><tr><td>010</td><td>寄存器D</td></tr><tr><td>011</td><td>寄存器E</td></tr><tr><td>100</td><td>寄存器H</td></tr><tr><td>101</td><td>寄存器L</td></tr><tr><td>110</td><td>合并寄存器HL</td></tr><tr><td>111</td><td>累加器A</td></tr></tbody></table><p>如：<code>MOV L, E</code> 表示为操作码：<code>01101011</code></p><ul><li><p>标志位（flag）</p><p>8080的标志位包括：CF（进位标志），ZF（零标志位），SF（符号标志位），PF（奇偶标志位），AF（辅助进位标志）</p></li><li><p>程序状态字（PSW）：在8080中，专门的8位寄存器，来存放所有的标志位</p></li><li><p>LDA，STA，MOV指令不会影响标志位。ADD，SUB，ADC（进位加法），SBB（借位减法）会影响标志位状态。</p></li><li><p>但是以下两个直接影响CF</p><table><thead><tr><th>操作</th><th>含义</th></tr></thead><tbody><tr><td>STC</td><td>令CF置1</td></tr><tr><td>CMC</td><td>令CF取反</td></tr></tbody></table></li><li><p>CMP指令：和SUB指令类似，也是把两个数相减。但是他是把结果保存在标志位</p><ul><li>如果A中既有的值小于CMP的源操作数存储器中的值，那么进位标志位CF置1；如果A中既有的值等于源操作数存储器中的值，那么零标志位ZF置1。</li></ul></li></ul><table><thead><tr><th>操作</th><th>含义</th></tr></thead><tbody><tr><td>CMP</td><td>比较，可设置标志位</td></tr></tbody></table><ul><li>两种特别的8080指令：</li></ul><table><thead><tr><th>操作</th><th>含义</th></tr></thead><tbody><tr><td>CMA</td><td>累加器中的数按位取反</td></tr><tr><td>DAA</td><td>十进制调整累加器，使用BCD码进行十进制的算术运算（加在运算出原十六进制结果后，切换结果）</td></tr></tbody></table><ul><li>增量减量操作</li></ul><p>INR和DCR都是单字节操作，可以影响除了CF之外所有标志位</p><table><thead><tr><th>操作</th><th>含义</th></tr></thead><tbody><tr><td>INR</td><td>寄存器或存储器中的数加1</td></tr><tr><td>DCR</td><td>寄存器或存储器中的数减1</td></tr></tbody></table><ul><li>移位操作</li></ul><table><thead><tr><th>操作</th><th>含义</th></tr></thead><tbody><tr><td>RLC</td><td>使累加器循环左移</td></tr><tr><td>RRC</td><td>使累加器循环右移</td></tr><tr><td>RAL</td><td>带进位的累加器循环左移</td></tr><tr><td>RAR</td><td>带进位的累加器循环右移</td></tr></tbody></table><p>执行RAL时，将原最高位移至CF</p><p>执行RAR时，将原最低位移至CF</p><h5 id="二-intel-8080微处理器的ram与栈"><a class="markdownIt-Anchor" href="#二-intel-8080微处理器的ram与栈"></a> 二、Intel 8080微处理器的RAM与栈</h5><ul><li><p>随机访问存储器RAM：可以寻址访问的存储器</p></li><li><p>栈指针：8080微处理器设置了一个专门的16位寄存器作为栈，对这段空间寻址的寄存器叫作栈指针（SP，Stack Pointer）</p></li><li><p>栈的特性：后进先出（LIFO）</p></li><li><p>入栈出栈指令</p><table><thead><tr><th>操作</th><th>含义</th></tr></thead><tbody><tr><td>PUSH</td><td>压入堆栈</td></tr><tr><td>POP</td><td>弹出堆栈</td></tr></tbody></table></li></ul><p>如果你想把寄存器中所有内容保存到栈内，可以使用如下指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PUSH PSW</span><br><span class="line">PUSH BC</span><br><span class="line">PUSH DE</span><br><span class="line">PUSH HL</span><br></pre></td></tr></table></figure><p>而  <code>POP BC</code>  则表示从栈中弹出一个值，按照来顺序保存到BC存储器中。</p><ul><li><p>栈的工作方式</p><p>假设栈指针初始时位于8000h。当有数据入栈时，栈指针-1，变成7FFFh，且在7FFFh位置存储压入的数据</p></li><li><p>栈上溢和栈下溢</p><ul><li><p>栈上溢（stack overflow）：使用过多PUSH指令，覆盖掉存储器中其他内容</p></li><li><p>栈下溢（stack underflow）：使用过多POP指令，栈中数据取完了还在POP</p></li></ul></li><li><p>寄存器和栈的共用操作</p></li></ul><table><thead><tr><th>操作</th><th>含义</th></tr></thead><tbody><tr><td>LXI</td><td>对寄存器  或 堆栈指针  加载（Load）扩展的立即数（两个字节）</td></tr><tr><td>INX</td><td>对寄存器对和堆栈指针加1</td></tr><tr><td>DCX</td><td>对寄存器对和堆栈指针减1</td></tr><tr><td>DAD</td><td>把由任意2个寄存器组成的16位寄存器对的内容加到寄存器对HL中</td></tr></tbody></table><ul><li>LXI 指令：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LXI BC, 527Ah</span><br></pre></td></tr></table></figure><p>以上指令等价于：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MVI B, 52h</span><br><span class="line">MVI C, 7Ah</span><br></pre></td></tr></table></figure><ul><li><p>DAD 指令：</p><p>一般用于计算存储器的地址，对PSW中只有对CF有影响</p></li><li><p>栈操作指令</p></li></ul><table><thead><tr><th>操作</th><th>含义</th></tr></thead><tbody><tr><td>SHLD</td><td>直接保存HL中的数据</td></tr><tr><td>LHLD</td><td>直接加载数据到HL</td></tr><tr><td>PCHL</td><td>将HL保存的数据加载到程序计数器</td></tr><tr><td>SPHL</td><td>将HL保存的数据加载到堆栈指针</td></tr><tr><td>XTHL</td><td>把HL中的内容和堆栈顶部2个字节进行交换</td></tr><tr><td>XCHG</td><td>把DE中的内容和HL中的内容进行交换</td></tr></tbody></table><ul><li><p>Call 和 Return指令</p><ul><li>Call（调用）指令：执行之后，程序计数器（PC）将加载一个新地址，而原来的地址则被保存到栈当中。（这种指令记录了“从何处跳转”，即保存了跳转之前的信息）</li></ul></li><li><p>补充：8080处理器中的转移指令</p><table><thead><tr><th>操作</th><th>含义</th></tr></thead><tbody><tr><td>JMP</td><td>转移</td></tr><tr><td>JZ</td><td>零转移</td></tr><tr><td>JNZ</td><td>非零转移</td></tr><tr><td>JC</td><td>进位转移</td></tr><tr><td>JNC</td><td>无进位转移</td></tr></tbody></table></li></ul><h5 id="三-intel-8080与周围设备"><a class="markdownIt-Anchor" href="#三-intel-8080与周围设备"></a> 三、Intel 8080与周围设备</h5><p>内存映像 I/O：除了常规的65536个地址外，另增了256个地址专门用来访问输入/输出设备，这些地址被称为I/O端口</p><table><thead><tr><th>操作</th><th>含义</th></tr></thead><tbody><tr><td>OUT</td><td>把累加器中的内容  写入到  紧跟该指令后的字节  所寻址的端口</td></tr><tr><td>IN</td><td>把一个字节从端口读入到累加器</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OUT PP</span><br><span class="line">IN PP</span><br></pre></td></tr></table></figure><p>当外围设备需要中断微处理器当前操作时，它需要把8080的INT端口的输入信号置1。8080通过从存储器取出指令的方式，来响应该中断，同时控制信号指明有中断发生。</p><table><thead><tr><th>操作</th><th>含义</th></tr></thead><tbody><tr><td>DI</td><td>禁止中断</td></tr><tr><td>EI</td><td>允许中断</td></tr></tbody></table><ul><li>其他操作</li></ul><table><thead><tr><th>操作</th><th>含义</th></tr></thead><tbody><tr><td>RST</td><td>重新启动，立即跳转到特定的地址</td></tr><tr><td>NOP</td><td>无操作</td></tr></tbody></table><h5 id="四-motorola公司生产的6800微处理器"><a class="markdownIt-Anchor" href="#四-motorola公司生产的6800微处理器"></a> 四、Motorola公司生产的6800微处理器</h5><ul><li>对比： Motorola 6800相比于Intel 8080</li></ul><ol><li>时钟信号较简单</li><li>没有独立I/O端口</li><li>B也是累加器，无其他8位寄存器</li><li>16位索引寄存器（类似HL寄存器）</li><li>对应操作码和助记符完全不同</li><li>无奇偶标志位，有溢出标志位</li><li>汇编语言不兼容</li><li>6800高前低后，8080低前高后（Motorola方式，Intel方式）</li></ol><h5 id="五-现代微处理器技术"><a class="markdownIt-Anchor" href="#五-现代微处理器技术"></a> 五、现代微处理器技术</h5><ul><li><p>苹果公司的Mac的PowerPC微处理器</p><p>采用RISC技术（精简指令集计算机）</p><ul><li><p>特点1：指令等长，只有Load和Store能访问存储器</p></li><li><p>特点2：设置大量寄存器，避免频繁访问存储器</p></li></ul></li><li><p>流水线技术</p><p>处理器在执行一条指令时同时读取下一条指令</p></li><li><p>高速缓冲存储器（Cache）</p><p>在处理器内部设置一个访问速度很快的RAM阵列，存放最近要执行的指令，Cache能避免常用小循环的反复加载</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;微机原理两种典型的微处理器&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#微机原理两种典型的微处理器&quot;&gt;&lt;/a&gt; 微机原理：两种典型的微处理器&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;定义：将中央处理器的所有构件封装到一块硅芯片上，即微处理</summary>
      
    
    
    
    <category term="《code编码：隐匿在计算机软硬件背后的语言》" scheme="https://xqc-1368.github.io/categories/%E3%80%8Acode%E7%BC%96%E7%A0%81%EF%BC%9A%E9%9A%90%E5%8C%BF%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BD%AF%E7%A1%AC%E4%BB%B6%E8%83%8C%E5%90%8E%E7%9A%84%E8%AF%AD%E8%A8%80%E3%80%8B/"/>
    
    
    <category term="《code编码》" scheme="https://xqc-1368.github.io/tags/%E3%80%8Acode%E7%BC%96%E7%A0%81%E3%80%8B/"/>
    
    <category term="计算机组成原理" scheme="https://xqc-1368.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="操作系统" scheme="https://xqc-1368.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="机器语言" scheme="https://xqc-1368.github.io/tags/%E6%9C%BA%E5%99%A8%E8%AF%AD%E8%A8%80/"/>
    
    <category term="CPU" scheme="https://xqc-1368.github.io/tags/CPU/"/>
    
  </entry>
  
  <entry>
    <title>数字逻辑设计02  微处理器设计</title>
    <link href="https://xqc-1368.github.io/2024/08/19/3%20%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A102%20%20%E5%BE%AE%E5%A4%84%E7%90%86%E5%99%A8%E8%AE%BE%E8%AE%A1/"/>
    <id>https://xqc-1368.github.io/2024/08/19/3%20%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A102%20%20%E5%BE%AE%E5%A4%84%E7%90%86%E5%99%A8%E8%AE%BE%E8%AE%A1/</id>
    <published>2024-08-19T11:53:47.614Z</published>
    <updated>2024-08-19T11:48:25.205Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数字逻辑设计02-微处理器设计"><a class="markdownIt-Anchor" href="#数字逻辑设计02-微处理器设计"></a> 数字逻辑设计02  微处理器设计</h3><h5 id="一-基于alu算数逻辑单元的连续加法器设计"><a class="markdownIt-Anchor" href="#一-基于alu算数逻辑单元的连续加法器设计"></a> 一、基于ALU（算数逻辑单元）的连续加法器设计</h5><ul><li><p>当计数器收到时钟信号后，将0000h输入给RAM，RAM将存储在0000h位置的数据RAM输入到8位加法器的A输入端。由于有先序清零操作（清零的开关没放上去），则加法器B输入端位00h，求和得加法器输出端S为27h，所以8位锁存器输出为27h。由于RAM的W写入端并没有为高电平，所以不允许写入，8位锁存器的输出则只能走右边路径到达加法器的B输入端。由于锁存器的保持作用，则该型号能一直<u>保持</u>在B输入端，直至下一个A端输入到达并在加法器上要求执行求和操作。<br /><img src="/images/2024-07-17-17-31-21-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717164637.jpg" alt="" /></p></li><li><p>当下个时钟信号到达后，计数器输出0001h，RAM将0001h位置的数据A2h输出到加法器的A输入端，并且执行求和操作，得到的结果C9h同样的沿右边路径回到B端口并保持。<br /><img src="/images/2024-07-17-17-33-07-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_202407171646371.jpg" alt="" /></p></li><li><p>当计数器输出0002h时，RAM将0002h位置的数据18h输出到加法器的A输入端，并且执行求和操作，得到的结果E1h同样的沿右边路径回到B端口并保持。</p></li><li><p>当计数器输出0003h时，人为将RAM的W写入端置1，RAM将0003h位置的数据改写为8位锁存器在前一种状态的输出E1h。</p></li><li><p>此时完成一次连加运算，对锁存器进行手动清零并执行下一次连加运算</p></li></ul><h5 id="二-代码ram-与数据ram-在分立内存中-完全同位置情况-的指令连加系统设计"><a class="markdownIt-Anchor" href="#二-代码ram-与数据ram-在分立内存中-完全同位置情况-的指令连加系统设计"></a> 二、代码RAM 与数据RAM 在分立内存中  完全同位置情况  的指令连加系统设计</h5><p>由上述例子可以看出，进行连加操作的时候，首先要把一个字节从存储器传输到累加器中，这个过程称为加载（Load），再要把一个字节从存储器中加（Add）到累加器中。第三个操作是把累加器运算结果保存（Store）回数据RAM中，另外还需要让累加器停下（Halt）的操作。有可能我们后面还需要减法（Subtract）。<br /><img src="/images/2024-07-17-17-57-11-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717164700.jpg" alt="" /></p><p>如果让数据RAM与代码RAM同位，那么就像下面这样：<br /><img src="/images/2024-07-17-17-57-57-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_202407171646571.jpg" alt="" /></p><p>那么<code>数据RAM</code>和<code>代码RAM</code>就可以这样设计，用同一个计数器来触发地址。<br /><img src="/images/2024-07-17-17-58-53-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_202407171646372.jpg" alt="" /></p><p>为了执行Load指令，数据RAM阵列的输出有时应该直接作为8位锁存器的输入。所以此时应该设置一个二选一选择器来实现这种功能。</p><p>具体实现如下：<br /><img src="/images/2024-07-17-17-59-32-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717164633.jpg" alt="" /></p><p>加入减法操作所需的反相器后如下：<br /><img src="/images/2024-07-17-18-01-20-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717164659.jpg" alt="" /></p><h5 id="三-进位加法和借位减法"><a class="markdownIt-Anchor" href="#三-进位加法和借位减法"></a> 三、进位加法和借位减法</h5><ul><li><p>进行8位加法时，使用的是常规的Add指令。加法器的进位输入是0。当进行高位字节数相加时，要使用新的<code>Add with Carry</code>指令在这种情况下，要用进位锁存器（假设在上图中加上这样一个锁存器）的输出作为加法器的进位输入。<br /><img src="/images/2024-07-17-22-29-11-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_202407171646571.jpg" alt="" /></p></li><li><p>先进行低位运算，再进行高位运算。<br /><img src="/images/2024-07-17-22-29-52-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717164657.jpg" alt="" /></p></li></ul><h5 id="四-扩展寻址模式操作地址ram代码ram与-数据ram-在分立内存中-不同位置情况-的控制系统设计"><a class="markdownIt-Anchor" href="#四-扩展寻址模式操作地址ram代码ram与-数据ram-在分立内存中-不同位置情况-的控制系统设计"></a> 四、扩展寻址模式，操作+地址RAM（代码RAM）与 数据RAM 在分立内存中 不同位置情况  的控制系统设计</h5><ul><li>扩展寻址模式：除了停止指令（Halt指令）之外，需要3个字节，第一个字节记录操作内容，第2,3个字节记录操作对象的地址。</li></ul><p>下面为代码RAM<br /><img src="/images/2024-07-17-22-36-24-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717164645.jpg" alt="" /></p><p>下面为本操作的数据RAM中内容<br /><img src="/images/2024-07-17-22-35-57-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_202407171646573.jpg" alt="" /></p><p>控制系统部分如下设计（其他部分同前）：<br /><img src="/marktext/images/2024-07-17-22-41-11-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717164656.jpg" alt="" /></p><ul><li><p>从存储器中取出指令的过程称为  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>取指令</mtext></mrow><annotation encoding="application/x-tex">取指令</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">令</span></span></span></span></p></li><li><p>每条指令需要的时间为三个时钟周期</p></li><li><p>上图中使用了两个RAM阵列，一个用来存放指令码，另一个用来存放操作数据</p></li></ul><p>但是同样是RAM，所以操作码和操作数可以用同一个RAM控制：</p><h5 id="五-操作地址ram代码ram与-数据ram-在共用内存中-不同位置情况-的控制系统设计"><a class="markdownIt-Anchor" href="#五-操作地址ram代码ram与-数据ram-在共用内存中-不同位置情况-的控制系统设计"></a> 五、操作+地址RAM（代码RAM）与 数据RAM 在共用内存中 不同位置情况 的控制系统设计</h5><p>为了实现这一设计，必须要使用2-1选择器，分清此时需要从RAM中取出的是代码还是数据。<br /><img src="/images/2024-07-17-22-49-24-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_202407171646561.jpg" alt="" /></p><p>此时共用的RAM中的存储信息是：<br /><img src="/images/2024-07-17-22-51-01-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717164654.jpg" alt="" /></p><h5 id="六-置数法-实现-跳转指令jump"><a class="markdownIt-Anchor" href="#六-置数法-实现-跳转指令jump"></a> 六、置数法 实现 跳转指令（Jump）</h5><p>解决内存不连续问题和指令码不等长问题（Halt和其他的不等长），需要跳转指令Jump<br /><img src="/images/2024-07-17-22-53-14-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717164847.jpg" alt="" /></p><p>通常情况下，自动加法器以顺序方式对RAM阵列寻址，Jump指令改变了机器的寻址方式。<br /><img src="/images/2024-07-17-22-56-22-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717164821.jpg" alt="" /></p><h5 id="五-利用-jump-指令实现乘法器"><a class="markdownIt-Anchor" href="#五-利用-jump-指令实现乘法器"></a> 五、利用 Jump 指令实现乘法器</h5><p>共用RAM的数据部分  预置信息：<br /><img src="/images/2024-07-17-23-07-20-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717230408.jpg" alt="" /></p><p>第一次循环：相当于实现 00 00 h+00 A7 h=00 A7 h=00 A7 h * 1<br /><img src="/images/2024-07-17-23-08-18-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717230407.jpg" alt="" /></p><ul><li><p>将1002h-1003h的部分看作从001Ch变小到0000h的计数装置，也就是让以上部分运行001Ch次即可实现00A7h*001Ch</p></li><li><p>执行完以上指令，需要让001C减一，由于停止（Halt）操作码恰好为FFh，把任何一个数加上它，相当于把这个数减一。(FFh一数两用，表示停止或者表示-1)</p></li><li><p>执行完以上指令，需要让001C减一的同时，让代码执行位置跳转（Jump）回开头的0000h：<br /><img src="/images/2024-07-17-23-13-44-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_202407172304071.jpg" alt="" /></p></li><li><p>但是需要考虑的是，当001C减到0000h时，就停止程序。而不再跳转</p></li><li><p>所以此处我们需要考虑的是条件跳转中的 零跳转（Jump If Zero）</p></li></ul><p>零跳转的机器码写法（衔接上图）<br /><img src="/images/2024-07-17-23-19-42-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717230404.jpg" alt="" /></p><p>零跳转的硬件实现：零锁存器<br /><img src="/images/2024-07-17-23-20-44-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717230405.jpg" alt="" /></p><ul><li>当执行到第28次循环的时候，1004h和1005h地址保存的16位数等于A7h和1Ch的乘积。1003h地址保存的值为1，此时他和FFh相加的值为0，因此0标志位被置位。Jump If Zero指令不会在跳转到0000h地址，相反，下一条执行的指令即Halt指令</li></ul><p>除了零跳转之外，还有其他条件跳转方式如下：</p><p><img src="/images/2024-07-17-23-21-24-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717164817.jpg" alt="" /></p><h5 id="八-汇编语言基础"><a class="markdownIt-Anchor" href="#八-汇编语言基础"></a> 八、汇编语言基础</h5><p><code>操作指令 目标操作数，源操作数</code></p><p>朴素的直接写地址的汇编语言：</p><p><img src="/images/2024-07-17-23-30-27-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717164819.jpg" alt="" /></p><p>标号性质的汇编语言</p><p><img src="/images/2024-07-17-23-31-24-%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240717164823.jpg" alt="" /></p><h5 id="九-结语"><a class="markdownIt-Anchor" href="#九-结语"></a> 九、结语</h5><ul><li><p>能否控制重复操作或者循环操作是计算机与计算器的区别。</p></li><li><p>在处理器中，8位反相器和8位加法器构成了算数逻辑单元（ALU，Arithmetic Logic Unit）</p></li><li><p>16位计数器可以称为程序计数器（PC Program Counter）</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;数字逻辑设计02-微处理器设计&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数字逻辑设计02-微处理器设计&quot;&gt;&lt;/a&gt; 数字逻辑设计02  微处理器设计&lt;/h3&gt;
&lt;h5 id=&quot;一-基于alu算数逻辑单元的连续加法器设计&quot;&gt;&lt;a c</summary>
      
    
    
    
    <category term="《code编码：隐匿在计算机软硬件背后的语言》" scheme="https://xqc-1368.github.io/categories/%E3%80%8Acode%E7%BC%96%E7%A0%81%EF%BC%9A%E9%9A%90%E5%8C%BF%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BD%AF%E7%A1%AC%E4%BB%B6%E8%83%8C%E5%90%8E%E7%9A%84%E8%AF%AD%E8%A8%80%E3%80%8B/"/>
    
    
    <category term="加法器与减法器" scheme="https://xqc-1368.github.io/tags/%E5%8A%A0%E6%B3%95%E5%99%A8%E4%B8%8E%E5%87%8F%E6%B3%95%E5%99%A8/"/>
    
    <category term="RAM" scheme="https://xqc-1368.github.io/tags/RAM/"/>
    
    <category term="《code编码》" scheme="https://xqc-1368.github.io/tags/%E3%80%8Acode%E7%BC%96%E7%A0%81%E3%80%8B/"/>
    
    <category term="计算机组成原理" scheme="https://xqc-1368.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="ALU" scheme="https://xqc-1368.github.io/tags/ALU/"/>
    
    <category term="连加器" scheme="https://xqc-1368.github.io/tags/%E8%BF%9E%E5%8A%A0%E5%99%A8/"/>
    
    <category term="跳转JUMP" scheme="https://xqc-1368.github.io/tags/%E8%B7%B3%E8%BD%ACJUMP/"/>
    
    <category term="扩展寻址" scheme="https://xqc-1368.github.io/tags/%E6%89%A9%E5%B1%95%E5%AF%BB%E5%9D%80/"/>
    
    <category term="操作系统" scheme="https://xqc-1368.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>数字逻辑设计01  RAM随机访问存储器</title>
    <link href="https://xqc-1368.github.io/2024/08/19/2%20%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A101%20%20RAM%E9%9A%8F%E6%9C%BA%E8%AE%BF%E9%97%AE%E5%AD%98%E5%82%A8%E5%99%A8/"/>
    <id>https://xqc-1368.github.io/2024/08/19/2%20%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A101%20%20RAM%E9%9A%8F%E6%9C%BA%E8%AE%BF%E9%97%AE%E5%AD%98%E5%82%A8%E5%99%A8/</id>
    <published>2024-08-19T11:53:47.611Z</published>
    <updated>2024-08-19T11:41:37.472Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数字逻辑设计自动操作"><a class="markdownIt-Anchor" href="#数字逻辑设计自动操作"></a> 数字逻辑设计：自动操作</h3><h5 id="一-寄存器"><a class="markdownIt-Anchor" href="#一-寄存器"></a> 一、寄存器</h5><p>用来暂时存放参与运算的数据和运算结果。把能够用来存储<u>一组</u>二进制代码的<u>同步时序逻辑电路</u>称为寄存器。</p><ul><li>注意看，这本来是一个D触发器，由于命名方式的改变，他的D：数据输入端被更名为DI（即Data In），他的时钟信号端被命名为W（写操作端，Write），他原来的输出端Q被命名为DO（Data Out）</li></ul><p><img src="/images/2024-07-17-13-20-46-image.png" alt="" /></p><p>将他们以同步时序电路的方式”并联“：</p><p><img src="/images/2024-07-17-13-21-05-image.png" alt="" /></p><p>可以得到一个八位寄存器（《code》中用八位锁存器代指这个概念，以下图片不作区分）</p><p><img src="/images/2024-07-17-13-21-15-image.png" alt="" /></p><p>可以简化为如下所示的图：</p><p><img src="/images/2024-07-17-13-21-36-image.png" alt="" /></p><h5 id="二-随机存储器ram的基本结构"><a class="markdownIt-Anchor" href="#二-随机存储器ram的基本结构"></a> 二、随机存储器（RAM）的基本结构</h5><ul><li>又名“读/写存储器”</li></ul><p>读写操作很自由，只需要改变地址及相关的输入，就可以从寄存器中读出或写入需要的数据</p><ul><li><p>随机访问存储器的符号<br /><img src="/images/2024-07-17-13-22-20-image.png" alt="" /></p></li><li><p>随机存储器的组成：译码器＋寄存器+选择器<br /><img src="/images/2024-07-17-13-22-38-image.png" alt="" /></p></li></ul><p>将两个RAM组合成RAM阵列<br /><img src="/images/2024-07-17-13-23-45-image.png" alt="" /><br /><img src="/images/2024-07-17-13-24-04-image.png" alt="" /></p><p>这个RAM阵列可以存储的二进制数依然是8个，但每个数的位宽为2位。</p><p>使用2个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>8</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">8\times1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的RAM搭一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">16\times1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的RAM</p><ul><li><p>相当于把两个3-8译码器用一个1-2译码器联结起来</p></li><li><p>下方用一个2-1选择器把两个8-1选择器联结起来</p></li></ul><p>（红圈部分不太理解是什么意思）<br /><img src="/images/2024-07-17-13-24-30-image.png" alt="" /></p><p>S作为选择端，本质上用于选择存储的信息，所以可以并入地址端（A_3端即为S端）<br /><img src="/images/2024-07-17-13-24-55-image.png" alt="" /></p><ul><li><p>注意：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">16\times1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>中</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>前一个数字</mtext><mo>=</mo><mtext>存储</mtext><mi>R</mi><mi>A</mi><mi>M</mi><mtext>阵列的存储容量</mtext><mo>=</mo><msup><mn>2</mn><mtext>地址输入端的个数</mtext></msup></mrow><annotation encoding="application/x-tex">前一个数字 = 存储RAM阵列的存储容量 = 2^{地址输入端的个数}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">前</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">字</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">储</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord cjk_fallback">阵</span><span class="mord cjk_fallback">列</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">储</span><span class="mord cjk_fallback">容</span><span class="mord cjk_fallback">量</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">地</span><span class="mord cjk_fallback mtight">址</span><span class="mord cjk_fallback mtight">输</span><span class="mord cjk_fallback mtight">入</span><span class="mord cjk_fallback mtight">端</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">个</span><span class="mord cjk_fallback mtight">数</span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>后一个数字</mtext><mo>=</mo><mtext>每个单位由几位二进制数构成</mtext><mo>=</mo><mtext>数据输入端的个数</mtext></mrow><annotation encoding="application/x-tex">后一个数字 = 每个单位由几位二进制数构成 = 数据输入端的个数</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">字</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">由</span><span class="mord cjk_fallback">几</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">制</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">构</span><span class="mord cjk_fallback">成</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">入</span><span class="mord cjk_fallback">端</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">数</span></span></span></span></p></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;数字逻辑设计自动操作&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数字逻辑设计自动操作&quot;&gt;&lt;/a&gt; 数字逻辑设计：自动操作&lt;/h3&gt;
&lt;h5 id=&quot;一-寄存器&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;</summary>
      
    
    
    
    <category term="《code编码：隐匿在计算机软硬件背后的语言》" scheme="https://xqc-1368.github.io/categories/%E3%80%8Acode%E7%BC%96%E7%A0%81%EF%BC%9A%E9%9A%90%E5%8C%BF%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BD%AF%E7%A1%AC%E4%BB%B6%E8%83%8C%E5%90%8E%E7%9A%84%E8%AF%AD%E8%A8%80%E3%80%8B/"/>
    
    
    <category term="RAM" scheme="https://xqc-1368.github.io/tags/RAM/"/>
    
    <category term="《code编码》" scheme="https://xqc-1368.github.io/tags/%E3%80%8Acode%E7%BC%96%E7%A0%81%E3%80%8B/"/>
    
    <category term="计算机组成原理" scheme="https://xqc-1368.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>1 计算机科学与技术——大纲Computer Science And Technology</title>
    <link href="https://xqc-1368.github.io/2024/08/19/1%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF%E2%80%94%E2%80%94%E5%A4%A7%E7%BA%B2Computer%20Science%20And%20Technology/"/>
    <id>https://xqc-1368.github.io/2024/08/19/1%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF%E2%80%94%E2%80%94%E5%A4%A7%E7%BA%B2Computer%20Science%20And%20Technology/</id>
    <published>2024-08-19T11:53:47.607Z</published>
    <updated>2024-08-19T11:38:10.912Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计算机科学与技术computer-science-and-technology"><a class="markdownIt-Anchor" href="#计算机科学与技术computer-science-and-technology"></a> 计算机科学与技术Computer Science And Technology</h2><p>基于《code：编码 隐匿在计算机软硬件背后的语言》（《Code：The hidden Language of Computer Hardware and Software》），哈尔滨工业大学（深圳）计算机思维导论课，和MOOC哈尔滨工业大学的课程总结的计算机学习路线思维导图</p><p>注意：哈尔滨工业大学（深圳）的“计算机科学与技术”专业没有加入《微机原理》这门课<br /><img src="/images/2024-07-17-13-13-55-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AFComputer%20Science%20And%20Techonology%20.png" alt="" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;计算机科学与技术computer-science-and-technology&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#计算机科学与技术computer-science-and-technology&quot;&gt;&lt;/a&gt; 计算机科学与技术C</summary>
      
    
    
    
    <category term="《code编码：隐匿在计算机软硬件背后的语言》" scheme="https://xqc-1368.github.io/categories/%E3%80%8Acode%E7%BC%96%E7%A0%81%EF%BC%9A%E9%9A%90%E5%8C%BF%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BD%AF%E7%A1%AC%E4%BB%B6%E8%83%8C%E5%90%8E%E7%9A%84%E8%AF%AD%E8%A8%80%E3%80%8B/"/>
    
    
    <category term="《code编码》" scheme="https://xqc-1368.github.io/tags/%E3%80%8Acode%E7%BC%96%E7%A0%81%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>9 图形化革命</title>
    <link href="https://xqc-1368.github.io/2024/08/19/9%20%E5%9B%BE%E5%BD%A2%E5%8C%96%E9%9D%A9%E5%91%BD/"/>
    <id>https://xqc-1368.github.io/2024/08/19/9%20%E5%9B%BE%E5%BD%A2%E5%8C%96%E9%9D%A9%E5%91%BD/</id>
    <published>2024-08-19T11:53:47.603Z</published>
    <updated>2024-08-19T11:53:24.503Z</updated>
    
    <content type="html"><![CDATA[<h3 id="图形化革命"><a class="markdownIt-Anchor" href="#图形化革命"></a> 图形化革命</h3><p>电传打字机———&gt;键盘＋阴极射线管(CRT)（哑终端）——》SAGE中的电子枪显示器——》光栅显示器</p><ul><li><p>图形用户界面(GUI)</p><ul><li><p>Alto</p></li><li><p>麦金托什机(Macintosh)——Mac OS（主要以Pascal开发）</p><p>（系统软件，可以用于支持API函数，实现用户界面不同组件）</p></li><li><p>Windows（主要以C语言开发）</p></li></ul></li><li><p>面向对象程序设计思想(OOP)</p><ul><li><p>对象(object)实际上是代码和数据的组合，应用于图形操作系统</p></li><li><p>C++：C语言的扩展面向对象语言（面向对象能做的传统语言也能，只是结构不够好）</p></li><li><p>开发生产力工具：集成开发环境(IDE)、可视化教程(Visual Programming)</p></li></ul></li><li><p>传递格式化文本方法：RTF</p><p>格式：PostScript</p></li><li><p>计算机图形的两个分支</p><ul><li><p>矢量（图元文件）（CAD常用）</p></li><li><p>光栅（位图）</p><ul><li><p>位图文件格式：Windows：bmp格式，Mac：paint格式，另外pict格式支持两种图片</p></li><li><p>位图压缩：</p><p>游程长度编码（RLE）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>72</mn><mo>×</mo><mtext>蓝色</mtext></mrow><annotation encoding="application/x-tex">72\times蓝色</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">蓝</span><span class="mord cjk_fallback">色</span></span></span></span>代表72个蓝色字符</p></li><li><p>图形交换格式（gif）：考虑像素值的模式</p></li><li><p>基于gif的LZW压缩</p></li><li><p>注意：RLE和LZW的压缩都属于无损压缩，压缩过程可逆</p></li><li><p>JEPG：部分有损的压缩</p></li><li><p>光学字符识别（OCR）：识别位图上字符，变成ASCII码</p></li></ul></li><li><p>位图和图元文件都是数字化的可视信息。</p></li></ul></li><li><p>音频信息——转换成比特和字节。</p><ul><li><p>CD</p><p>脉冲编码调制技术(PCM)，信息保存在CD上<br />CD使用的采样频率为44100Hz，根据采样定理，恰好稍大于人耳能听到的的声音频率范围（20~2wHz）的两倍</p><p>模拟数字转换器(ADC)与数字模拟转换器(DAC)</p></li><li><p>DVD数字多用光盘：两面均可以存储，且视频信息可以被压缩为原来的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>50</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{50}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li><li><p>声音合成：MIDI</p></li><li><p>音频压缩：MPEG技术</p></li></ul></li><li><p>Java</p><ul><li><p>介于编译语言与解释语言之间，编译的结果不是机器码，而是Java字节码<br />Java字节码可以在Java虚拟机上被解释</p></li><li><p>平台无关性：Java程序的运行不受限于机器与图形操作系统</p></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;图形化革命&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#图形化革命&quot;&gt;&lt;/a&gt; 图形化革命&lt;/h3&gt;
&lt;p&gt;电传打字机———&amp;gt;键盘＋阴极射线管(CRT)（哑终端）——》SAGE中的电子枪显示器——》光栅显示器&lt;/p&gt;
&lt;ul&gt;
</summary>
      
    
    
    
    <category term="《code编码：隐匿在计算机软硬件背后的语言》" scheme="https://xqc-1368.github.io/categories/%E3%80%8Acode%E7%BC%96%E7%A0%81%EF%BC%9A%E9%9A%90%E5%8C%BF%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BD%AF%E7%A1%AC%E4%BB%B6%E8%83%8C%E5%90%8E%E7%9A%84%E8%AF%AD%E8%A8%80%E3%80%8B/"/>
    
    
    <category term="《code编码》" scheme="https://xqc-1368.github.io/tags/%E3%80%8Acode%E7%BC%96%E7%A0%81%E3%80%8B/"/>
    
    <category term="GUI" scheme="https://xqc-1368.github.io/tags/GUI/"/>
    
  </entry>
  
  <entry>
    <title>03-2 存储电路：RAM 与 ROM</title>
    <link href="https://xqc-1368.github.io/2024/08/19/03-2%20%E5%AD%98%E5%82%A8%E7%94%B5%E8%B7%AF%EF%BC%9ARAM%20%E4%B8%8E%20ROM/"/>
    <id>https://xqc-1368.github.io/2024/08/19/03-2%20%E5%AD%98%E5%82%A8%E7%94%B5%E8%B7%AF%EF%BC%9ARAM%20%E4%B8%8E%20ROM/</id>
    <published>2024-08-19T09:44:09.425Z</published>
    <updated>2024-08-19T09:42:48.002Z</updated>
    
    <content type="html"><![CDATA[<h3 id="随机存储器ram与只读存储器rom"><a class="markdownIt-Anchor" href="#随机存储器ram与只读存储器rom"></a> 随机存储器（RAM）与只读存储器（ROM）</h3><h5 id="一-寄存器"><a class="markdownIt-Anchor" href="#一-寄存器"></a> 一、寄存器</h5><p>用来暂时存放参与运算的数据和运算结果。把能够用来存储<u>一组</u>二进制代码的<u>同步时序逻辑电路</u>称为寄存器。</p><ul><li>注意看，这本来是一个D触发器，由于命名方式的改变，他的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>：数据输入端被更名为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>I</mi></mrow><annotation encoding="application/x-tex">DI</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span>（即Data In），他的时钟信号端被命名为W（写操作端，Write），他原来的输出端Q被命名为DO（Data Out）<br /><img src="/images/2024-07-09-22-20-51-c4865637f8088d04fe94a2ed1545977.jpg" alt="" /></li></ul><p>将他们以同步时序电路的方式”并联“：<br /><img src="/images/2024-07-09-22-28-39-bef77f266cdcfe16bb03cd1cf3b228d.jpg" alt="" /></p><p>可以得到一个八位寄存器（《code》中用八位锁存器代指这个概念，以下图片不作区分）<br /><img src="/images/2024-07-09-22-30-28-011293572bf9eea5b8ed69e07569bc6.jpg" alt="" /></p><p>可以简化为如下所示的图：</p><p><img src="C:%5CUsers%5Cxqc%5CAppData%5CRoaming%5Cmarktext%5Cimages%5C2024-07-09-22-30-50-7c7d6f26e4755d2a85e4bb9fb5cbd84.jpg" alt="" /></p><p>实际应用的寄存器如图所示：包括74LS75和74HC175<br /><img src="/images/2024-07-09-22-31-36-b93dcd22ab862ac74fd31f30e4a135b.jpg" alt="" /><br /><img src="/images/2024-07-09-22-31-51-746363dd9c673ab4cdc2da7d2f2046d.jpg" alt="" /></p><h5 id="二-随机存储器ram的基本结构"><a class="markdownIt-Anchor" href="#二-随机存储器ram的基本结构"></a> 二、随机存储器（RAM）的基本结构</h5><ul><li>又名“读/写存储器”</li></ul><p>读写操作很自由，只需要改变地址及相关的输入，就可以从寄存器中读出或写入需要的数据</p><ul><li><p>随机访问存储器的符号<br /><img src="/images/2024-07-10-10-36-55-d2290c0185702c8821b7005274f6c4d.jpg" alt="" /></p></li><li><p>随机存储器的组成：译码器＋寄存器+选择器<br /><img src="/images/2024-07-10-10-35-53-58179d07cb8f0f859548ba777f1c51e.jpg" alt="" /></p></li></ul><p>将两个RAM组合成RAM阵列<br /><img src="/images/2024-07-10-10-44-22-65ab4c4c8cc795075120a12430ef54c.jpg" alt="" /><br /><img src="/images/2024-07-10-10-44-00-d09fe3d6ddb94f64440f2dabe4b77c8.jpg" alt="" /></p><p>这个RAM阵列可以存储的二进制数依然是8个，但每个数的位宽为2位。</p><p>使用2个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>8</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">8\times1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的RAM搭一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">16\times1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的RAM</p><ul><li><p>相当于把两个3-8译码器用一个1-2译码器联结起来</p></li><li><p>下方用一个2-1选择器把两个8-1选择器联结起来</p></li></ul><p>（红圈部分不太理解是什么意思）<br /><img src="/images/2024-07-10-11-18-50-image.png" alt="" /></p><p>S作为选择端，本质上用于选择存储的信息，所以可以并入地址端（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">A_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>端即为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>端）<br /><img src="/images/2024-07-10-11-21-26-image.png" alt="" /></p><ul><li><p>注意：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">16\times1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>中</p><ul><li><p>前一个数字 = 存储RAM阵列的存储容量 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mtext>地址输入端的个数</mtext></msup></mrow><annotation encoding="application/x-tex">2^{地址输入端的个数}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">地</span><span class="mord cjk_fallback mtight">址</span><span class="mord cjk_fallback mtight">输</span><span class="mord cjk_fallback mtight">入</span><span class="mord cjk_fallback mtight">端</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">个</span><span class="mord cjk_fallback mtight">数</span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>后一个数字 = 每个单位由几位二进制数构成 = 数据输入端的个数</p></li></ul></li></ul><h5 id="三-静态随机存储器sram"><a class="markdownIt-Anchor" href="#三-静态随机存储器sram"></a> 三、静态随机存储器（SRAM）</h5><p>相比于上面的结构的改进：合并了选择器和译码器的功能，调整为不管是写入还是读出，都由译码器确定需要操作的元素的地址<br /><img src="/images/2024-07-10-17-19-16-c608fb8ba5341a1bac4186a034a3f98.jpg" alt="" /></p><ul><li>SRAM的静态存储单元：六管CMOS静态存储单元<br /><img src="/images/2024-07-10-17-22-12-cc3bf9f4b76f0334f7566fc1cd3971c.jpg" alt="" /></li></ul><p>看着非常复杂，其实上，它本质就是靠着锁存器自锁功能来存储数据的，</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">T_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">T_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>组成SR锁存器，用于记忆1位二进制代码，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">T_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">T_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">T_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">T_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别接成了反相器<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">G_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">G_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>注意看这个Q，他是存储这一位信息的地方（也就是原来的一位锁存器的输出）<br /><img src="/images/2024-07-10-17-40-03-6365b1eb53076ab7639240d02ed80b7.jpg" alt="" /></p><p>当CS=0时候表示电路可以启动了，此时：</p><ul><li><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi mathvariant="normal">/</mi><msup><mi>W</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">R/W&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>端口输入1时，代表读取模式，数据沿蓝色线从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi mathvariant="normal">/</mi><mi>O</mi></mrow><annotation encoding="application/x-tex">I/O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span>；</p></li><li><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi mathvariant="normal">/</mi><msup><mi>W</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">R/W&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>端口输入0时，代表写入模式，数据沿绿色线从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi mathvariant="normal">/</mi><mi>O</mi></mrow><annotation encoding="application/x-tex">I/O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span></span></span></span>；</p></li></ul><p><img src="/images/2024-07-10-17-45-08-9d9c90662c392e0ffa87336f2950eed.jpg" alt="" /></p><p>当然，实现以上数据传递，需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 线都接上高电平。这需要这一位被选择。</p><p>在下图中，行列地址译码器可以确定存储矩阵上哪个元素的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 都导通，那么该元素才有可能被读取。</p><p><img src="/images/2024-07-10-17-55-00-d483dca990936f7b40417e10faa1d15.jpg" alt="" /></p><h5 id="四-动态随机存储器dram"><a class="markdownIt-Anchor" href="#四-动态随机存储器dram"></a> 四、动态随机存储器（DRAM）</h5><p>特点：大容量，高集成度，需要刷新。</p><h5 id="五-只读存储器rom"><a class="markdownIt-Anchor" href="#五-只读存储器rom"></a> 五、只读存储器（ROM）</h5><ul><li>只读存储器的基本结构<br /><img src="/images/2024-07-10-18-00-19-2b6c5cbdf19ead766a130a7456ce617.jpg" alt="" /></li></ul><p>地址译码器由二极管与门构成，存储矩阵由或门构成。输出缓冲器则用于提高存储器的带负载能力，并实现对输出状态的三态控制。<br /><img src="/images/2024-07-10-19-07-22-876cc04595d9f426ce504d70022b617.jpg" alt="" /></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">W_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><sub>$W_3$是字线，$d_0$</sub><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">d_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是位线（数据线），而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">A_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">A_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>则被称为地址线</p><p>与此同时，要通过给定的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><msup><mi>N</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">EN&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 信号决定对输出的三态控制。</p><ul><li>技巧：字线与位线的交叉点接有 MOS 管 / 二极管时相当于存1，没有接 MOS 管 / 二极管 时相当于存0</li></ul><p><img src="/images/2024-07-10-19-20-47-5b67d00136b679dc1aea339f07a9f80.jpg" alt="" /></p><p>鉴于 MOS管中也有PN结，可以用来代替原来图中的PN结。对存储部分，可以有如下改造：</p><p><img src="/images/2024-07-10-19-26-12-72bb4540cff81202b066b25c7a1ea03.jpg" alt="" /></p><h5 id="六-其他类型分rom与闪存"><a class="markdownIt-Anchor" href="#六-其他类型分rom与闪存"></a> 六、其他类型分ROM与闪存</h5><ol><li>掩模只读存储器（Mask ROM）</li></ol><ul><li>数据固化，不可以修改</li></ul><ol start="2"><li>可编程只读存储器（PROM）</li></ol><ul><li><p>一次性：一经写入，不可修改<br /><img src="/images/2024-07-10-19-37-19-99b9abcd6c4a2566f7662c896a31c85.jpg" alt="" /></p><p>PROM结构示意图：</p><p>一开始存储阵列里面全是1，写入时在D_0~D_7<br /><img src="/images/2024-07-10-19-39-05-9343e6e24d4442b86f24461bb6ff165.jpg" alt="" /></p></li></ul><p>以下三种：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mi>V</mi><mi>E</mi><mi>P</mi><mi>R</mi><mi>O</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">UVEPROM</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>E</mi><mn>2</mn></msup><mi>P</mi><mi>R</mi><mi>O</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">E^2PROM</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span> 以及闪存，都属于EPROM（可擦除可编程只读存储器）</p><ol start="3"><li>紫外线擦除的只读存储器（UVEPROM）与电信号擦除的可编程只读存储器(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>E</mi><mn>2</mn></msup><mi>P</mi><mi>R</mi><mi>O</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">E^2PROM</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>)</li></ol><p>略</p><ol start="4"><li>快闪存储器（闪存，Flash Memory）</li></ol><p>闪存的存储单元是：一只浮栅MOS管除了控制栅 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">G_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 之外，在控制栅和衬底之间增加了一个浮置栅 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">G_f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></p><p>工作原理：</p><ul><li><p>在读出状态下</p><ul><li><p>若浮置栅 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">G_f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 上充有负电荷，</p><ul><li><p>当字线给出高电平时浮栅MOS管截止，位线上输出高电平；</p></li><li><p>当字线给出低电平时浮栅MOS管导通，位线上输出低电平。</p></li></ul></li><li><p>若浮置栅 $G_f $上没有负电荷，</p><ul><li><p>当字线给出高电平时浮栅MOS管导通，位线上输出低电平；</p></li><li><p>当字线给出低电平时浮栅MOS管截止，位线上输出高电平。</p></li></ul></li></ul></li></ul><p><img src="/images/2024-07-10-19-57-27-image.png" alt="" /></p><ul><li><p>在写入状态下</p><ul><li>若浮置栅<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">G_f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 的充电是利用雪崩注入的方法实现的：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">G_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>加正脉冲，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>加高电压，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>加0电平，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>−</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">D-S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>直接雪崩击穿，高速电子到达浮置栅<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">G_f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></li></ul></li><li><p>在擦除状态下</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">G_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>置0，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>加正脉冲，产生导电隧道，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>e</mi></msub><mo>−</mo><msub><mi>G</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">G_e-G_f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>之间电容小于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>f</mi></msub><mo>−</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">G_f-S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>之间电容，脉冲电压加到隧道，浮置栅<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">G_f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>上电子被导走。</li></ul></li></ul><p>特点：擦除快，写入慢</p><h5 id="七-存储器容量的扩展"><a class="markdownIt-Anchor" href="#七-存储器容量的扩展"></a> 七、存储器容量的扩展</h5><ol><li>位扩展方式：直接联结</li></ol><p>例如：用8片 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1024</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1024\times1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">2</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的 RAM 接成一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1024</mn><mo>×</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">1024 \times 8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">2</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span> 的RAM</p><p><img src="/images/2024-07-10-21-26-29-1e313e163f26600cbf9589d87a28f21.jpg" alt="" /></p><p>对于ROM，除了上面没有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi mathvariant="normal">/</mi><msup><mi>W</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">R/W&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 端之外，其余与RAM相同</p><ol start="2"><li>字扩展方式：使用译码器加地址端口数量</li></ol><p>例如：用4片<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>256</mn><mo>×</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">256\times 8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span> 的RAM接成一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1024</mn><mo>×</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">1024\times 8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">2</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span> 的RAM</p><p><img src="/images/2024-07-10-21-29-34-ab713cadd5edc73675d72ad0c63d839.jpg" alt="" /></p><p>增加两位地址代码<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>8</mn></msub></mrow><annotation encoding="application/x-tex">A_8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>9</mn></msub></mrow><annotation encoding="application/x-tex">A _9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 译码器输出与各个RAM的CS端相连</p><p>则有：</p><p><img src="/images/2024-07-10-21-33-14-fa4584af2566576a3e4db94f3cb10ef.jpg" alt="" /></p><p>上述接法也适用于ROM</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;随机存储器ram与只读存储器rom&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#随机存储器ram与只读存储器rom&quot;&gt;&lt;/a&gt; 随机存储器（RAM）与只读存储器（ROM）&lt;/h3&gt;
&lt;h5 id=&quot;一-寄存器&quot;&gt;&lt;a class=&quot;m</summary>
      
    
    
    
    <category term="数字电子技术基础" scheme="https://xqc-1368.github.io/categories/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="数电" scheme="https://xqc-1368.github.io/tags/%E6%95%B0%E7%94%B5/"/>
    
    <category term="存储模块" scheme="https://xqc-1368.github.io/tags/%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9D%97/"/>
    
    <category term="RAM" scheme="https://xqc-1368.github.io/tags/RAM/"/>
    
    <category term="ROM" scheme="https://xqc-1368.github.io/tags/ROM/"/>
    
  </entry>
  
  <entry>
    <title>03-1 存储电路：各种各样的触发器</title>
    <link href="https://xqc-1368.github.io/2024/08/19/03-1%20%E5%AD%98%E5%82%A8%E7%94%B5%E8%B7%AF%EF%BC%9A%E5%90%84%E7%A7%8D%E5%90%84%E6%A0%B7%E7%9A%84%E8%A7%A6%E5%8F%91%E5%99%A8/"/>
    <id>https://xqc-1368.github.io/2024/08/19/03-1%20%E5%AD%98%E5%82%A8%E7%94%B5%E8%B7%AF%EF%BC%9A%E5%90%84%E7%A7%8D%E5%90%84%E6%A0%B7%E7%9A%84%E8%A7%A6%E5%8F%91%E5%99%A8/</id>
    <published>2024-08-19T09:44:09.420Z</published>
    <updated>2024-08-19T09:24:52.807Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数字电子技术基础半导体存储电路触发器"><a class="markdownIt-Anchor" href="#数字电子技术基础半导体存储电路触发器"></a> 数字电子技术基础——半导体存储电路：触发器</h1><h3 id="一-触发器按照逻辑功能分类"><a class="markdownIt-Anchor" href="#一-触发器按照逻辑功能分类"></a> 一、触发器按照逻辑功能分类</h3><p>触发器按照逻辑功能分类：</p><p>SR触发，JK触发，T触发，D触发</p><h5 id="1sr触发"><a class="markdownIt-Anchor" href="#1sr触发"></a> 1.SR触发：</h5><p><img src="/images/2024-06-17-21-48-37-image.png" alt="" /></p><h6 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能</h6><p>S为置位端（set），R为复位端（reset）</p><ul><li><p>当S=1时，输出Q=1</p></li><li><p>当R=1时，输出Q=0</p></li><li><p>S,R不同时为1。S,R同时为0，保持上一个状态。</p></li></ul><h6 id="特性方程"><a class="markdownIt-Anchor" href="#特性方程"></a> 特性方程</h6><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>Q</mi><mo lspace="0em" rspace="0em">∗</mo></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>S</mi><mo>+</mo><msup><mi>R</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>Q</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>S</mi><mi>R</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\left\{\begin{aligned}Q^{*} &amp; =  S+R&#x27;Q \\SR  &amp;=  0 \\\end{aligned}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.00003em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">Q</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h6 id="状态转换图"><a class="markdownIt-Anchor" href="#状态转换图"></a> 状态转换图</h6><p><img src="/images/2024-06-17-21-29-23-image.png" alt="" /></p><h5 id="2jk触发器"><a class="markdownIt-Anchor" href="#2jk触发器"></a> 2.JK触发器</h5><p><img src="/images/2024-06-17-21-48-55-image.png" alt="" /></p><h6 id="功能-2"><a class="markdownIt-Anchor" href="#功能-2"></a> 功能</h6><p>J为置位端，K为复位端</p><ul><li><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">J=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>时，输出Q=1</p></li><li><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">K=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>时，输出Q=0</p></li><li><p>J,K之间不要求同时不为1。J,K同时为0，保持上一个状态。</p></li><li><p>J,K同时为1，时钟信号到达后  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Q</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">Q^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8831359999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>  相比于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span></span></span></span> 发生翻转</p></li></ul><h6 id="特征方程"><a class="markdownIt-Anchor" href="#特征方程"></a> 特征方程</h6><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>Q</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo>=</mo><mi>J</mi><msup><mi>Q</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><msup><mi>K</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q^{*} =  JQ&#x27;+K&#x27;Q </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.933136em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.996332em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.996332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">Q</span></span></span></span></span></p><h6 id="状态转换图-2"><a class="markdownIt-Anchor" href="#状态转换图-2"></a> 状态转换图</h6><p><img src="/images/2024-06-17-21-42-01-image.png" alt="" /></p><h5 id="3t触发器"><a class="markdownIt-Anchor" href="#3t触发器"></a> 3.T触发器</h5><p><img src="/images/2024-06-17-21-49-40-image.png" alt="" /></p><h6 id="功能翻转"><a class="markdownIt-Anchor" href="#功能翻转"></a> 功能：翻转</h6><p>T为翻转信号输入端</p><ul><li><p>当T=1时，输出信号在0-1之间翻转</p></li><li><p>当T=0时，输出信号保持</p></li></ul><h6 id="特征方程-2"><a class="markdownIt-Anchor" href="#特征方程-2"></a> 特征方程</h6><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>Q</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo>=</mo><mi>T</mi><msup><mi>Q</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><msup><mi>T</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q^{*} = TQ&#x27;+T&#x27;Q </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.933136em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.996332em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.996332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">Q</span></span></span></span></span></p><h6 id="状态转换图-3"><a class="markdownIt-Anchor" href="#状态转换图-3"></a> 状态转换图</h6><p><img src="/images/2024-06-17-21-53-39-image.png" alt="" /></p><h5 id="4d触发器"><a class="markdownIt-Anchor" href="#4d触发器"></a> 4.D触发器</h5><h6 id="功能指挥"><a class="markdownIt-Anchor" href="#功能指挥"></a> 功能：指挥</h6><p>为翻转信号输入端</p><ul><li><p>当D=1时，Q=1或保持1</p></li><li><p>当D=0时，Q=0或保持0</p></li></ul><h6 id="特征方程-3"><a class="markdownIt-Anchor" href="#特征方程-3"></a> 特征方程</h6><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>Q</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo>=</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">Q^{*} = D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.933136em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span></span></p><h6 id="状态转换图-4"><a class="markdownIt-Anchor" href="#状态转换图-4"></a> 状态转换图</h6><p><img src="/images/2024-06-17-21-55-15-image.png" alt="" /></p><h3 id="二-触发器按照触发方式分类"><a class="markdownIt-Anchor" href="#二-触发器按照触发方式分类"></a> 二、触发器按照触发方式分类</h3><h5 id="1-电平触发的触发器"><a class="markdownIt-Anchor" href="#1-电平触发的触发器"></a> 1. 电平触发的触发器</h5><p><img src="/images/2024-06-17-22-04-11-image.png" alt="" /></p><h5 id="介入功能"><a class="markdownIt-Anchor" href="#介入功能"></a> 介入功能</h5><ul><li><p>CLK=0时，不接受输入，保持原来状态</p></li><li><p>CLK=1时，接受输入，相应变化</p></li></ul><h5 id="2-边沿触发的触发器"><a class="markdownIt-Anchor" href="#2-边沿触发的触发器"></a> 2. 边沿触发的触发器</h5><p>下降沿触发：<br /><img src="/images/2024-06-17-22-08-11-image.png" alt="" /></p><p>上升沿触发：<br /><img src="/images/2024-06-17-22-08-19-image.png" alt="" /></p><h5 id="介入功能-2"><a class="markdownIt-Anchor" href="#介入功能-2"></a> 介入功能</h5><ul><li><p>CP信号为对应沿时，接受输入</p></li><li><p>CP信号不为对应沿时，不接受输入，保持原来状态</p></li></ul><h5 id="3-脉冲触发器"><a class="markdownIt-Anchor" href="#3-脉冲触发器"></a> 3. 脉冲触发器</h5><p>下降沿脉冲触发<br /><img src="/images/2024-06-17-22-12-48-image.png" alt="" /></p><p>上升沿脉冲触发就是在C1外面接上一个  “<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mtext>。</mtext></msup></mrow><annotation encoding="application/x-tex">^。</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">。</span></span></span></span></span></span></span></span></span></span></span>”</p><p>介入功能</p><ul><li><p>CP信号为对应沿沿前时，接受输入直至沿到达</p></li><li><p>CP信号为对应沿沿后时，不接受输入，保持原来状态直至相反沿到达开始接受输入</p></li><li><p>JK脉冲触发器在接受输入过程中输出信号只能翻转一次，而SR触发器可以根据脉冲区间S,R输入信号的改变多次翻转</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数字电子技术基础半导体存储电路触发器&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数字电子技术基础半导体存储电路触发器&quot;&gt;&lt;/a&gt; 数字电子技术基础——半导体存储电路：触发器&lt;/h1&gt;
&lt;h3 id=&quot;一-触发器按照逻辑功能分类&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="数字电子技术基础" scheme="https://xqc-1368.github.io/categories/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="数电" scheme="https://xqc-1368.github.io/tags/%E6%95%B0%E7%94%B5/"/>
    
    <category term="存储模块" scheme="https://xqc-1368.github.io/tags/%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9D%97/"/>
    
    <category term="触发器" scheme="https://xqc-1368.github.io/tags/%E8%A7%A6%E5%8F%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>02-3 数值比较器</title>
    <link href="https://xqc-1368.github.io/2024/08/19/02-3%20%E6%95%B0%E5%80%BC%E6%AF%94%E8%BE%83%E5%99%A8/"/>
    <id>https://xqc-1368.github.io/2024/08/19/02-3%20%E6%95%B0%E5%80%BC%E6%AF%94%E8%BE%83%E5%99%A8/</id>
    <published>2024-08-19T09:44:09.411Z</published>
    <updated>2024-08-19T09:19:54.787Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数值比较器"><a class="markdownIt-Anchor" href="#数值比较器"></a> 数值比较器</h3><h5 id="一-一位数值比较器"><a class="markdownIt-Anchor" href="#一-一位数值比较器"></a> 一、一位数值比较器</h5><ul><li><p>A=1，B=0时有A&gt;B：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>&gt;</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></msub><mo>=</mo><mi>A</mi><msup><mi>B</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">Y_{(A&gt;B)}=AB&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mrel mtight">&gt;</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></li></ul></li><li><p>A=0，B=1时有A&lt;B：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>&gt;</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></msub><mo>=</mo><mi>A</mi><msup><mi>B</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">Y_{(A&gt;B)}=AB&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mrel mtight">&gt;</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></li></ul></li><li><p>A=B=0或A=B=1时 即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>⨀</mo><mi>B</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">A\bigodot B=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>时有A=B：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>=</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></msub><mo>=</mo><mi>A</mi><mo>⨀</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">Y_{(A=B)}=A\bigodot B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></li></ul></li></ul><p>如下图所示为其中一种实现方法：<br /><img src="/images/2024-07-09-20-37-51-f1f42600fc83cdd9c39ffea867d7c92.jpg" alt="" /></p><h5 id="二-多位数值比较器"><a class="markdownIt-Anchor" href="#二-多位数值比较器"></a> 二、多位数值比较器</h5><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>&gt;</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></msub><mo>=</mo><msub><mi>A</mi><mn>3</mn></msub><msubsup><mi>B</mi><mn>3</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>+</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>3</mn></msub><mo>⨀</mo><msub><mi>B</mi><mn>3</mn></msub><mo stretchy="false">)</mo><msub><mi>A</mi><mn>2</mn></msub><msubsup><mi>B</mi><mn>2</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>+</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>3</mn></msub><mo>⨀</mo><msub><mi>B</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>2</mn></msub><mo>⨀</mo><msub><mi>B</mi><mn>2</mn></msub><mo stretchy="false">)</mo><msub><mi>A</mi><mn>1</mn></msub><msubsup><mi>B</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mspace linebreak="newline"></mspace><mo>+</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>3</mn></msub><mo>⨀</mo><msub><mi>B</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>2</mn></msub><mo>⨀</mo><msub><mi>B</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>1</mn></msub><mo>⨀</mo><msub><mi>B</mi><mn>1</mn></msub><mo stretchy="false">)</mo><msub><mi>A</mi><mn>0</mn></msub><msubsup><mi>B</mi><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>+</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>3</mn></msub><mo>⨀</mo><msub><mi>B</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>2</mn></msub><mo>⨀</mo><msub><mi>B</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>1</mn></msub><mo>⨀</mo><msub><mi>B</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>0</mn></msub><mo>⨀</mo><msub><mi>B</mi><mn>0</mn></msub><mo stretchy="false">)</mo><msub><mi>I</mi><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>&gt;</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">Y_{(A&gt;B)}=A_3B&#x27;_3+(A_3\bigodot B_3)A_2B&#x27;_2+(A_3\bigodot B_3)(A_2\bigodot B_2)A_1B&#x27;_1\\+(A_3\bigodot B_3)(A_2\bigodot B_2)(A_1\bigodot B_1)A_0B&#x27;_0+(A_3\bigodot B_3)(A_2\bigodot B_2)(A_1\bigodot B_1)(A_0\bigodot B_0)I_{(A&gt;B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mrel mtight">&gt;</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.001902em;vertical-align:-0.25001em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.001902em;vertical-align:-0.25001em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.001902em;vertical-align:-0.25001em;"></span><span class="mord">+</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mrel mtight">&gt;</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span></p><ul><li>简单的中国话理解：A&gt;B只能是最高位<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>3</mn></msub><mo>&gt;</mo><msub><mi>B</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">A_3&gt;B_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；或者最高位相等，第二位<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>2</mn></msub><mo>&gt;</mo><msub><mi>B</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">A_2&gt;B_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；或者最高位和第二位都相等，第三位<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mo>&gt;</mo><msub><mi>B</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">A_1&gt;B_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；或者前面三位都相等，最后一位<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>0</mn></msub><mo>&gt;</mo><msub><mi>B</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">A_0&gt;B_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；或者这些位全部相等，来自低位的进位信号为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>&gt;</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">I_{(A&gt;B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mrel mtight">&gt;</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span></li></ul><p>同理可以得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>&lt;</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">Y_{(A&lt;B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>当然，也可以使用代入定理，因为上述已经有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>&gt;</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">Y_{(A&gt;B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mrel mtight">&gt;</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>，而且显然<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>=</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">Y_{(A=B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>相对好算</p><p>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>=</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>3</mn></msub><mo>⨀</mo><msub><mi>B</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>2</mn></msub><mo>⨀</mo><msub><mi>B</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>1</mn></msub><mo>⨀</mo><msub><mi>B</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>0</mn></msub><mo>⨀</mo><msub><mi>B</mi><mn>0</mn></msub><mo stretchy="false">)</mo><msub><mi>I</mi><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>=</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">Y_{(A=B)}=(A_3\bigodot B_3)(A_2\bigodot B_2)(A_1\bigodot B_1)(A_0\bigodot B_0)I_{(A=B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>）</p><p>那么也就很好得出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>&lt;</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>Y</mi><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>=</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></msub><mo>+</mo><msub><mi>Y</mi><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>&gt;</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></msub><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">Y_{(A&lt;B)}=(Y_{(A=B)}+Y_{(A&gt;B)})&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.107092em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mrel mtight">&gt;</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></p><p>以上实现：4位数值比较器74HC85<br /><img src="/images/2024-07-09-20-48-31-750f1b6571d6b4b7de2384fa18c1df3.jpg" alt="" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;数值比较器&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数值比较器&quot;&gt;&lt;/a&gt; 数值比较器&lt;/h3&gt;
&lt;h5 id=&quot;一-一位数值比较器&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#一-一位数值比较器&quot;&gt;</summary>
      
    
    
    
    <category term="数字电子技术基础" scheme="https://xqc-1368.github.io/categories/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="数电" scheme="https://xqc-1368.github.io/tags/%E6%95%B0%E7%94%B5/"/>
    
    <category term="数值比较器" scheme="https://xqc-1368.github.io/tags/%E6%95%B0%E5%80%BC%E6%AF%94%E8%BE%83%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>02-2 加法器与减法器</title>
    <link href="https://xqc-1368.github.io/2024/08/19/02-2%20%E5%8A%A0%E6%B3%95%E5%99%A8%E4%B8%8E%E5%87%8F%E6%B3%95%E5%99%A8/"/>
    <id>https://xqc-1368.github.io/2024/08/19/02-2%20%E5%8A%A0%E6%B3%95%E5%99%A8%E4%B8%8E%E5%87%8F%E6%B3%95%E5%99%A8/</id>
    <published>2024-08-19T09:44:09.405Z</published>
    <updated>2024-08-19T09:18:32.630Z</updated>
    
    <content type="html"><![CDATA[<h1 id="加法器与减法器"><a class="markdownIt-Anchor" href="#加法器与减法器"></a> 加法器与减法器</h1><h2 id="一-实现异或门的一种好方法"><a class="markdownIt-Anchor" href="#一-实现异或门的一种好方法"></a> 一、实现异或门的一种好方法：</h2><h6 id="使用最少继电器实现只用了6个继电器"><a class="markdownIt-Anchor" href="#使用最少继电器实现只用了6个继电器"></a> 使用最少继电器实现（只用了6个继电器）</h6><p><img src="/images/2024-07-07-15-05-58-image.png" alt="" /></p><h6 id="使用单种逻辑门实现用了8个继电器"><a class="markdownIt-Anchor" href="#使用单种逻辑门实现用了8个继电器"></a> 使用单种逻辑门实现（用了8个继电器）</h6><p><img src="/images/2024-07-07-15-07-55-image.png" alt="" /></p><h3 id="二-一位加法器"><a class="markdownIt-Anchor" href="#二-一位加法器"></a> 二、一位加法器</h3><ol><li><strong>半加器</strong></li></ol><p>半加器（半加就是只求本位的和，暂不管低位送来的进位数）的逻辑状态表</p><table><thead><tr><th>A</th><th>B</th><th>CO (进位信号)</th><th>S (本位和)</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>0</td><td>1</td><td>0</td><td>1</td></tr><tr><td>1</td><td>0</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>1</td><td>0</td></tr></tbody></table><p>逻辑表达式：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>S</mi><mo>=</mo><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>B</mi><mo>+</mo><mi>A</mi><msup><mi>B</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mtext>（异或）</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>C</mi><mi>O</mi><mo>=</mo><mi>A</mi><mi>B</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f(x)=\left\{\begin{aligned}&amp;S=A&#x27;B+AB&#x27;（异或）\\&amp;CO=AB\end{aligned}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.00003em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">异</span><span class="mord cjk_fallback">或</span><span class="mord cjk_fallback">）</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>实现如下：（需要8个继电器）<br /><img src="/images/2024-07-07-14-41-29-image.png" alt="" /></p><ol start="2"><li><strong>全加器（Full Adder）</strong></li></ol><p>将对应位的加数和来自低位进位的3个数相加</p><ul><li>使用半加器实现全加器（需要18个继电器：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>8</mn><mo>×</mo><mn>2</mn><mo>+</mo><mn>2</mn><mo>=</mo><mn>18</mn></mrow><annotation encoding="application/x-tex">8\times2+2=18</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">8</span></span></span></span>）</li></ul><p>值得注意的是，两个半加器的输出不可能全为1，所以将两个进位信号相或，即可得到输出。<br /><img src="/images/2024-07-07-14-57-07-image.png" alt="" /></p><h3 id="二-多位加法器"><a class="markdownIt-Anchor" href="#二-多位加法器"></a> 二、多位加法器</h3><ol><li>串行进行的多位加法器</li></ol><p>缺点：运算速度慢（下图展示的是4位串行进位加法器）</p><p><img src="/images/2024-08-19-17-14-54-image.png" alt="" /></p><ol start="2"><li>超前进位加法器（74HC283）</li></ol><p>下图为一全加器真值表：</p><table><thead><tr><th>CI</th><th>A</th><th>B</th><th>S</th><th>CO</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td></tr><tr><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td></tr><tr><td>0</td><td>1</td><td>1</td><td>0</td><td>1</td></tr><tr><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td></tr><tr><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr></tbody></table><p>先计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><msub><mi>O</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">CO_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：</p><p>可见：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>C</mi><mi>O</mi><msub><mo stretchy="false">)</mo><mi>i</mi></msub><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub><msub><mi>B</mi><mi>i</mi></msub><mo>+</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mi>i</mi></msub><mo>+</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>C</mi><mi>I</mi><msub><mo stretchy="false">)</mo><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">(CO)_i=A_iB_i+(A_i+B_i)(CI)_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>定义：</p><ul><li><p>进位生成函数  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>i</mi></msub><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">G_i=A_iB_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>进位传送函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mi>i</mi></msub><mo>+</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_i=(A_i+B_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></li></ul><p>则上述式子可以化简为</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>C</mi><mi>O</mi><msub><mo stretchy="false">)</mo><mi>i</mi></msub><mo>=</mo><msub><mi>G</mi><mi>i</mi></msub><mo>+</mo><msub><mi>P</mi><mi>i</mi></msub><mi>C</mi><msub><mi>I</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">(CO)_i=G_i+P_iCI_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><msub><mi>I</mi><mi>i</mi></msub><mo>=</mo><mi>C</mi><msub><mi>O</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">CI_i=CO_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></p><p>迭代可得：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>C</mi><mi>O</mi><msub><mo stretchy="false">)</mo><mi>i</mi></msub><mo>=</mo><msub><mi>G</mi><mi>i</mi></msub><mo>+</mo><msub><mi>P</mi><mi>i</mi></msub><msub><mi>G</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>P</mi><mi>i</mi></msub><msub><mi>P</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><msub><mi>G</mi><mrow><mi>i</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>P</mi><mi>i</mi></msub><msub><mi>P</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>P</mi><mn>1</mn></msub><msub><mi>G</mi><mn>0</mn></msub><mo>+</mo><msub><mi>P</mi><mi>i</mi></msub><msub><mi>P</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>P</mi><mn>0</mn></msub><mo stretchy="false">(</mo><mi>C</mi><msub><mi>I</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(CO)_i=G_i+P_iG_{i-1}+P_iP_{i-1}G_{i-2}+...+P_iP_{i-1}...P_1G_0+P_iP_{i-1}...P_0(CI_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>实际上在搭建过程中是将原始式子中所有的部分反向后完成，即有：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>C</mi><mi>O</mi><msubsup><mo stretchy="false">)</mo><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><msubsup><mi>G</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>+</mo><msubsup><mi>P</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>G</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>+</mo><msubsup><mi>P</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>P</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>G</mi><mrow><mi>i</mi><mo>−</mo><mn>2</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msubsup><mi>P</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>P</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mi>P</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>G</mi><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>+</mo><msubsup><mi>P</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>P</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mi>P</mi><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">(</mo><mi>C</mi><msub><mi>I</mi><mn>0</mn></msub><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">(CO)&#x27;_i=G&#x27;_i+P&#x27;_iG&#x27;_{i-1}+P&#x27;_iP&#x27;_{i-1}G&#x27;_{i-2}+...+P&#x27;_iP&#x27;_{i-1}...P&#x27;_1G&#x27;_0+P&#x27;_iP&#x27;_{i-1}...P&#x27;_0(CI_0)&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.010556em;vertical-align:-0.258664em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.010556em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0688870000000001em;vertical-align:-0.316995em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.316995em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0688870000000001em;vertical-align:-0.316995em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.316995em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.316995em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0688870000000001em;vertical-align:-0.316995em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.316995em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0688870000000001em;vertical-align:-0.316995em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.316995em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></p><p>即：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>C</mi><mi>O</mi><msub><mo stretchy="false">)</mo><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msubsup><mi>G</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>+</mo><msubsup><mi>P</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>G</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>+</mo><msubsup><mi>P</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>P</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>G</mi><mrow><mi>i</mi><mo>−</mo><mn>2</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msubsup><mi>P</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>P</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mi>P</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>G</mi><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>+</mo><msubsup><mi>P</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>P</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mi>P</mi><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">(</mo><mi>C</mi><msub><mi>I</mi><mn>0</mn></msub><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">(CO)_i=(G&#x27;_i+P&#x27;_iG&#x27;_{i-1}+P&#x27;_iP&#x27;_{i-1}G&#x27;_{i-2}+...+P&#x27;_iP&#x27;_{i-1}...P&#x27;_1G&#x27;_0+P&#x27;_iP&#x27;_{i-1}...P&#x27;_0(CI_0)&#x27;)&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.010556em;vertical-align:-0.258664em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0688870000000001em;vertical-align:-0.316995em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.316995em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0688870000000001em;vertical-align:-0.316995em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.316995em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.316995em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0688870000000001em;vertical-align:-0.316995em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.316995em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0688870000000001em;vertical-align:-0.316995em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.316995em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><br /><img src="/images/2024-07-07-19-24-19-image.png" alt="" /></p><p>而从全加器的真值表也可以得出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的逻辑表达式:</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mi>i</mi></msub><msubsup><mi>B</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>+</mo><msubsup><mi>A</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>C</mi><mi>I</mi><msubsup><mo stretchy="false">)</mo><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>+</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mi>i</mi></msub><msub><mi>B</mi><mi>i</mi></msub><mo>+</mo><msubsup><mi>A</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>B</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>C</mi><mi>I</mi><msub><mo stretchy="false">)</mo><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i=(A_iB&#x27;_i+A&#x27;_iB_i)(CI)&#x27;_i+(A_iB_i+A&#x27;_iB&#x27;_i)(CI)_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.010556em;vertical-align:-0.258664em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.010556em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.010556em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>也就是：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub><mo>⊕</mo><msub><mi>B</mi><mi>i</mi></msub><mo>⊕</mo><mo stretchy="false">(</mo><mi>C</mi><mi>I</mi><msub><mo stretchy="false">)</mo><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i=A_i\oplus B_i \oplus (CI)_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br /><img src="/images/2024-07-07-19-48-55-3c246b328f11c3ed66410c087081421.jpg" alt="" /></p><h3 id="三-减法器"><a class="markdownIt-Anchor" href="#三-减法器"></a> 三、减法器</h3><h5 id="1-十进制数对9的补数反码与对10的补数补码"><a class="markdownIt-Anchor" href="#1-十进制数对9的补数反码与对10的补数补码"></a> 1.   十进制数对9的补数（反码）与对10的补数（补码）</h5><ul><li>减法运算变为加法运算：求对9 的补数</li></ul><p>如果计算：253-176</p><p>相当于计算：</p><p>253 + (999-176)+1-1000</p><ul><li>循环排序的实现法：对所有数取10的补数</li></ul><p>10的补数=9的补数＋1</p><table><thead><tr><th>-500</th><th>-499</th><th>…</th><th>-1</th><th>0</th><th>1</th><th>…</th><th>498</th><th>499</th><th>500</th></tr></thead><tbody><tr><td>500</td><td>501</td><td>…</td><td>999</td><td>000</td><td>001</td><td>…</td><td>498</td><td>499</td><td>500</td></tr></tbody></table><h5 id="2-二进制数对1的补数二进制反码和对2的补数二进制补码"><a class="markdownIt-Anchor" href="#2-二进制数对1的补数二进制反码和对2的补数二进制补码"></a> 2.  二进制数对1的补数（二进制反码）和对2的补数（二进制补码）</h5><p>（1）异或门搭建的求补器<br /><img src="/images/2024-07-07-20-35-00-d8f7e6528b077d48f44bbc05fed66cf.jpg" alt="" /></p><p>由于异或门的工作方式：</p><table><thead><tr><th>XOR</th><th>0</th><th>1</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>0</td></tr></tbody></table><p>当取反信号为0时，不取反，执行左边一列；当取反信号为1时， 取反，执行右边一列。</p><p>集成之后如下图：<br /><img src="/images/2024-07-07-20-38-21-ad4206f781a633d5cdc6288190998df.jpg" alt="" /></p><p>二进制减法器的实现如下：<br /><img src="/images/2024-07-07-21-13-53-008e91e059cee6482d806a91583a5cd.jpg" alt="" /></p><p>当<code>SUB</code>信号输入0时，表相加。当<code>SUB</code>信号输入1时，表相减。</p><p>先看<code>SUB</code>=0的情况：</p><p>求补器不工作，输出与输入相同。即正常地把两个数相加。<code>CI</code>输入也是0。</p><p>而且输出的<code>CO</code>信号与<code>SUB</code>信号作异或运算，即当<code>SUB</code>=0，有输出信号Y=CO</p><p>若Y=1，则表示运算上溢（表示加法中得到的值大于八位二进制能表示的最大数字255）。</p><p>再看<code>SUB</code>=1的情况：</p><p>求补器工作，输出与输出反向。输入的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>7</mn></msub></mrow><annotation encoding="application/x-tex">B_7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><sub>$B_0$是取反之后的结果。这时`CI`的输入为1，加上后表示$B_7$</sub><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">B_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>取反结果＋1</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>7</mn></msub></mrow><annotation encoding="application/x-tex">A_7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">A_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示的数为正数，补码为其本身。加法器相当于把两者的补码相加。</p><p>得到的和输出的是相减之后的结果（这怎么理解，见下）</p><blockquote><p>比如253-176=77得到的是正数，没有下溢。</p><p>253 用二进制表示为1111 1101（也是它的补码）</p><p>176用二进制表示为1011 0000</p><p>-176的八位二进制补码为0101 0000</p><p>求和得到：1 0100 1101 （可见如果结果为正，是一定能溢出一位的，因为溢出是来源于我加上去的那个256，连0加上256 ，都能溢出一位。而假如结果没有溢出，只能说明结果本来就是负数）</p><p>这样算相当于253+（256-176）-256（-256的操作依靠取后8位实现）</p><p>又比方说176-253=-77，得到的是负数</p><p>176的二进制：1011 0000</p><p>-253的补码：0000 0011</p><p>求和后：1011 0011</p><p>（注意：这是179的二进制，求得-79的二进制需要在对这个数取反加一）</p></blockquote><p>由上面这段文字可知，结果的CO位体现着结果的正负性。当CO为1的时候，表示输出的是正数；当CO为0的时候，表示输出的是负数。</p><p>当CO等于0的时候，我们只知道他是负的，不知道具体是多少，后续还要再对该数字做取反加一的后续操作，才能得到-77中的“77”这个信息。</p><ul><li><p>当我们已经得到了176+（256-253）后：</p><p>后续的取反加一实际上是在做这个：256-（176+（256-253））</p></li></ul><p>写在最后的注意事项：</p><p>无符号八位二进制数表示范围为：0~255</p><p>有符号八位二进制数表示范围为：-128~127</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;加法器与减法器&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#加法器与减法器&quot;&gt;&lt;/a&gt; 加法器与减法器&lt;/h1&gt;
&lt;h2 id=&quot;一-实现异或门的一种好方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#一</summary>
      
    
    
    
    <category term="数字电子技术基础" scheme="https://xqc-1368.github.io/categories/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="数电" scheme="https://xqc-1368.github.io/tags/%E6%95%B0%E7%94%B5/"/>
    
    <category term="加法器与减法器" scheme="https://xqc-1368.github.io/tags/%E5%8A%A0%E6%B3%95%E5%99%A8%E4%B8%8E%E5%87%8F%E6%B3%95%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>02-1 编码器、译码器与数据选择器</title>
    <link href="https://xqc-1368.github.io/2024/08/19/02-1%20%E7%BC%96%E7%A0%81%E5%99%A8%E3%80%81%E8%AF%91%E7%A0%81%E5%99%A8%E4%B8%8E%E6%95%B0%E6%8D%AE%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>https://xqc-1368.github.io/2024/08/19/02-1%20%E7%BC%96%E7%A0%81%E5%99%A8%E3%80%81%E8%AF%91%E7%A0%81%E5%99%A8%E4%B8%8E%E6%95%B0%E6%8D%AE%E9%80%89%E6%8B%A9%E5%99%A8/</id>
    <published>2024-08-19T09:44:09.400Z</published>
    <updated>2024-08-19T08:59:39.204Z</updated>
    
    <content type="html"><![CDATA[<h3 id="02-1-编码器与译码器"><a class="markdownIt-Anchor" href="#02-1-编码器与译码器"></a> 02-1 编码器与译码器</h3><h5 id="一-编码器"><a class="markdownIt-Anchor" href="#一-编码器"></a> 一、编码器</h5><p>功能：将输入的每一个高、低电平信号编成一个对应的二进制代码。</p><h6 id="1-普通编码器"><a class="markdownIt-Anchor" href="#1-普通编码器"></a> 1、普通编码器</h6><p>在普通编码器中，任何时刻只允许输入一个编码信号<br /><img src="/images/2024-07-09-21-02-30-74570af68de859cffdc79c7217a4e2b.jpg" alt="" /></p><h6 id="2-优先编码器"><a class="markdownIt-Anchor" href="#2-优先编码器"></a> 2、优先编码器</h6><p>允许同时输入两个以上的编码信号，但编码器早已将所有信号的优先级排了顺序，同时出现多个信号时，仅对其中优先权最高的一个进行编码。</p><p>（1）下图为：8线-3线优先编码器74HC148<br /><img src="/images/2024-07-09-21-07-26-82d4ea376ea38ec569ae8050bef24af.jpg" alt="" /></p><p><strong>功能介绍：</strong></p><ul><li><p>1‘ 启动端S‘ ：当输入低电平时候才能启动；输入高电平电路不工作，<u>所有</u>输出端置为1.</p></li><li><p>2’ 启动端S’ 置0时，电路工作：</p><ul><li><p>选通输出端<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>Y</mi><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">Y&#x27;_S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.027223em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.424669em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>为0，扩展端<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>Y</mi><mrow><mi>E</mi><mi>X</mi></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">Y&#x27;_{EX}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.027223em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.424669em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>为1时意味着：检测到电路虽然被启动，但是没有输入。</p></li><li><p>选通输出端<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>Y</mi><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">Y&#x27;_S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.027223em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.424669em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>为1，扩展端<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>Y</mi><mrow><mi>E</mi><mi>X</mi></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">Y&#x27;_{EX}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.027223em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.424669em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>为0时意味着：检测到电路启动，且有输入，此时<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>Y</mi><mn>2</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">Y&#x27;_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>Y</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">Y&#x27;_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span></p></li></ul></li></ul><p>为有效输出，可以读取。</p><p>功能表格如下：注意看，下面所有的内容(包括输入输出)都是“非”之后的结果。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mn>7</mn></msub></mrow><annotation encoding="application/x-tex">I_7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>优先级最高<br /><img src="/images/2024-07-09-21-26-20-de819cc2c676292839077d1e7015b7b.jpg" alt="" /></p><p>（2）下图为：二 - 十进制优先编码器74HC147<br /><img src="/images/2024-07-09-21-30-11-47c08309facd328556d0892cacda749.jpg" alt="" /></p><p>其功能较为简单，如下：<br /><img src="/images/2024-07-09-21-30-44-fd0ae943538b7841b715d9d5acac975.jpg" alt="" /></p><h5 id="二-译码器"><a class="markdownIt-Anchor" href="#二-译码器"></a> 二、译码器</h5><p>使用与非门搭建的3线-8线译码器74HC138<br /><img src="/images/2024-07-09-21-37-24-e2af0637b56e10f5174cf6d9cca001b.jpg" alt="" /></p><p>功能表如下：</p><p>启动信号需求：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>置1，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">S_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">S_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>置0（有一个是0即可，当然，一般是让两个都是0）</p><p><img src="/images/2024-07-09-21-37-47-4169f416909f8da371f3dd91578bc5f.jpg" alt="" /></p><p><img src="/images/2024-07-09-21-39-55-2c6aa234a02f48c48690e5f8faa8421.jpg" alt="" /></p><p>对应的，也有二 - 十进制译码器74HC42<br /><img src="/images/2024-07-09-21-40-39-f8ecd5445a62fe81b9f62e4ee4cd451.jpg" alt="" /></p><h5 id="三-数据选择器"><a class="markdownIt-Anchor" href="#三-数据选择器"></a> 三、数据选择器</h5><p>经典的二选一数据选择器<br /><img src="/images/2024-07-09-21-48-43-3f6733495176371005eaedc132e67c0.jpg" alt="" /></p><p>二选一数据选择器的逻辑表达式：</p><p>$Y=SEL \cdot A+SEL’ \cdot B $</p><ul><li>双4选1数据选择器的74HC153</li></ul><p>逻辑式：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">[</mo><msub><mi>D</mi><mn>10</mn></msub><mo stretchy="false">(</mo><msubsup><mi>A</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>A</mi><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo>+</mo><msub><mi>D</mi><mn>11</mn></msub><mo stretchy="false">(</mo><msubsup><mi>A</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>A</mi><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo>+</mo><msub><mi>D</mi><mn>12</mn></msub><mo stretchy="false">(</mo><msubsup><mi>A</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>A</mi><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo>+</mo><msub><mi>D</mi><mn>13</mn></msub><mo stretchy="false">(</mo><msubsup><mi>A</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>A</mi><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>⋅</mo><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">Y_1=[D_{10}(A&#x27;_1A&#x27;_0)+D_{11}(A&#x27;_1A&#x27;_0)+D_{12}(A&#x27;_1A&#x27;_0)+D_{13}(A&#x27;_1A&#x27;_0)]\cdot S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mn>2</mn></msub><mo>=</mo><mo stretchy="false">[</mo><msub><mi>D</mi><mn>20</mn></msub><mo stretchy="false">(</mo><msubsup><mi>A</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>A</mi><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo>+</mo><msub><mi>D</mi><mn>21</mn></msub><mo stretchy="false">(</mo><msubsup><mi>A</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>A</mi><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo>+</mo><msub><mi>D</mi><mn>22</mn></msub><mo stretchy="false">(</mo><msubsup><mi>A</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>A</mi><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo>+</mo><msub><mi>D</mi><mn>23</mn></msub><mo stretchy="false">(</mo><msubsup><mi>A</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msubsup><mi>A</mi><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>⋅</mo><msub><mi>S</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">Y_2=[D_{20}(A&#x27;_1A&#x27;_0)+D_{21}(A&#x27;_1A&#x27;_0)+D_{22}(A&#x27;_1A&#x27;_0)+D_{23}(A&#x27;_1A&#x27;_0)]\cdot S_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p><img src="/images/2024-07-09-21-55-16-4f4548c1e1531569b8ad5956d31dbdc.jpg" alt="" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;02-1-编码器与译码器&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#02-1-编码器与译码器&quot;&gt;&lt;/a&gt; 02-1 编码器与译码器&lt;/h3&gt;
&lt;h5 id=&quot;一-编码器&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; h</summary>
      
    
    
    
    <category term="数字电子技术基础" scheme="https://xqc-1368.github.io/categories/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="数电" scheme="https://xqc-1368.github.io/tags/%E6%95%B0%E7%94%B5/"/>
    
    <category term="译码器" scheme="https://xqc-1368.github.io/tags/%E8%AF%91%E7%A0%81%E5%99%A8/"/>
    
    <category term="编码器" scheme="https://xqc-1368.github.io/tags/%E7%BC%96%E7%A0%81%E5%99%A8/"/>
    
    <category term="数据选择器" scheme="https://xqc-1368.github.io/tags/%E6%95%B0%E6%8D%AE%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>01 数制与码制</title>
    <link href="https://xqc-1368.github.io/2024/08/19/01%20%E6%95%B0%E5%88%B6%E4%B8%8E%E7%A0%81%E5%88%B6/"/>
    <id>https://xqc-1368.github.io/2024/08/19/01%20%E6%95%B0%E5%88%B6%E4%B8%8E%E7%A0%81%E5%88%B6/</id>
    <published>2024-08-19T09:44:09.394Z</published>
    <updated>2024-08-19T08:56:44.609Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数字电子技术基础数制与码制"><a class="markdownIt-Anchor" href="#数字电子技术基础数制与码制"></a> 数字电子技术基础——数制与码制</h2><h3 id="一-二进制及其转换"><a class="markdownIt-Anchor" href="#一-二进制及其转换"></a> 一、二进制及其转换</h3><p>二进制，是在数学和数字电路中以2为基数的记数系统，是以2为基数代表系统的二进位制。这一系统中，通常用两个不同的符号0和1来表示 。</p><h5 id="1整数的-x进制-二进制-转换"><a class="markdownIt-Anchor" href="#1整数的-x进制-二进制-转换"></a> 1.整数的  <code>X进制-二进制</code> 转换：</h5><p>十转二：<br /><img src="/images/2024-05-22-21-19-07-image.png" alt="" /></p><p>X转十：<br /><img src="/images/2024-05-22-21-20-34-image.png" alt="" /></p><ul><li><p><strong>难点1：带有小数的二进制数转十进制：</strong></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>101.11</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub><mo>=</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><mn>0</mn><mo>×</mo><msup><mn>2</mn><mn>1</mn></msup><mo>+</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>0</mn></msup><mo>+</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mrow><mo>−</mo><mn>2</mn></mrow></msup><mo>=</mo><mo stretchy="false">(</mo><mn>5.75</mn><msub><mo stretchy="false">)</mo><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">(101.11)_2=1\times2^2+0\times2^1+1\times2^0+1\times2^{-1}+1\times2^{-2}=(5.75)_{10}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">.</span><span class="mord">1</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mord">.</span><span class="mord">7</span><span class="mord">5</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p><strong>难点2：带有小数的十进制数转二进制：</strong></p><p>分别计算整数和小数部分：</p><ul><li><p>整数部分按照上述方法计算</p></li><li><p>小数部分：将原数字乘2，取其整数部分；小数部分乘2，取其整数部分；如此循环直到小数部分不存在为止。最后将每一轮所取得的整数部分顺序排列<br /><img src="/images/2024-05-22-21-24-15-cfb87a9aa5af4cbb4d43e254b30b5a1.jpg" alt="" /></p></li></ul></li></ul><h5 id="2-十六-八进制与二进制的转化"><a class="markdownIt-Anchor" href="#2-十六-八进制与二进制的转化"></a> 2. 十六、八进制与二进制的转化</h5><p>二进制四位一组对应十六进制一位，二进制三位一组对应八进制一位，不足补齐前导0</p><h3 id=""><a class="markdownIt-Anchor" href="#"></a> </h3><h3 id="二-二进制的朴素的乘除运算"><a class="markdownIt-Anchor" href="#二-二进制的朴素的乘除运算"></a> 二、二进制的朴素的乘除运算</h3><p>二进制乘法：正常乘就行<br /><img src="/images/2024-05-22-22-02-17-d377d3d5747d39eb673c8450fe7e676.jpg" alt="" /></p><p>二进制除法：“减”-“右移”-“减”-“右移”-“减”-“右移”-“减”-“右移”-“减”循环<br /><img src="/images/2024-05-22-22-02-33-5bb5f2567270861ee6b30597627276a.jpg" alt="" /></p><h3 id="三-利用补码实现二进制数加减法"><a class="markdownIt-Anchor" href="#三-利用补码实现二进制数加减法"></a> 三、利用补码实现二进制数加减法</h3><p>原码：带符号的二进制数</p><p>反码：原码除了符号位之外取反得到，记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>N</mi><msub><mo stretchy="false">)</mo><mrow><mi>I</mi><mi>N</mi><mi>V</mi></mrow></msub></mrow><annotation encoding="application/x-tex">(N)_{INV}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>补码：<strong>补码=模数+真值</strong>（超出模数则舍弃一个模数）。</p><p>用补码相加代替减法运算使得避开比较环节，记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>N</mi><msub><mo stretchy="false">)</mo><mrow><mi>C</mi><mi>O</mi><mi>M</mi><mi>P</mi></mrow></msub></mrow><annotation encoding="application/x-tex">(N)_{COMP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>例子：5是-7对模12的原码</p><ul><li><strong>难点4：原码和补码间的转换方式</strong></li></ul><p><strong>原码转换为补码（将实际数值转换为补码以便在计算机中表示）：</strong></p><ol><li>如果<u>原码表示的是一个正数</u>，<u>补码=原码</u>。</li><li>如果原码表示的是一个负数，补码=原码除符号位取反＋1</li></ol><p><strong>补码转换为原码（从补码得到实际数值）：</strong></p><ol><li>如果补码的最高位（符号位）是0，那么它表示的是一个正数，原码就是补码本身。</li><li>如果补码的最高位是1，那么它表示的是一个负数，原码=补码除符号位取反＋1</li></ol><ul><li><p><strong>难点5：进位溢出到符号位的处理方式：添加位数</strong></p><p>例：用补码方式计算-13+10</p><p>13和10都可以用4位二进制数表示，加上一位符号位，考虑结果超过16可能性（后面算-13-10的时候会有，用5位试试看就知道会出问题），此处采用六位二进制数字表示</p><p>其中<code>-13</code>的原码为1-01101，<code>10</code>的原码为0-01010</p></li></ul><p>由此可以得到二者的补码：</p><p>其中 <code>-13</code>的补码为1-10011，<code>10</code>的原码为0-01010（注意10是正数，补码等于本身）</p><p>补码相加：（在相加过程中符号位参与运算，出现符号进位的情况后面再说）</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>−</mo><mn>13</mn><mspace width="1em"/><mn>1</mn><mo>−</mo><mn>10011</mn><mspace linebreak="newline"></mspace><mtext>   </mtext><mn>10</mn><mspace width="1em"/><mn>0</mn><mo>−</mo><mn>01010</mn><mspace linebreak="newline"></mspace><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mspace linebreak="newline"></mspace><mtext>  </mtext><mo>−</mo><mn>3</mn><mspace width="1em"/><mn>1</mn><mo>−</mo><mn>11101</mn></mrow><annotation encoding="application/x-tex">-13\quad1-10011\\\ \ \ 10\quad0-01010\\------------\\\ \ -3\quad1-11101</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord">3</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mord">−</span><span class="mord">3</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span></span></span></span></span></p><p>注意此处得到的是<code>-3</code>的补码，要翻译回原码，由于第一项为符号位，为1，则对后面的取反＋1，得到1-00011，即为-3的原码。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>−</mo><mn>13</mn><mspace width="1em"/><mspace width="1em"/><mtext>  </mtext><mn>1</mn><mo>−</mo><mn>10011</mn><mspace linebreak="newline"></mspace><mo>−</mo><mn>10</mn><mspace width="1em"/><mspace width="1em"/><mtext>  </mtext><mn>1</mn><mo>−</mo><mn>10110</mn><mspace linebreak="newline"></mspace><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mo>−</mo><mspace linebreak="newline"></mspace><mo>−</mo><mn>23</mn><mspace width="1em"/><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mtext>  </mtext><mn>1</mn><mo>−</mo><mn>11101</mn></mrow><annotation encoding="application/x-tex">-13\quad\quad\ \ 1-10011\\-10\quad\quad\ \ 1-10110\\------------\\-23\quad(1)\ \ 1-11101</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord">3</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mord">3</span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace"> </span><span class="mspace"> </span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span></span></span></span></span></p><h6 id="注意二进制补码相加的时候和的符号位等于两数符号位与来自最高位的进位相加的结果而舍弃产生的进位"><a class="markdownIt-Anchor" href="#注意二进制补码相加的时候和的符号位等于两数符号位与来自最高位的进位相加的结果而舍弃产生的进位"></a> 注意！！！：二进制补码相加的时候，和的符号位等于两数符号位与来自最高位的进位相加的结果，而舍弃产生的进位。</h6><p>以下为这句话的解释：</p><p>在二进制相加中，如果两个位相加的结果超过了当前位的表示范围，就会产生进位。对于补码相加，进位被舍弃，不参与最终结果的计算。这是因为补码的表示范围是固定的，超过该范围的进位部分将被忽略，以保持结果的正确性。</p><p>所以如果已经能够确定结果的范围，算出来的就一定是正确的了。只是其内部在取模，回环往复达到结果而已。</p><blockquote><p>拓展：正溢出，负溢出与变形补码</p><p>变形补码就是多一个符号位，原来的0变00，11变11。</p><p>对加法而言，正负相加显然是不会溢出的。</p><p>那么对于正正相加，符号位为00、00，发生溢出时是上溢，应该会有进位到符号位上，会变成01。</p><p>而对于负负相加，符号位为11、11，此时两个数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>∗</mo><msup><mn>2</mn><mo stretchy="false">(</mo></msup><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">2*2^(n+1)+x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>∗</mo><msup><mn>2</mn><mo stretchy="false">(</mo></msup><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">2*2^(n+1)+y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>, 因为x和y都是负数，两个相加结果会小于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn><mo>∗</mo><msup><mn>2</mn><mo stretchy="false">(</mo></msup><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">4*2^(n+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，不溢出的时候高两位表示的应该是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>∗</mo><msup><mn>2</mn><mo stretchy="false">(</mo></msup><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">3*2^(n+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，所以是11，而溢出的时候，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>&lt;</mo><mo>−</mo><mn>2</mn><mo>∗</mo><mtext>（</mtext><mi>n</mi><mo>+</mo><mn>1</mn><mtext>）</mtext></mrow><annotation encoding="application/x-tex">x+y&lt;-2*（n+1）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord cjk_fallback">）</span></span></span></span>，高两位表示的应该是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>∗</mo><msup><mn>2</mn><mo stretchy="false">(</mo></msup><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2*2^(n+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，对应10。</p><p>所以&quot;00&quot;、 “01”分别表示正数、正溢出（上溢），“11”、“10”表示负数、负溢出（下溢）。</p></blockquote><h3 id="四-码制"><a class="markdownIt-Anchor" href="#四-码制"></a> 四、码制</h3><p>（一）等长编码</p><ol><li>8421码</li></ol><ul><li><p>难点6：8421码（BCD码）</p><p>用四位二进制数对位表示十进制数，没有权值，是等长编码</p><p>例如：38</p><p>3： 0011</p><p>8： 1000</p><p>所以38：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>（</mtext><mn>00111000</mn><msub><mtext>）</mtext><mrow><mn>8421</mn><mi>B</mi><mi>C</mi><mi>D</mi><mtext>码</mtext></mrow></msub></mrow><annotation encoding="application/x-tex">（0011 1000）_{8421BCD码}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">（</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord"><span class="mord cjk_fallback">）</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span><span class="mord mtight">4</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord cjk_fallback mtight">码</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></li></ul><ol start="2"><li><p>格雷码</p><p>最大特点：相邻代码只有一位改变状态。</p><p>应用：路由器</p></li></ol><p>（二）变长编码</p><ol><li><p>哈夫曼编码</p><p>基于各个字母出现的频率进行不同长度的编码，出现频率小，编码长，表示不常用。适用于字典。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;数字电子技术基础数制与码制&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数字电子技术基础数制与码制&quot;&gt;&lt;/a&gt; 数字电子技术基础——数制与码制&lt;/h2&gt;
&lt;h3 id=&quot;一-二进制及其转换&quot;&gt;&lt;a class=&quot;markdownIt-</summary>
      
    
    
    
    <category term="数字电子技术基础" scheme="https://xqc-1368.github.io/categories/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="数电" scheme="https://xqc-1368.github.io/tags/%E6%95%B0%E7%94%B5/"/>
    
    <category term="数制与码制" scheme="https://xqc-1368.github.io/tags/%E6%95%B0%E5%88%B6%E4%B8%8E%E7%A0%81%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>04-1 时序逻辑电路的分析和设计通式</title>
    <link href="https://xqc-1368.github.io/2024/08/19/04-1%20%E6%97%B6%E5%BA%8F%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF%E7%9A%84%E5%88%86%E6%9E%90%E5%92%8C%E8%AE%BE%E8%AE%A1%E9%80%9A%E5%BC%8F/"/>
    <id>https://xqc-1368.github.io/2024/08/19/04-1%20%E6%97%B6%E5%BA%8F%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF%E7%9A%84%E5%88%86%E6%9E%90%E5%92%8C%E8%AE%BE%E8%AE%A1%E9%80%9A%E5%BC%8F/</id>
    <published>2024-08-19T09:44:09.380Z</published>
    <updated>2024-08-19T09:43:45.584Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数字电子技术基础05-时序逻辑电路"><a class="markdownIt-Anchor" href="#数字电子技术基础05-时序逻辑电路"></a> 数字电子技术基础：05 时序逻辑电路</h3><h5 id="一-同步时序逻辑电路的分析方法"><a class="markdownIt-Anchor" href="#一-同步时序逻辑电路的分析方法"></a> 一、同步时序逻辑电路的分析方法</h5><p>电路图—&gt;三大方程—&gt;状态转换表—&gt;状态转换图</p><h5 id="二-异步时序逻辑电路的分析方法"><a class="markdownIt-Anchor" href="#二-异步时序逻辑电路的分析方法"></a> 二、异步时序逻辑电路的分析方法</h5><p>电路图—&gt;三大方程—&gt;状态转换表—&gt;状态转换图</p><h5 id="三-同步时序逻辑电路的设计方法"><a class="markdownIt-Anchor" href="#三-同步时序逻辑电路的设计方法"></a> 三、同步时序逻辑电路的设计方法</h5><p>状态转换图—&gt;合并化简法—&gt;规定状态，画出“次态”输出卡诺图—&gt;卡诺图的分解—&gt;处理自启动问题—&gt;列出三大方程—&gt;画出电路图<br /><img src="/images/2024-06-18-10-22-08-image.png" alt="" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;数字电子技术基础05-时序逻辑电路&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数字电子技术基础05-时序逻辑电路&quot;&gt;&lt;/a&gt; 数字电子技术基础：05 时序逻辑电路&lt;/h3&gt;
&lt;h5 id=&quot;一-同步时序逻辑电路的分析方法&quot;&gt;&lt;a c</summary>
      
    
    
    
    <category term="数字电子技术基础" scheme="https://xqc-1368.github.io/categories/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="数电" scheme="https://xqc-1368.github.io/tags/%E6%95%B0%E7%94%B5/"/>
    
    <category term="时序逻辑电路" scheme="https://xqc-1368.github.io/tags/%E6%97%B6%E5%BA%8F%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>07函数</title>
    <link href="https://xqc-1368.github.io/2024/08/19/07%E5%87%BD%E6%95%B0/"/>
    <id>https://xqc-1368.github.io/2024/08/19/07%E5%87%BD%E6%95%B0/</id>
    <published>2024-08-19T04:23:45.921Z</published>
    <updated>2024-08-19T03:31:56.292Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础笔记07函数"><a class="markdownIt-Anchor" href="#基础笔记07函数"></a> 基础笔记：07函数</h2><h5 id="1函数定义-函数调用-函数原型"><a class="markdownIt-Anchor" href="#1函数定义-函数调用-函数原型"></a> 1.函数定义、函数调用、函数原型</h5><p>（1）定义：函数（Function）是C中模块化编程的最小单位；</p><ul><li>一个C程序由一个或多个源程序文件组成</li></ul><ul><li>一个源程序文件由一个或多个函数组成<br /><img src="/images/2023-11-17-14-28-57-image.png" alt="" /></li></ul><p>（2）函数的地位关系</p><ul><li><p>函数是平等的</p></li><li><p>main()稍微特殊一点，C程序的执行从main函数开始。调用其他函数后流程回到main函数，在main函数中结束整个程序的运行<br /><img src="/images/2023-11-17-14-39-23-image.png" alt="" /></p></li></ul><p>（3）函数的分类</p><p>标准库函数</p><ul><li><p>ANSI/ISOC定义的标准库函数</p><ul><li><p>符合标准的C语言编译器必须提供这些函数</p></li><li><p>函数的行为也要符合ANSI/ISOC定义</p></li></ul></li><li><p>第三方库函数</p><ul><li><p>其他厂商自行开发的C语言函数库</p></li><li><p>不在标准范围内，能扩充C语言的功能（图形、数据库等）</p></li></ul></li></ul><p>自定义函数</p><ul><li><p>用户自己定义的函数</p><ul><li>包装后，也可成为函数库，供别人使用</li></ul></li></ul><p>（4）程序设计中函数的功能</p><ul><li>不局限于计算，还有判断推理</li></ul><p>（5）函数定义方法<br /><img src="/images/2023-11-17-14-43-24-image.png" alt="" /><br /><img src="/images/2023-11-17-14-44-14-image.png" alt="" /></p><blockquote><p><strong>C/C++main函数返回值以及return 0的作用</strong></p><p><strong>main函数的返回值</strong></p><p>main函数的返回值用于说明程序的退出状态。如果返回0，则代表程序正常退出。返回其它数字的含义则由系统决定。通常，返回非零代表程序异常退出。</p></blockquote><p>素养阅读<br /><img src="/images/2023-11-17-14-48-44-image.png" alt="" /></p><p><img src="/images/2023-11-17-14-48-57-image.png" alt="" /></p><h5 id="2函数的参数传递与返回值"><a class="markdownIt-Anchor" href="#2函数的参数传递与返回值"></a> 2.函数的参数传递与返回值</h5><p>（1）函数的参数传递和返回值</p><ul><li><p>调用者通过函数名调用函数</p></li><li><p><img src="/images/2023-11-17-14-50-21-image.png" alt="" /></p></li><li><p>有返回值时，可放到一个赋值表达式语句中</p></li><li><p><img src="/images/2023-11-17-14-50-37-image.png" alt="" /></p></li><li><p>还可放到一个函数调用语句中，作为另一个函数的参数</p></li><li><p><img src="/images/2023-11-17-14-50-52-image.png" alt="" /></p></li></ul><p>（2）函数调用</p><ul><li><p>函数定义时的参数，形式参数（Parameter），简称形参</p></li><li><p>函数调用时的参数，实际参数（Argument），简称实参</p></li></ul><p>过程：每次执行函数调用时</p><ul><li><p>现场保护并为函数的内部变量（包括形参）分配内存</p></li><li><p>把实参值复制给形参，单向传值（实参–&gt;形参）</p></li><li><p>实参与形参数目一致，类型匹配（否则类型自动转换）</p></li><li><p>现场保护</p></li></ul><p>执行函数内语句</p><ul><li>当执行到return语句或}时，从函数退出</li></ul><p>从函数退出时</p><ul><li><p>根据函数调用栈中保存的返回地址，返回到当次函数调用的地方</p></li><li><p>程序控制权交给调用者，返回值作为函数调用表达式的值</p></li><li><p>收回分配给函数内所有变量（包括形参）的内存</p></li></ul><p>（3）函数原型</p><ul><li><p>调用函数前先声明返回值类型、函数名和形参类型</p></li><li><p>有助于编译器对函数参数类型的匹配检查<br /><img src="/images/2023-11-17-14-56-25-image.png" alt="" /></p></li></ul><p>区别：<br /><img src="/images/2023-11-17-14-57-11-image.png" alt="" /></p><p>（4）函数封装（Encapsulation）</p><ul><li><p>外界对函数的影响仅限于入口参数</p></li><li><p>函数对外界的影响仅限于一个返回值和数组、指针形参</p></li></ul><p>如何增强程序的健壮性，使函数具有遇到不正确使用或非法数据输入时避免出错的能力？答：在函数的入口处，检查输入参数的合法性，同时，主程序增加对函数返回值的检验</p><p>（5）函数复用：就是用好几次</p><p>（6）断言（assert）<br /><img src="/images/2023-11-17-15-09-13-image.png" alt="" /></p><p>考虑使用断言的几种情况</p><ul><li><p>检查程序中的各种假设的正确性</p></li><li><p>证实或测试某种不可能发生的状况确实不会发生</p></li></ul><p>仅用于调试程序，不能作为程序的功能</p><ul><li><p>Debug版有效</p></li><li><p>Release版失效</p><blockquote><p><strong>Debug和Release的区别</strong><br />Debug：调试版本，包含调试信息，所以容量比Release大很多，并且不进行任何优化（优化会使调试复杂化，因为源代码和生成的指令间关系会更复杂），便于程序员调试。<strong>Debug模式下生成两个文件，除了.exe或.dll文件外，还有一个.pdb文件，该文件记录了代码中断点等调试信息</strong><br />Release：发布版本，不对源代码进行调试，编译时对应用程序的速度进行优化，使得程序在代码大小和运行速度上都是最优的。（调试信息可在单独的PDB文件中生成）。<strong>Release模式下生成一个文件.exe或.dll文件</strong></p><p><strong>Debug 版本：</strong><br />/MDd /MLd 或 /MTd 使用 Debug runtime library(调试版本的运行时刻函数库)<br />/Od 关闭优化开关<br />/D “_DEBUG” 相当于 #define _DEBUG,打开编译调试代码开关(主要针对assert函数)<br />/ZI 创建 Edit and continue(编辑继续)数据库，这样在调试过程中如果修改了源代码不需重新编译<br />/GZ 可以帮助捕获内存错误<br />/Gm 打开最小化重链接开关，减少链接时间</p><p><strong>Release 版本：</strong><br />/MD /ML 或 /MT 使用发布版本的运行时刻函数库<br />/O1 或 /O2 优化开关，使程序最小或最快<br />/D “NDEBUG” 关闭条件编译调试代码开关(即不编译assert函数)<br />/GF 合并重复的字符串，并将字符串常量放到只读内存，防止被修改</p></blockquote></li></ul><h5 id="3递归函数"><a class="markdownIt-Anchor" href="#3递归函数"></a> 3.递归函数</h5><p>（1）函数的嵌套调用</p><ul><li><p>C语言规定函数不能嵌套定义</p><ul><li>函数是相互平行的，该限制可以使编译器简单化</li></ul></li><li><p>但可以嵌套调用</p><ul><li>在调用一个函数的过程中又调用另一个函数<br /><img src="/images/2023-11-17-15-17-27-image.png" alt="" /></li></ul></li><li><p>函数直接或间接调用自己，称为递归调用（RecursiveCall），这样的函数，称为递归函数（Recursive Function）</p></li></ul><p>（2）递归函数</p><ul><li><p>字典是递归定义的典型实例<br /><img src="/images/2023-11-17-15-24-53-image.png" alt="" /><br /><img src="/images/2023-11-17-15-25-15-image.png" alt="" /></p></li><li><p>递归过程<br /><img src="/images/2023-11-17-15-24-22-image.png" alt="" /></p></li><li><p>函数调用栈<br /><img src="/images/2023-11-17-15-19-33-image.png" alt="" /><br /><img src="/images/2023-11-17-15-20-15-image.png" alt="" /><br /><img src="/images/2023-11-17-15-20-30-image.png" alt="" /><br /><img src="/images/2023-11-17-15-20-55-image.png" alt="" /><br /><img src="/images/2023-11-17-15-21-28-image.png" alt="" /></p></li></ul><p><img src="/images/2023-11-17-15-22-48-image.png" alt="" /><br /><img src="/images/2023-11-17-15-23-15-image.png" alt="" /><br /><img src="/images/2023-11-17-15-23-22-image.png" alt="" /><br /><img src="/images/2023-11-17-15-23-29-image.png" alt="" /></p><p>(5)递归方法编写程序的优点</p><ul><li><p>符合人的思维习惯，逼近数学公式的表示</p></li><li><p>从编程角度来看，简洁、直观、精炼，易编、易懂、逻辑清楚，结构清晰、可读性好</p></li></ul><p>（6）递归方法编写程序的缺点</p><ul><li><p>增加了函数调用开销，每次调用都需参数传递、现场保护等，为函数使用的参数、局部变量等额外分配存储空间</p></li><li><p>耗费更多的时间和栈空间，时空效率低</p></li><li><p>重复计算多</p></li></ul><h5 id="4变量的作用域与存储类型"><a class="markdownIt-Anchor" href="#4变量的作用域与存储类型"></a> 4.变量的作用域与存储类型</h5><ul><li><p>变量的作用域 （Scope）:指在源程序中定义变量的位置及其能被读写访问的</p><p>范围，分为：</p><ul><li><p>局部变量（Local Variable）:在语句块内（函数、复合语句）定义的变量</p></li><li><p>有效范围仅为该语句块（函数，复合语句）</p><p>仅能由语句块内的语句访问，退出语句块时释放内存，不再有效</p></li><li><p>全局变量（Global Variable )：在所有函数之外定义的变量</p><p>有效范围是从定义变量的位置开始，到本程序结束</p></li></ul></li><li><p>假如变量同名…</p><ul><li><p>并列语句块内各自定义（不同作用域）的变量同名互不干扰</p></li><li><p>形参和实参的作用域不同，互不干扰（改变形参对实参不影响）</p></li><li><p>局部变量与全局变量同名：局部变量屏蔽全局变量</p><p>只要作用域不同，新的声明屏蔽旧的声明<br /><img src="/images/2023-11-17-15-36-40-image.png" alt="" /></p></li></ul></li><li><p>编译器如何区分不同作用域的同名变量？</p><ul><li><p>一个变量名能代表两个不同的值，仅当它能代表两个不同的内存地址</p></li><li><p>编译器通过将同名变量映射到不同的内存地址来实现作用域的划分局部变量和全局变量被分配的内存区域不同，因而内存地址也不同</p></li><li><p>形参和实参的作用域、内存地址不同，所以形参值的改变不会影响实参</p></li></ul></li></ul><blockquote><p>可划分为四大内存分区：堆、栈、静态存储区和代码区。</p><p><strong>堆区：</strong><br />由程序猿手动申请，手动释放，若不手动释放，程序结束后由系统回收，生命周期是整个程序运行期间。使用malloc或者new进行堆的申请，堆的总大小为机器的虚拟内存的大小。<br />说明：new操作符本质上是使用了malloc进行内存的申请，new和malloc的区别如下：<br />（1）malloc是C语言中的函数，而new是C++中的操作符。<br />（2）malloc申请之后返回的类型是void*，而new返回的指针带有类型。<br />（3）malloc只负责内存的分配而不会调用类的构造函数，而new不仅会分配内存，而且会自动调用类的构造函数。</p><p><strong>栈区：</strong><br />由系统进行内存的管理。主要存放函数的参数以及局部变量。在函数完成执行，系统自行释放栈区内存，不需要用户管理。整个程序的栈区的大小可以在编译器中由用户自行设定，VS中默认的栈区大小为1M，可通过VS手动更改栈的大小。64bits的Linux默认栈大小为10MB，可通过ulimit -s临时修改。</p><p><strong>静态存储区：</strong><br />静态存储区内的变量在程序编译阶段已经分配好内存空间并初始化。这块内存在程序的整个运行期间都存在，它主要存放静态变量、全局变量和常量。<br /><strong>注意：</strong><br />（1）<em>这里不区分初始化和未初始化的数据区</em>，是因为静态存储区内的变量若不显示初始化，则编译器会自动以默认的方式进行初始化，即静态存储区内不存在未初始化的变量。<br />（2）静态存储区内的常量分为常变量和字符串常量，一经初始化，不可修改。静态存储内的常变量是全局变量，与局部常变量不同，区别在于局部常变量存放于栈，实际可间接通过指针或者引用进行修改，而全局常变量存放于静态常量区则不可以间接修改。<br />（3）字符串常量存储在静态存储区的常量区，字符串常量的名称即为它本身，属于常变量。<br />（4）数据区的具体划分，有利于我们对于变量类型的理解。不同类型的变量存放的区域不同。后面将以实例代码说明这四种数据区中具体对应的变量。</p><p><strong>代码区：</strong><br />存放程序体的二进制代码。比如我们写的函数，都是在代码区的。</p><p><strong>示例代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">0</span>;<span class="comment">//静态全局变量区</span></span><br><span class="line"><span class="type">char</span> *p1; <span class="comment">//编译器默认初始化为NULL</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> b; <span class="comment">//栈</span></span><br><span class="line">    <span class="type">char</span> s[] = <span class="string">&quot;abc&quot;</span>;<span class="comment">//栈</span></span><br><span class="line">    <span class="type">char</span> *p2 = <span class="string">&quot;123456&quot;</span>;<span class="comment">//123456在字符串常量区，p2在栈上</span></span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> c =<span class="number">0</span>; <span class="comment">//c在静态变量区，0为文字常量，在代码区</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> d=<span class="number">0</span>; <span class="comment">//栈</span></span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">int</span> d;<span class="comment">//静态常量区</span></span><br><span class="line">    p1 = (<span class="type">char</span> *)<span class="built_in">malloc</span>(<span class="number">10</span>);<span class="comment">//分配得来得10字节在堆区。</span></span><br><span class="line">    <span class="built_in">strcpy</span>(p1, <span class="string">&quot;123456&quot;</span>); <span class="comment">//123456放在字符变量想串常量区，编译器可能会将它与p2所指向的&quot;123456&quot;优化成一个地方</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上所有代码，编译成二进制后存放于代码区，文字常量存放于代码区，是不可寻址的。</p></blockquote><ul><li><p>变量的存储类型</p><p>存储类型  数据类型  变量名;</p><ul><li>C存储类型关键字：auto（自动变量）、static（静态变量）(包括：静态局部变量，静态外部变量)、extern（外部变量）（编译器并不对其分配内存，只是表明“我知道了”）、register（寄存器变量）</li></ul></li><li><p>全局变量（跟下面几类不是并列关系）</p></li></ul><p>先看看定义：定义在函数外面的变量，就叫全局变量。</p><p>包括：<strong>普通全局变量</strong>   <strong>静态全局变量</strong>    <strong>跨文件引用全局变量(extern)</strong></p><ul><li><strong>关于自动变量的解释</strong></li></ul><blockquote><p>又叫动态局部变量（缺省类型），存在栈内。进入语句块时自动申请内存，退出时自动释放内存，离开函数，值就消失</p></blockquote><ul><li><strong>关于外部变量的解释</strong></li></ul><blockquote><p>全局变量在整个程序中起作用，如果程序包含多个程序文件模块，可以通过外部声明，使得全局变量的作用范围扩展到其他模块，也可以通过定义静态全局变量，使其作用范围仅限制在这个模块</p><p>全局变量只能被定义一次，如果其他模块要使用该全局变量，需要通过外部变量的声明。</p><p>外部变量声明格式： extern 变量名表；</p><p>只起说明作用，不分配存储单元，对应存储单元在全局变量定义时分配。</p><p><strong>main.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> count ;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">write_extern</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"> count = <span class="number">5</span>;</span><br><span class="line"> write_extern();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>support.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> count;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">write_extern</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;count is %d\n&quot;</span>, count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><ul><li><strong>关于静态局部变量的解释</strong></li></ul><blockquote><ol><li>静态局部变量在静态存储区内分配存储单元，在程序整个运行期间都不释放。而普通局部变量属于动态存储类别，存储在动态存储区空间，函数调用结束后即释放；</li><li>静态局部变量只初始化一次，以后每次调用函数时保留上次函数调用结束时的值。而自动变量每调用一次函数重新执行一次赋值语句；</li><li>静态局部变量一般在声明处初始化，如果没有显式初始化，会被程序自动初始化为0(对数值型变量)或空字符(对字符型变量)。而对自动变量来说，如果不赋初值，则它的值是一个不确定的值。这是由于每次函数调用结束后存储单元已释放，下次调用时又重新另分配存储单元，而所分配的单元中的值是不确定的。</li><li>静态局部变量始终驻留在全局数据区，直到程序运行结束。但其作用域仍为局部作用域，当定义它的函数或语句块结束时，其作用域随之结束。虽然静态局部变量在函数调用结束后仍然存在，但其他函数是不能引用它的。</li></ol></blockquote><ul><li><strong>关于静态全局变量的解释</strong></li></ul><blockquote><p>当程序只有一个文件模块，其与一般全局变量作用相同； 当程序有多个模块时，C语言静态全局变量的作用范围局限于该模块。</p><p>1）全局变量是不显式用static修饰的全局变量，但全局变量默认是动态的，作用域是整个工程，在一个文件内定义的全局变量，在另一个文件中，通过extern 全局变量名的声明，就可以使用全局变量。</p><p>2）全局静态变量是显式用static修饰的全局变量，作用域是声明此变量所在的文件，其他的文件即使用extern声明也不能使用。</p><p>静态全局变量有以下特点：</p><p>1.该变量在全局数据区分配内存；</p><p>2.未经初始化的静态全局变量会被程序自动初始化为0</p><p>3.静态全局变量在声明它的整个文件都是可见的，而在文件之外是不可见的；</p><p>4.静态变量都在全局数据区分配内存，包括后面将要提到的静态局部变量。</p><ul><li><p>局部变量初始化时机问题：</p><p>首先，静态局部变量和全局变量一样，数据都存放在全局区域，所以在主程序之前，编译器已经为其分配好了内存，但在C和C++中静态局部变量的初始化节点又有点不太一样。</p><p>在C中，初始化发生在代码执行之前，编译阶段分配好内存之后，就会进行初始化，所以我们看到在C语言中无法使用变量对静态局部变量进行初始化，在程序运行结束，变量所处的全局内存会被全部回收。</p><p>而在C<ins>中，初始化时在执行相关代码时才会进行初始化，~~*主要是由于C</ins>引入对象后，要进行初始化必须执行相应构造函数和析构函数，在构造函数或析构函数中经常会需要进行某些程序中需要进行的特定操作，并非简单地分配内存。所以C<ins>标准定为全局或静态对象是有首次用到时才会进行构造，并通过atexit()来管理。在程序结束，按照构造顺序反方向进行逐个析构。*~~ **所以在C</ins>中是可以使用变量对静态局部变量进行初始化的。**</p></li><li><p>后面再来谈谈另一个问题，假如我们在一个循环中，定义了一个静态局部变量并进行初始化，循环过程中，编译器怎么知道当前的静态局部变量已经初始化过了呢？</p><ul><li><p>这个问题C和C++的处理方式也是不一样的。</p></li><li><p>C中编译器会直接跳过这一个语句，因为在编译的时候已经对静态局部变量进行过分配空间并初始化，所以代码执行过程中根本不需要再次执行。</p></li><li><p>而在C++中，编译器会在编译器分配内存后，在全局区域（当前静态局部变量的地址）<strong>附近</strong>同样分配一块空间，进行记录变量是否已经进行过初始化。之所以说附近是根据编译器不同，处理方式不同导致的。</p></li></ul></li></ul></blockquote><ul><li><strong>关于寄存器变量的解释</strong></li></ul><blockquote><p>在程序运行时，根据需要到内存中相应的存储单元中调用，如果一个变量在程序中频繁使用，例如循环变量，那么，系统就必须多次访问内存中的该单元，影响程序的执行效率。</p><p>因此，C语言\C++语言还定义了一种变量，不是保存在内存上，而是直接存储在CPU中的寄存器中，这种变量称为寄存器变量。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">register</span> <span class="type">int</span> i=<span class="number">100</span>;</span><br></pre></td></tr></table></figure><ol><li>C编译程序会自动地将寄存器变量变为自动变量</li></ol><ul><li><p>对于VC编译器会自动优化，即使没有声明寄存器变量，VC也会自动优化。</p></li><li><p>对于GCC编译器就不会自动优化。</p></li></ul><ol start="2"><li><p>由于受硬件寄存器长度的限制，所以寄存器变量只能是char、int或指针型。</p></li><li><p>寄存器说明符只能用于说明函数中的变量和函数中的形参，因此不允许将外部变量或静态变量说明为&quot;register&quot;</p></li><li><p>register变量使用的是硬件CPU中的寄存器，寄存器变量无地址，所以不能使用取地址运算符&quot;&amp;&quot;求寄存器变量的地址。</p></li></ol></blockquote><h5 id="5模块化程序设计方法自顶向下"><a class="markdownIt-Anchor" href="#5模块化程序设计方法自顶向下"></a> 5.模块化程序设计方法：自顶向下</h5>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基础笔记07函数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基础笔记07函数&quot;&gt;&lt;/a&gt; 基础笔记：07函数&lt;/h2&gt;
&lt;h5 id=&quot;1函数定义-函数调用-函数原型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; hr</summary>
      
    
    
    
    <category term="C语言程序设计" scheme="https://xqc-1368.github.io/categories/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="C语言" scheme="https://xqc-1368.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="函数" scheme="https://xqc-1368.github.io/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>07 多态</title>
    <link href="https://xqc-1368.github.io/2024/08/19/07%20%E5%A4%9A%E6%80%81/"/>
    <id>https://xqc-1368.github.io/2024/08/19/07%20%E5%A4%9A%E6%80%81/</id>
    <published>2024-08-19T04:23:45.918Z</published>
    <updated>2024-08-19T04:25:39.449Z</updated>
    
    <content type="html"><![CDATA[<h3 id="06-多态"><a class="markdownIt-Anchor" href="#06-多态"></a> 06 多态</h3><ul><li><strong>多态</strong>按字面的意思就是多种形态。当类之间存在层次结构，并且类之间是通过继承关联时，就会用到多态。</li></ul><p>C++ 多态意味着调用成员函数时，会根据调用函数的对象的类型来执行不同的函数。</p><h5 id="1虚函数和多态"><a class="markdownIt-Anchor" href="#1虚函数和多态"></a> 1.虚函数和多态</h5><p>在类的定义中，前面有 virtual 关键字的成员函数就是虚函数。</p><p>virtual 关键字只用在类定义里的函数声明中，写函数体时不用。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">base</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">get</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">base::get</span><span class="params">()</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><h5 id="2-多态的两种表现形式"><a class="markdownIt-Anchor" href="#2-多态的两种表现形式"></a> 2. 多态的两种表现形式</h5><p>表现形式一：派生类的指针可以赋给基类指针。</p><ul><li><p>通过基类指针调用基类和派生类中的同名虚函数时:</p><ul><li><p>（1）若该指针指向一个基类的对象，那么被调用是基类的虚函数；</p></li><li><p>（2）若该指针指向一个派生类的对象，那么被调用的是派生类的虚函数。</p></li></ul></li></ul><p>这种机制就叫做“多态”。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CBase</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">SomeVirtualFunction</span><span class="params">()</span> </span>&#123;cout&lt;&lt;<span class="string">&quot;base&quot;</span>&lt;&lt;endl;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CDerived</span> : <span class="keyword">public</span> CBase</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">SomeVirtualFunction</span><span class="params">()</span> </span>&#123;cout&lt;&lt;<span class="string">&quot;derived&quot;</span>&lt;&lt;endl;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDerived ODerived;</span><br><span class="line">CBase *p = &amp;ODerived;</span><br><span class="line">p-&gt;<span class="built_in">SomeVirtualFunction</span>(); <span class="comment">// 调用哪个虚函数取决于p指向哪种类型的对象</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上的基类指针p指向派生类对象，所以调用的是派生类的成员函数</p><p>输出结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">derived</span><br></pre></td></tr></table></figure><p>表现形式二：派生类的对象可以赋给基类引用</p><ul><li><p>通过基类引用调用基类和派生类中的同名虚函数时:</p><ul><li><p>（1）若该引用引用的是一个基类的对象，那么被调用是基类的虚函数；</p></li><li><p>（2）若该引用引用的是一个派生类的对象，那么被调用的是派生类的虚数。</p></li></ul></li></ul><p>这种机制也叫做“多态”。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CBase</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">SomeVirtualFunction</span><span class="params">()</span> </span>&#123;cout&lt;&lt;<span class="string">&quot;base&quot;</span>&lt;&lt;endl;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CDerived</span> : <span class="keyword">public</span> CBase</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">SomeVirtualFunction</span><span class="params">()</span> </span>&#123;cout&lt;&lt;<span class="string">&quot;derived&quot;</span>&lt;&lt;endl;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDerived ODerived;</span><br><span class="line">CBase &amp;r = ODerived;</span><br><span class="line">r.<span class="built_in">SomeVirtualFunction</span>(); <span class="comment">// 调用哪个虚函数取决于r引用哪种类型的对象</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">derived</span><br></pre></td></tr></table></figure><h5 id="3-构造函数和析构函数中调用虚函数"><a class="markdownIt-Anchor" href="#3-构造函数和析构函数中调用虚函数"></a> 3. 构造函数和析构函数中调用虚函数</h5><ul><li><p>在构造函数和析构函数中调用虚函数，不是多态。编译时即可确定，调用的函数是自己的类或基类中定义的函数，不会等到运行时才决定调用自己的还是派生类的函数</p></li><li><p>派生类中和基类中虚函数<u>同名同参数表的函数</u>，不加virtual也自动成为虚函数</p></li></ul><h5 id="4-多态实现的关键-虚函数表"><a class="markdownIt-Anchor" href="#4-多态实现的关键-虚函数表"></a> 4. 多态实现的关键 — 虚函数表</h5><ul><li><p>每一个有虚函数的类（或有虚函数的类的派生类）都有一个虚函数表，该类的任何对象中都放着虚函数表的指针。虚函数表中列出了该类的虚函数地址。多出来的4个字节就是用来放虚函数表的地址的</p></li><li><p>多态的函数调用语句被编译成一系列根据基类指针所指向的（或基类引用所引用的）对象中存放的虚函数表的地址，在虚函数表中查找虚函数地址，并调用虚函数的指令。</p></li></ul><h5 id="5虚析构函数"><a class="markdownIt-Anchor" href="#5虚析构函数"></a> 5.虚析构函数</h5><p>背景：通过基类的指针删除派生类对象时，通常情况下只调用基类的析构函数，但是，删除一个派生类的对象时，应该先调用派生类的析构函数，然后调用基类的析构函数。</p><ul><li><p>解决办法：把基类的析构函数声明为virtual，派生类的析构函数可以virtual不进行声明。通过基类的指针删除派生类对象时，首先调用派生类的析构函数，然后调用基类的析构函数</p></li><li><p>结论：一般来说，一个类如果定义了虚函数，则应该将析构函数也定义成虚函数。或者，一个类打算作为基类使用，也应该将析构函数定义成虚函数。</p></li><li><p>注意：不允许以虚函数作为构造函数</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">son</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">virtual</span> ~<span class="built_in">son</span>() &#123; cout &lt;&lt; <span class="string">&quot;bye from son&quot;</span> &lt;&lt; endl; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">grandson</span> : <span class="keyword">public</span> son</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">~<span class="built_in">grandson</span>() &#123; cout &lt;&lt; <span class="string">&quot;bye from grandson&quot;</span> &lt;&lt; endl; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">son *pson;</span><br><span class="line">pson = <span class="keyword">new</span> <span class="built_in">grandson</span>();</span><br><span class="line"><span class="keyword">delete</span> pson;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bye from grandson</span><br><span class="line">bye from son</span><br></pre></td></tr></table></figure><p>执行<code>grandson::~grandson()</code>，引起执行<code>son::~son()</code>！！！</p><h5 id="6-纯虚函数和抽象类"><a class="markdownIt-Anchor" href="#6-纯虚函数和抽象类"></a> 6. 纯虚函数和抽象类</h5><p>纯虚函数： 没有函数体的虚函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Print</span><span class="params">( )</span> </span>= <span class="number">0</span> ; <span class="comment">//纯虚函数</span></span><br></pre></td></tr></table></figure><p>抽象类：包含纯虚函数的类叫抽象类</p><ul><li><p>抽象类只能作为基类来派生新类使用，不能创建抽象类的对象</p></li><li><p>抽象类的指针和引用可以指向由抽象类派生出来的类的对象</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A a;<span class="comment">// 错，A 是抽象类，不能创建对象</span></span><br><span class="line">A *pa;<span class="comment">// ok,可以定义抽象类的指针和引用</span></span><br><span class="line">pa = <span class="keyword">new</span> A; <span class="comment">// 错误, A 是抽象类，不能创建对象</span></span><br></pre></td></tr></table></figure><ul><li><p>在抽象类的成员函数内可以调用纯虚函数，但是在构造函数或析构函数内部不能调用纯虚函数</p></li><li><p>如果一个类从抽象类派生而来，那么当且仅当它实现了基类中的所有纯虚函数，它才能成为非抽象类。（翻译成人话就是：类里面但凡有一个纯虚函数，就只能算抽象类）</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;06-多态&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#06-多态&quot;&gt;&lt;/a&gt; 06 多态&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多态&lt;/strong&gt;按字面的意思就是多种形态。当类之间存在层次结构，并且类之间是通过继承关联时，</summary>
      
    
    
    
    <category term="OOP面向对象" scheme="https://xqc-1368.github.io/categories/OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
    <category term="C++" scheme="https://xqc-1368.github.io/tags/C/"/>
    
    <category term="OOP" scheme="https://xqc-1368.github.io/tags/OOP/"/>
    
    <category term="多态" scheme="https://xqc-1368.github.io/tags/%E5%A4%9A%E6%80%81/"/>
    
    <category term="虚函数" scheme="https://xqc-1368.github.io/tags/%E8%99%9A%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>06 继承与派生</title>
    <link href="https://xqc-1368.github.io/2024/08/19/06%20%E7%BB%A7%E6%89%BF%E4%B8%8E%E6%B4%BE%E7%94%9F/"/>
    <id>https://xqc-1368.github.io/2024/08/19/06%20%E7%BB%A7%E6%89%BF%E4%B8%8E%E6%B4%BE%E7%94%9F/</id>
    <published>2024-08-19T04:23:45.912Z</published>
    <updated>2024-08-19T03:21:23.476Z</updated>
    
    <content type="html"><![CDATA[<h3 id="继承与派生"><a class="markdownIt-Anchor" href="#继承与派生"></a> 继承与派生</h3><h5 id="1定义"><a class="markdownIt-Anchor" href="#1定义"></a> 1.定义</h5><p><strong>继承</strong>：</p><ul><li>在定义一个新的类B时，如果该类与某个已有的类A相似(指的是B拥有A的全部特点)，那么就可以把A作为一个基类，而把B作为基类的一个派生类(也称子类)。</li></ul><p><strong>派生</strong>：</p><ul><li><p>派生类是通过对基类进行修改和扩充得到的。在派生类中，可以扩充新的成员变量和成员函数。</p></li><li><p>派生类一经定义后，可以独立使用，不依赖于基类。</p></li><li><p>派生类拥有基类的全部成员函数和成员变量，不论是private、protected、public</p></li><li><p>在派生类的各个成员函数中，<u>不能访问</u>  基类中的private成员。</p></li></ul><p>派生类写法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> 派生类名：<span class="keyword">public</span> 基类名</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基类 Shape</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Shape</span> </span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">setWidth</span><span class="params">(<span class="type">int</span> w)</span></span></span><br><span class="line"><span class="function">      </span>&#123;width = w;&#125;</span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">setHeight</span><span class="params">(<span class="type">int</span> h)</span></span></span><br><span class="line"><span class="function">      </span>&#123;height = h;&#125;</span><br><span class="line">   <span class="keyword">protected</span>:</span><br><span class="line">      <span class="type">int</span> width;</span><br><span class="line">      <span class="type">int</span> height;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基类 PaintCost</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PaintCost</span> </span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="function"><span class="type">int</span> <span class="title">getCost</span><span class="params">(<span class="type">int</span> area)</span></span></span><br><span class="line"><span class="function">      </span>&#123;<span class="keyword">return</span> area * <span class="number">70</span>;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 派生类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Rectangle</span>: <span class="keyword">public</span> Shape, <span class="keyword">public</span> PaintCost</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="function"><span class="type">int</span> <span class="title">getArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">      </span>&#123; <span class="keyword">return</span> (width * height); &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   Rectangle Rect;</span><br><span class="line">   <span class="type">int</span> area;</span><br><span class="line"></span><br><span class="line">   Rect.<span class="built_in">setWidth</span>(<span class="number">5</span>);</span><br><span class="line">   Rect.<span class="built_in">setHeight</span>(<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">   area = Rect.<span class="built_in">getArea</span>();</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 输出对象的面积</span></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Total area: &quot;</span> &lt;&lt; Rect.<span class="built_in">getArea</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 输出总花费</span></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Total paint cost: $&quot;</span> &lt;&lt; Rect.<span class="built_in">getCost</span>(area) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-派生类对象的内存空间"><a class="markdownIt-Anchor" href="#2-派生类对象的内存空间"></a> 2. 派生类对象的内存空间</h5><p>派生类对象的体积，等于基类对象的体积，再加上派生类对象自己的成员变量的体积。在派生类对象中，包含着基类对象，而且<u>基类对象的存储位置位于派生类对象新增的成员变量之前</u>。<br /><img src="/images/2024-01-09-12-11-34-image.png" alt="" /></p><h5 id="3类的两种关系继承关系与复合关系"><a class="markdownIt-Anchor" href="#3类的两种关系继承关系与复合关系"></a> 3.类的两种关系——继承关系与复合关系</h5><p><strong>继承：“是”关系。</strong></p><ul><li><p>基类 A，B是基类A的派生类。</p></li><li><p>逻辑上要求：“一个B对象也是一个A对象”。</p></li></ul><p><strong>复合：“有”关系。</strong>（可能算下表中的组合关系？吧）</p><ul><li><p>类C中“有”成员变量k，k是类D的对象，则C和D是复合关系</p></li><li><p>一般逻辑上要求：“D对象是C对象的固有属性或组成部分”</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CPoint</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> x, y;</span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">class</span> <span class="title class_">CCircle</span>;</span><br><span class="line">    <span class="comment">//便于Ccirle类操作其圆心</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CCircle</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> r;</span><br><span class="line">    CPoint center;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>复合关系的另一种写法：（可能算下表中的关联关系吧？）</p><p>例题：为“狗”类设一个“业主”类的对象指针；为“业主”类设一个“狗”类的对象指针数组。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CMaster</span>; <span class="comment">//CMaster必须提前声明，不能先</span></span><br><span class="line">            <span class="comment">//写CMaster类后写Cdog类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CDog</span></span><br><span class="line">&#123;</span><br><span class="line">    CMaster *pm;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CMaster</span></span><br><span class="line">&#123;</span><br><span class="line">    CDog *dogs[<span class="number">10</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="/images/2024-01-09-14-04-50-image.png" alt="" /></p><h5 id="3-派生类覆盖基类成员"><a class="markdownIt-Anchor" href="#3-派生类覆盖基类成员"></a> 3. 派生类覆盖基类成员</h5><p>派生类可以定义一个和基类成员同名的成员，这叫覆盖。在派生类中访问这类成员时，缺省的情况是访问派生类中定义的成员。要在派生类中访问由基类定义的同名成员时，要使用作用域符号<code>::</code>。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">base</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="type">int</span> j;<span class="type">int</span> i;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span>&#123;cout&lt;&lt;<span class="string">&quot;fuck&quot;</span>&lt;&lt;endl;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">derived</span> : <span class="keyword">public</span> base</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">access</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span>&#123;cout&lt;&lt;<span class="string">&quot;fucku&quot;</span>&lt;&lt;endl;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">derived::access</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    j = <span class="number">5</span>;        <span class="comment">//引用的是基类的j（只有一个j）</span></span><br><span class="line">    i = <span class="number">5</span>;        <span class="comment">//引用的是派生类的 i</span></span><br><span class="line">    base::i = <span class="number">5</span>;  <span class="comment">//引用的是基类的 i</span></span><br><span class="line">    <span class="built_in">func</span>();       <span class="comment">//派生类的</span></span><br><span class="line">    base::<span class="built_in">func</span>(); <span class="comment">//基类的</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    derived obj;</span><br><span class="line">    obj.i = <span class="number">1</span>;</span><br><span class="line">    obj.base::i = <span class="number">1</span>;</span><br><span class="line">    obj.<span class="built_in">access</span>();</span><br><span class="line">    cout&lt;&lt;obj.j&lt;&lt;endl;<span class="comment">//obj.j改成obj.base::j输出一样的结果</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fucku</span><br><span class="line">fuck</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><p><img src="/images/2024-01-09-14-24-08-image.png" alt="" /></p><p>注：若在基类中加入<code>int k;</code>并且在access方法中加入<code>k=3;</code>则报错，因为派生类的成员函数无权访问基类的私有变量。</p><h5 id="4-类的保护成员"><a class="markdownIt-Anchor" href="#4-类的保护成员"></a> 4. 类的保护成员</h5><ul><li><p>基类的private成员：可以被下列函数访问</p><ul><li><p>基类的成员函数</p></li><li><p>基类的友元函数</p></li></ul></li><li><p>基类的public成员：可以被下列函数访问</p><ul><li><p>基类的成员函数</p></li><li><p>基类的友元函数</p></li><li><p>派生类的成员函数</p></li><li><p>派生类的友元函数</p></li><li><p>其他的函数</p></li></ul></li><li><p>基类的protected成员：可以被下列函数访问</p><ul><li><p>基类的成员函数</p></li><li><p>基类的友元函数</p></li><li><p>派生类的成员函数可以访问当前对象和其它对象的基类的保护成员</p></li></ul></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Father</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="type">int</span> nPrivate; <span class="comment">//私有成员</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="type">int</span> nPublic; <span class="comment">//公有成员</span></span><br><span class="line">    <span class="keyword">protected</span>:</span><br><span class="line">        <span class="type">int</span> nProtected; <span class="comment">// 保护成员</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> : <span class="keyword">public</span> Father</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">AccessFather</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        nPublic = <span class="number">1</span>;    <span class="comment">// ok;</span></span><br><span class="line">        nPrivate = <span class="number">1</span>;   <span class="comment">// wrong</span></span><br><span class="line">        nProtected = <span class="number">1</span>; <span class="comment">// OK，访问从基类继承的protected成员</span></span><br><span class="line">        Son f;</span><br><span class="line">        f.nProtected = <span class="number">1</span>; <span class="comment">// ok</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Father f;</span><br><span class="line">    Son s;</span><br><span class="line">    f.nPublic = <span class="number">1</span>;    <span class="comment">// Ok</span></span><br><span class="line">    s.nPublic = <span class="number">1</span>;    <span class="comment">// Ok</span></span><br><span class="line">    f.nProtected = <span class="number">1</span>; <span class="comment">// error</span></span><br><span class="line">    f.nPrivate = <span class="number">1</span>;   <span class="comment">// error</span></span><br><span class="line">    s.nProtected = <span class="number">1</span>; <span class="comment">// error</span></span><br><span class="line">    s.nPrivate = <span class="number">1</span>;   <span class="comment">// error</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5-派生类的构造函数"><a class="markdownIt-Anchor" href="#5-派生类的构造函数"></a> 5. 派生类的构造函数</h5><p>例如，我们写了以下 “昆虫”类 ：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Bug</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="type">int</span> nLegs;</span><br><span class="line">        <span class="type">int</span> nColor;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="type">int</span> nType;</span><br><span class="line">        <span class="built_in">Bug</span>(<span class="type">int</span> legs, <span class="type">int</span> color);</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">PrintBug</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FlyBug</span> : <span class="keyword">public</span> Bug <span class="comment">// FlyBug是Bug的派生类</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> nWings;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="built_in">FlyBug</span>(<span class="type">int</span> legs, <span class="type">int</span> color, <span class="type">int</span> wings);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>继承关系派生类的构造函数的写法：</li></ul><p>对于类FlyBug而言，<u>只能使用</u> 初始化列表构造：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Bug的构造函数没有关系，跟之前一样的</span></span><br><span class="line">Bug::<span class="built_in">Bug</span>(<span class="type">int</span> legs, <span class="type">int</span> color)</span><br><span class="line">&#123;</span><br><span class="line">    nLegs = legs;</span><br><span class="line">    nColor = color;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//错误的FlyBug构造函数</span></span><br><span class="line">FlyBug::<span class="built_in">FlyBug</span>(<span class="type">int</span> legs, <span class="type">int</span> color, <span class="type">int</span> wings)</span><br><span class="line">&#123;</span><br><span class="line">    nLegs = legs;   <span class="comment">// 不能访问</span></span><br><span class="line">    nColor = color; <span class="comment">// 不能访问</span></span><br><span class="line">    nType = <span class="number">1</span>;      <span class="comment">// ok</span></span><br><span class="line">    nWings = wings;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//正确的FlyBug构造函数：</span></span><br><span class="line">FlyBug::<span class="built_in">FlyBug</span>(<span class="type">int</span> legs, <span class="type">int</span> color, <span class="type">int</span> wings) : <span class="built_in">Bug</span>(legs, color)</span><br><span class="line">&#123;</span><br><span class="line">    nWings = wings;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用时，即初始化对象时写法：<code>FlyBug fb ( 2,3,4);</code></p><p>注意：</p><ul><li><p>在创建派生类的对象时，<u>需要调用基类的构造函数</u>：初始化派生类对象中从基类继承的成员。在执行一个派生类的构造函数之前，总是<u>先执行基类的构造函数</u>。</p></li><li><p>调用基类构造函数的两种方式</p><ul><li>显式方式：在派生类的构造函数中，为基类的构造函数提供参数.</li></ul><p><code>derived::derived(arg_derived-list):base(arg_base-list)</code></p><ul><li>隐式方式：在派生类的构造函数中，省略基类构造函数时，派生类的构造函数则<u>自动调用基类的无参构造函数</u></li></ul></li><li><p>派生类的析构函数被执行时，执行完派生类的析构函数后，自动调用基类的析构函数。</p></li></ul><p>考虑以下程序：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        <span class="built_in">Base</span>(<span class="type">int</span> i) : <span class="built_in">n</span>(i)</span><br><span class="line">        &#123;cout &lt;&lt; <span class="string">&quot;Base &quot;</span> &lt;&lt; n &lt;&lt; <span class="string">&quot; constructed&quot;</span> &lt;&lt; endl;&#125;</span><br><span class="line">        ~<span class="built_in">Base</span>()</span><br><span class="line">        &#123;cout &lt;&lt; <span class="string">&quot;Base &quot;</span> &lt;&lt; n &lt;&lt; <span class="string">&quot; destructed&quot;</span> &lt;&lt; endl;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Derived</span> : <span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="built_in">Derived</span>(<span class="type">int</span> i) : <span class="built_in">Base</span>(i)</span><br><span class="line">        &#123;cout &lt;&lt; <span class="string">&quot;Derived constructed&quot;</span> &lt;&lt; endl;&#125;</span><br><span class="line">        ~<span class="built_in">Derived</span>()</span><br><span class="line">        &#123;cout &lt;&lt; <span class="string">&quot;Derived destructed&quot;</span> &lt;&lt; endl;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Derived <span class="title">Obj</span><span class="params">(<span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Base 3 constructed</span><br><span class="line">Derived constructed</span><br><span class="line">Derived destructed</span><br><span class="line">Base 3 destructed</span><br></pre></td></tr></table></figure><h5 id="6-包含成员对象的派生类的构造函数写法"><a class="markdownIt-Anchor" href="#6-包含成员对象的派生类的构造函数写法"></a> 6. 包含成员对象的派生类的构造函数写法</h5><p>即：第一类复合关系的派生函数的构造函数的写法（关键在最后一行啊前面是铺垫）</p><p>也是使用初始化列表：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Bug</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="type">int</span> nLegs;</span><br><span class="line">        <span class="type">int</span> nColor;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="type">int</span> nType;</span><br><span class="line">        <span class="built_in">Bug</span>(<span class="type">int</span> legs, <span class="type">int</span> color);</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">PrintBug</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Skill</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="built_in">Skill</span>(<span class="type">int</span> n) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FlyBug</span> : <span class="keyword">public</span> Bug</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> nWings;</span><br><span class="line">    Skill sk1, sk2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="built_in">FlyBug</span>(<span class="type">int</span> legs, <span class="type">int</span> color, <span class="type">int</span> wings);</span><br><span class="line">&#125;;</span><br><span class="line">FlyBug::<span class="built_in">FlyBug</span>(<span class="type">int</span> legs, <span class="type">int</span> color, <span class="type">int</span> wings) : <span class="built_in">Bug</span>(legs, color), <span class="built_in">sk1</span>(<span class="number">5</span>), <span class="built_in">sk2</span>(color), <span class="built_in">nWings</span>(wings)&#123;&#125;</span><br></pre></td></tr></table></figure><h5 id="7封闭派生类对象的构造函数和析构函数的执行顺序"><a class="markdownIt-Anchor" href="#7封闭派生类对象的构造函数和析构函数的执行顺序"></a> 7.封闭派生类对象的构造函数和析构函数的执行顺序</h5><p>在创建派生类的对象时:</p><ol><li><p>先执行基类的构造函数，用以初始化派生类对象中从基类继承的成员；</p></li><li><p>再执行成员对象类的构造函数，用以初始化派生类对象中成员对象。</p></li><li><p>最后执行派生类自己的构造函数</p></li></ol><p>在派生类对象消亡时：</p><ol><li><p>先执行派生类自己的析构函数</p></li><li><p>再依次执行各成员对象类的析构函数</p></li><li><p>最后执行基类的析构函数</p></li></ol><p>析构函数的调用顺序与构造函数的调用顺序相反。</p><h5 id="8public继承的赋值兼容规则"><a class="markdownIt-Anchor" href="#8public继承的赋值兼容规则"></a> 8.public继承的赋值兼容规则</h5><p>以public方式继承时，考虑以下程序段：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">base</span></span><br><span class="line">&#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">derived</span> : <span class="keyword">public</span> base</span><br><span class="line">&#123;&#125;;</span><br><span class="line">base b;</span><br><span class="line">derived d;</span><br></pre></td></tr></table></figure><blockquote><p>1） 派生类的对象可以赋值给基类对象</p><p>b = d;</p><p>2） 派生类对象可以初始化基类引用</p><p>base &amp; br = d;</p><p>3） 派生类对象的地址可以赋值给基类指针</p><p>base * pb = &amp; d;</p></blockquote><p>如果派生方式是 private或protected，则上述三条不可行。</p><p>protected继承和private继承：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">base</span></span><br><span class="line">&#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">derived</span> : <span class="keyword">protected</span> base</span><br><span class="line">&#123;&#125;;</span><br><span class="line">base b;</span><br><span class="line">derived d;</span><br></pre></td></tr></table></figure><ul><li><p>protected继承时，基类的public成员和protected成员成为派生类的protected成员。</p></li><li><p>private继承时，基类的public成员成为派生类的private成员，基类的protected成员成为派生类的不可访问成员。</p></li><li><p>protected和private继承不是“是”的关系。</p></li></ul><h5 id="9-基类与派生类的指针强制转换"><a class="markdownIt-Anchor" href="#9-基类与派生类的指针强制转换"></a> 9. 基类与派生类的指针强制转换</h5><p>公有派生的情况下,派生类对象的指针可以直接赋值给基类指针：</p><p><code>Base * ptrBase = &amp;objDerived;</code></p><p><em>因为基类指针指向基类对象的首地址，也就是指向派生类对象，而派生类的所有变量地址中前几个是基类变量所拥有的地址，但是因为指针是指向基类的指针，所有只能访问的内存是基类的那几个变量。</em></p><ul><li><p>ptrBase指向的是一个Derived类的对象；</p></li><li><p>*ptrBase可以看作一个Base类的对象，访问它的public成员直接通过ptrBase即可，但不能通过ptrBase访问objDerived对象中属于Derived类而不属于Base类的成员</p></li><li><p>即便基类指针指向的是一个派生类的对象，也不能通过基类指针访问基类没有，而派生类中有的成员。</p></li></ul><p>但是，通过强制指针类型转换，可以把ptrBase转换成Derived类的指针：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Base * ptrBase = &amp;objDerived;</span><br><span class="line">Derived *ptrDerived = (Derived * ) ptrBase;</span><br></pre></td></tr></table></figure><p>程序员要保证ptrBase指向的是一个Derived类的对象，否则很容易会出错。</p><h5 id="10直接基类和间接基类"><a class="markdownIt-Anchor" href="#10直接基类和间接基类"></a> 10.直接基类和间接基类</h5><p>在声明派生类时，只需要列出它的直接基类</p><p>派生类的成员包括：</p><ul><li><p>派生类自己定义的成员</p></li><li><p>直接基类中的所有成员</p></li><li><p>所有间接基类的全部成员</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        <span class="built_in">Base</span>(<span class="type">int</span> i) : <span class="built_in">n</span>(i)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Base &quot;</span> &lt;&lt; n &lt;&lt; <span class="string">&quot; constructed&quot;</span></span><br><span class="line">                &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        ~<span class="built_in">Base</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Base &quot;</span> &lt;&lt; n &lt;&lt; <span class="string">&quot; destructed&quot;</span></span><br><span class="line">                &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Derived</span> : <span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="built_in">Derived</span>(<span class="type">int</span> i) : <span class="built_in">Base</span>(i)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Derived constructed&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        ~<span class="built_in">Derived</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Derived destructed&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MoreDerived</span> : <span class="keyword">public</span> Derived</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="built_in">MoreDerived</span>() : <span class="built_in">Derived</span>(<span class="number">4</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;More Derived constructed&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        ~<span class="built_in">MoreDerived</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;More Derived destructed&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MoreDerived Obj;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Base 4 constructed</span><br><span class="line">Derived constructed</span><br><span class="line">More Derived constructed</span><br><span class="line">More Derived destructed</span><br><span class="line">Derived destructed</span><br><span class="line">Base 4 destructed</span><br></pre></td></tr></table></figure><h5 id="11-多继承"><a class="markdownIt-Anchor" href="#11-多继承"></a> 11. 多继承</h5><p>多继承即一个子类可以有多个父类，它继承了多个父类的特性。</p><p>C++ 类可以从多个类继承成员，语法如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> &lt;派生类名&gt;:&lt;继承方式<span class="number">1</span>&gt;&lt;基类名<span class="number">1</span>&gt;,&lt;继承方式<span class="number">2</span>&gt;&lt;基类名<span class="number">2</span>&gt;,…</span><br><span class="line">&#123;</span><br><span class="line">&lt;派生类类体&gt;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// 基类 Shape</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Shape</span> </span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">setWidth</span><span class="params">(<span class="type">int</span> w)</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">         width = w;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">setHeight</span><span class="params">(<span class="type">int</span> h)</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">         height = h;</span><br><span class="line">      &#125;</span><br><span class="line">   <span class="keyword">protected</span>:</span><br><span class="line">      <span class="type">int</span> width;</span><br><span class="line">      <span class="type">int</span> height;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基类 PaintCost</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PaintCost</span> </span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="function"><span class="type">int</span> <span class="title">getCost</span><span class="params">(<span class="type">int</span> area)</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">         <span class="keyword">return</span> area * <span class="number">70</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 派生类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Rectangle</span>: <span class="keyword">public</span> Shape, <span class="keyword">public</span> PaintCost<span class="comment">//多继承</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="function"><span class="type">int</span> <span class="title">getArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">      </span>&#123; </span><br><span class="line">         <span class="keyword">return</span> (width * height); </span><br><span class="line">      &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   Rectangle Rect;</span><br><span class="line">   <span class="type">int</span> area;</span><br><span class="line"></span><br><span class="line">   Rect.<span class="built_in">setWidth</span>(<span class="number">5</span>);</span><br><span class="line">   Rect.<span class="built_in">setHeight</span>(<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">   area = Rect.<span class="built_in">getArea</span>();</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 输出对象的面积</span></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Total area: &quot;</span> &lt;&lt; Rect.<span class="built_in">getArea</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 输出总花费</span></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Total paint cost: $&quot;</span> &lt;&lt; Rect.<span class="built_in">getCost</span>(area) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Total area: 35</span><br><span class="line">Total paint cost: $2450</span><br></pre></td></tr></table></figure><p>附录：Python面向对象程序设计菜鸟教程链接<a href="https://www.runoob.com/python/python-object.html">Python 面向对象 | 菜鸟教程 (runoob.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;继承与派生&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#继承与派生&quot;&gt;&lt;/a&gt; 继承与派生&lt;/h3&gt;
&lt;h5 id=&quot;1定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1定义&quot;&gt;&lt;/a&gt; 1.定义&lt;/h</summary>
      
    
    
    
    <category term="OOP面向对象" scheme="https://xqc-1368.github.io/categories/OOP%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
    <category term="C++" scheme="https://xqc-1368.github.io/tags/C/"/>
    
    <category term="OOP" scheme="https://xqc-1368.github.io/tags/OOP/"/>
    
    <category term="继承与复合关系" scheme="https://xqc-1368.github.io/tags/%E7%BB%A7%E6%89%BF%E4%B8%8E%E5%A4%8D%E5%90%88%E5%85%B3%E7%B3%BB/"/>
    
    <category term="派生类" scheme="https://xqc-1368.github.io/tags/%E6%B4%BE%E7%94%9F%E7%B1%BB/"/>
    
  </entry>
  
</feed>
